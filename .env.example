# ============================================================================
# UNCHAINED TICKETS - ENVIRONMENT VARIABLES
# ============================================================================
#
# IMPORTANT: This file is a template. DO NOT commit your actual .env file!
#
# For local development:
#   1. Copy this file: cp .env.example .env
#   2. Fill in your values
#   3. Never commit .env to git
#
# For Vercel deployment:
#   See: docs/deployment/VERCEL_ENV_SETUP.md
#
# Environment-Specific Variables:
#   [ALL ENVIRONMENTS] = Set for Production, Preview, AND Development in Vercel
#   [PRODUCTION ONLY] = Set for Production environment only
#   [PREVIEW+DEV ONLY] = Set for Preview + Development environments only
#
# ============================================================================

# ============================================================================
# PROJECT CONFIGURATION [ALL ENVIRONMENTS]
# ============================================================================

NEXT_PUBLIC_PROJECT_NAME="Unchained Tickets"
NODE_ENV=production

# ============================================================================
# BLOCKCHAIN CONFIGURATION - ENVIRONMENT SPECIFIC!
# ============================================================================

# [PRODUCTION ONLY] - Base Mainnet Configuration
# Set these ONLY for Production environment in Vercel
# NEXT_PUBLIC_CHAIN_ID=8453
# NEXT_PUBLIC_NETWORK=mainnet
# NEXT_PUBLIC_DEV_MODE=false
# NEXT_PUBLIC_BASE_RPC_URL=https://mainnet.base.org

# [PREVIEW+DEV ONLY] - Base Sepolia Testnet Configuration
# Set these ONLY for Preview + Development environments in Vercel
# For local development, use these values:
NEXT_PUBLIC_CHAIN_ID=84532
NEXT_PUBLIC_NETWORK=testnet
NEXT_PUBLIC_DEV_MODE=true
NEXT_PUBLIC_BASE_RPC_URL=https://sepolia.base.org

# ============================================================================
# SMART CONTRACT ADDRESSES - ENVIRONMENT SPECIFIC!
# ============================================================================

# [PRODUCTION ONLY] - Your mainnet contract address
# NFT_CONTRACT_ADDRESS=0xYOUR_MAINNET_CONTRACT_ADDRESS
# NEXT_PUBLIC_NFT_CONTRACT_ADDRESS=0xYOUR_MAINNET_CONTRACT_ADDRESS

# [PREVIEW+DEV ONLY] - Current testnet contract address
# For local development, use these values:
NFT_CONTRACT_ADDRESS=0xeDAE8268830E998Ff359Fdd62CE33E3131731Aa3
NEXT_PUBLIC_NFT_CONTRACT_ADDRESS=0xeDAE8268830E998Ff359Fdd62CE33E3131731Aa3

# ============================================================================
# MINTING WALLET CONFIGURATION - ENVIRONMENT SPECIFIC!
# ============================================================================
# ⚠️ SECURITY: NEVER commit private keys to git!
# This wallet must have MINTER_ROLE on the UnchainedTickets contract

# Private Key Format Requirements:
# - Must be exactly 66 characters (0x + 64 hex characters)
# - Example: 0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef
# - The 0x prefix is optional (will be added automatically)
# - Verify format: node scripts/verify-minting-key.mjs

# [PRODUCTION ONLY] - Mainnet minting wallet
# MINTING_PRIVATE_KEY=0xYOUR_MAINNET_MINTER_PRIVATE_KEY
# MINTING_WALLET_ADDRESS=0xYOUR_MAINNET_MINTER_ADDRESS

# [PREVIEW+DEV ONLY] - Testnet minting wallet
# For local development, add your testnet minting wallet here:
MINTING_PRIVATE_KEY=0xYourTestnetPrivateKeyHere...
MINTING_WALLET_ADDRESS=0xYourTestnetMinterAddressHere

# ============================================================================
# DATABASE CONFIGURATION [ALL ENVIRONMENTS]
# ============================================================================

# Supabase or Vercel Postgres connection strings
# Get from: Supabase Dashboard → Settings → Database
# Or: Vercel Dashboard → Storage → Your Database

# Session pooler (supports prepared statements, required for migrations)
DATABASE_URL="postgresql://user:password@host:5432/database?sslmode=require"

# Direct URL for migrations in serverless environments
DIRECT_URL="postgresql://user:password@host:5432/database?sslmode=require"

# ============================================================================
# AUTHENTICATION & SECURITY [ALL ENVIRONMENTS]
# ============================================================================

# JWT Secret (minimum 32 characters)
# Generate with: openssl rand -hex 32
JWT_SECRET=your_generated_jwt_secret_minimum_32_characters

# Admin Password (minimum 12 characters)
# Use strong password with uppercase, lowercase, numbers, and symbols
ADMIN_PASSWORD=your_secure_admin_password_here

# ============================================================================
# DEVELOPER ACCESS [ALL ENVIRONMENTS]
# ============================================================================

# Your personal Base wallet address for elevated developer access
# When this wallet connects, it gets dev role with full dashboard access
DEV_WALLET_ADDRESS=0xYourBaseWalletAddressHere
NEXT_PUBLIC_DEV_WALLET_ADDRESS=0xYourBaseWalletAddressHere

# ============================================================================
# ONCHAINKIT & COINBASE CONFIGURATION [ALL ENVIRONMENTS]
# ============================================================================

# OnchainKit API Key
# Get from: https://portal.cdp.coinbase.com/
NEXT_PUBLIC_ONCHAINKIT_API_KEY=your_coinbase_api_key_here

# Coinbase Developer Platform (CDP) - Required for Onramp
NEXT_PUBLIC_CDP_PROJECT_ID=your_cdp_project_id_here
CDP_API_KEY_NAME=organizations/YOUR_ORG_ID/apiKeys/YOUR_KEY_ID
CDP_API_KEY_PRIVATE_KEY="-----BEGIN EC PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END EC PRIVATE KEY-----"

# Coinbase Commerce (for crypto-only payments)
COINBASE_COMMERCE_API_KEY=your_commerce_api_key_here
COINBASE_WEBHOOK_SECRET=your_webhook_secret_here

# Coinbase Onramp Configuration
NEXT_PUBLIC_COINBASE_ONRAMP_ENABLED=true
COINBASE_ONRAMP_MINIMUM_USD=10.00
COINBASE_ONRAMP_API_URL=https://api.developer.coinbase.com

# ============================================================================
# BASESCAN API [ALL ENVIRONMENTS]
# ============================================================================

# BaseScan API Key for contract verification
# Get from: https://basescan.org/myapikey
BASESCAN_API_KEY=your_basescan_api_key_here

# ============================================================================
# APPLICATION URLS [ALL ENVIRONMENTS]
# ============================================================================

# For Production: Use your production domain
# For Preview/Dev: Use localhost or preview URL
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_API_BASE_URL=http://localhost:3000

# ============================================================================
# EXTERNAL SERVICES [ALL ENVIRONMENTS] - OPTIONAL
# ============================================================================

# SerpAPI for event discovery (optional)
# Get from: https://serpapi.com/manage-api-key
SERPAPI_KEY=your_serpapi_key_for_google_events

# Stability AI for poster generation (optional)
# Get from: https://platform.stability.ai/account/keys
STABILITY_API_KEY=your_stability_api_key_here
NEXT_PUBLIC_POSTER_GENERATION_ENABLED=true

# ============================================================================
# MONITORING & ERROR TRACKING [ALL ENVIRONMENTS] - OPTIONAL
# ============================================================================

# Sentry error tracking (optional but recommended)
# Get from: https://sentry.io/
NEXT_PUBLIC_SENTRY_DSN="https://YOUR_SENTRY_KEY@sentry.io/YOUR_PROJECT_ID"
SENTRY_AUTH_TOKEN="your_sentry_auth_token"
SENTRY_ORG="your-org-name"
SENTRY_PROJECT="unchained-tickets"

# ============================================================================
# VERCEL DEPLOYMENT CHECKLIST
# ============================================================================
#
# Before deploying to Vercel, ensure you have:
#
# ✅ All [ALL ENVIRONMENTS] variables added with all 3 environments selected
# ✅ [PRODUCTION ONLY] variables added for Production environment only
# ✅ [PREVIEW+DEV ONLY] variables added for Preview + Development only
# ✅ Verified private key format: node scripts/verify-minting-key.mjs
# ✅ Verified environment config: node scripts/verify-env-config.mjs
# ✅ Read deployment guide: docs/deployment/VERCEL_ENV_SETUP.md
#
# ============================================================================
# SECURITY BEST PRACTICES
# ============================================================================
#
# ⚠️ NEVER commit .env files to git
# ⚠️ Use different wallets for mainnet vs testnet
# ⚠️ Keep production private keys in Vercel secrets ONLY
# ⚠️ Rotate JWT_SECRET periodically (every 6 months)
# ⚠️ Use strong, unique passwords for all accounts
# ⚠️ Enable 2FA on all service accounts
# ⚠️ Fund mainnet minting wallet with minimal ETH (enough for ~100 mints)
# ⚠️ Never share private keys via Slack/Discord/email
#
# ============================================================================
# TROUBLESHOOTING
# ============================================================================
#
# If you encounter issues:
#
# 1. Run verification script: node scripts/verify-env-config.mjs
# 2. Check private key format: node scripts/verify-minting-key.mjs
# 3. Review deployment guide: docs/deployment/VERCEL_ENV_SETUP.md
# 4. Check Vercel deployment logs for specific errors
# 5. Verify all variables are set with correct environment scopes
#
# ============================================================================
# USEFUL COMMANDS
# ============================================================================
#
# Generate JWT secret:
#   openssl rand -hex 32
#
# Generate admin password:
#   openssl rand -base64 32
#
# Generate minting wallet:
#   npx hardhat accounts
#
# Verify environment:
#   node scripts/verify-env-config.mjs
#
# Verify private key:
#   node scripts/verify-minting-key.mjs
#
# Test database connection:
#   npx prisma db pull
#
# ============================================================================
# RESOURCES
# ============================================================================
#
# Deployment Guide:
#   docs/deployment/VERCEL_ENV_SETUP.md
#
# Base Network Docs:
#   https://docs.base.org/
#
# Base Sepolia Faucet:
#   https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet
#
# Coinbase Developer Platform:
#   https://portal.cdp.coinbase.com/
#
# BaseScan:
#   https://basescan.org/ (mainnet)
#   https://sepolia.basescan.org/ (testnet)
#
# Vercel Environment Variables Docs:
#   https://vercel.com/docs/concepts/projects/environment-variables
#
# ============================================================================
