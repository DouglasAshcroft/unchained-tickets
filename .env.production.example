# Unchained Tickets - Production Environment Variables Template
# Copy this to .env.production and fill in the values
# ⚠️ NEVER commit actual .env files to git!

# ============================================
# PROJECT CONFIGURATION
# ============================================
NEXT_PUBLIC_PROJECT_NAME="Unchained Tickets"
NODE_ENV=production

# ============================================
# BLOCKCHAIN CONFIGURATION (BASE MAINNET)
# ============================================

# Chain Configuration
NEXT_PUBLIC_CHAIN_ID=8453
NEXT_PUBLIC_NETWORK=mainnet
NEXT_PUBLIC_BASE_RPC_URL="https://api.developer.coinbase.com/rpc/v1/base/YOUR_API_KEY_HERE"

# Smart Contract
NFT_CONTRACT_ADDRESS="0x_YOUR_DEPLOYED_CONTRACT_ADDRESS_HERE"

# Minting Wallet (⚠️ KEEP SECURE!)
MINTING_WALLET_PRIVATE_KEY="0x_YOUR_PRODUCTION_PRIVATE_KEY_HERE"
MINTING_WALLET_ADDRESS="0x_YOUR_PRODUCTION_WALLET_ADDRESS_HERE"

# Treasury Wallet (for royalty splits)
UNCHAINED_TREASURY_WALLET="0x_YOUR_TREASURY_WALLET_ADDRESS_HERE"

# Basescan API (for contract verification)
BASESCAN_API_KEY="YOUR_BASESCAN_API_KEY_HERE"

# ============================================
# DATABASE CONFIGURATION
# ============================================

# Vercel Postgres (Recommended)
DATABASE_URL="postgresql://user:password@host:5432/database?sslmode=require"
POSTGRES_PRISMA_URL="postgresql://user:password@host:5432/database?sslmode=require&pgbouncer=true"
POSTGRES_URL_NON_POOLING="postgresql://user:password@host:5432/database?sslmode=require"

# OR Supabase
# DATABASE_URL="postgresql://postgres:[password]@db.[project].supabase.co:5432/postgres"

# ============================================
# AUTHENTICATION
# ============================================

# JWT Secret (generate with: openssl rand -hex 32)
JWT_SECRET="GENERATE_A_SECURE_64_CHARACTER_HEX_STRING_HERE"

# Admin Password
ADMIN_PASSWORD="GENERATE_A_SECURE_PASSWORD_HERE"

# Developer Access (for RBAC)
DEV_WALLET_ADDRESS="0x_YOUR_DEVELOPER_WALLET_ADDRESS_HERE"
NEXT_PUBLIC_DEV_WALLET_ADDRESS="0x_YOUR_DEVELOPER_WALLET_ADDRESS_HERE"

# ============================================
# PAYMENT PROCESSING
# ============================================

# Coinbase Commerce (Production)
COINBASE_COMMERCE_API_KEY="YOUR_PRODUCTION_COINBASE_COMMERCE_API_KEY"
COINBASE_WEBHOOK_SECRET="YOUR_WEBHOOK_SECRET_FROM_COINBASE_DASHBOARD"

# Coinbase Pay (Optional)
COINBASE_PAY_API_KEY="YOUR_COINBASE_PAY_API_KEY_IF_NEEDED"
COINBASE_PAY_API_URL="https://api.coinbase.com/v3/buy/sessions"
COINBASE_PAY_SUCCESS_URL="https://YOUR_DOMAIN.com/checkout/success"
COINBASE_PAY_CANCEL_URL="https://YOUR_DOMAIN.com/checkout/cancel"

# ============================================
# ONCHAINKIT CONFIGURATION
# ============================================
NEXT_PUBLIC_ONCHAINKIT_API_KEY="YOUR_ONCHAINKIT_API_KEY_HERE"

# ============================================
# APPLICATION URLS
# ============================================
NEXT_PUBLIC_APP_URL="https://YOUR_PRODUCTION_DOMAIN.com"
NEXT_PUBLIC_API_BASE_URL="https://YOUR_PRODUCTION_DOMAIN.com"

# ============================================
# FEATURE FLAGS
# ============================================

# Development Mode (MUST be false for production!)
NEXT_PUBLIC_DEV_MODE=false

# ============================================
# MONITORING & ERROR TRACKING
# ============================================

# Sentry (Optional but recommended)
NEXT_PUBLIC_SENTRY_DSN="https://YOUR_SENTRY_KEY@sentry.io/YOUR_PROJECT_ID"
SENTRY_AUTH_TOKEN="YOUR_SENTRY_AUTH_TOKEN"
SENTRY_ORG="your-org-name"
SENTRY_PROJECT="unchained-tickets"

# ============================================
# NOTES
# ============================================

# Security Best Practices:
# 1. Never commit this file with real values
# 2. Rotate JWT_SECRET periodically
# 3. Use strong, unique passwords
# 4. Keep private keys in Vercel secrets only
# 5. Enable 2FA on all service accounts

# How to generate secure values:
# - JWT_SECRET: openssl rand -hex 32
# - ADMIN_PASSWORD: openssl rand -base64 32
# - Private Key: Use hardware wallet or secure key generation

# Vercel Environment Variables:
# Add all these variables to:
# Vercel Dashboard → Your Project → Settings → Environment Variables
# Set scope to: Production

# Database Setup:
# Option A (Recommended): Vercel Postgres
#   1. Vercel Dashboard → Storage → Create Database → Postgres
#   2. Copy connection strings from Vercel dashboard
#   3. Run: npx prisma migrate deploy
#
# Option B: Supabase
#   1. Create project at supabase.com
#   2. Get connection string from Settings → Database
#   3. Run: DATABASE_URL="..." npx prisma migrate deploy
