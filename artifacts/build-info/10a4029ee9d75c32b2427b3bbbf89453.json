{"id":"10a4029ee9d75c32b2427b3bbbf89453","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC2981.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC2981\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) public view virtual returns (address receiver, uint256 amount) {\n        RoyaltyInfo storage _royaltyInfo = _tokenRoyaltyInfo[tokenId];\n        address royaltyReceiver = _royaltyInfo.receiver;\n        uint96 royaltyFraction = _royaltyInfo.royaltyFraction;\n\n        if (royaltyReceiver == address(0)) {\n            royaltyReceiver = _defaultRoyaltyInfo.receiver;\n            royaltyFraction = _defaultRoyaltyInfo.royaltyFraction;\n        }\n\n        uint256 royaltyAmount = (salePrice * royaltyFraction) / _feeDenominator();\n\n        return (royaltyReceiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\nimport {Arrays} from \"../../../utils/Arrays.sol\";\n\n/**\n * @dev Extension of ERC-1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    using Arrays for uint256[];\n\n    mapping(uint256 id => uint256) private _totalSupply;\n    uint256 private _totalSupplyAll;\n\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /// @inheritdoc ERC1155\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                _totalSupply[ids.unsafeMemoryAccess(i)] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            _totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values.unsafeMemoryAccess(i);\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    _totalSupply[ids.unsafeMemoryAccess(i)] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                _totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/UnchainedTickets.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title UnchainedTickets\n * @dev Advanced ERC1155 NFT contract for event tickets on Base blockchain\n * @notice Features:\n * - Royalty enforcement (ERC2981) for secondary sales\n * - Configurable ticket tiers (VIP, GA, etc.) with access control\n * - Perks tracking (meals, drinks, etc.) and consumption status\n * - Time-based resale restrictions (no sales during event)\n * - Automatic transformation to souvenir NFT after use\n * - Section and seat assignments\n * - Anti-counterfeiting through blockchain ownership\n */\ncontract UnchainedTickets is ERC1155, Ownable, ERC1155Burnable, ERC1155Supply, ERC2981 {\n    using Strings for uint256;\n\n    // Contract metadata\n    string public name = \"Unchained Tickets\";\n    string public symbol = \"UNCH\";\n\n    // Base URI for token metadata\n    string private _baseURI;\n\n    // Ticket tier types\n    enum TicketTier {\n        GENERAL_ADMISSION,\n        VIP,\n        PREMIUM,\n        BACKSTAGE,\n        CUSTOM\n    }\n\n    // Event management\n    struct EventInfo {\n        uint256 maxSupply;          // Maximum tickets for this event\n        uint256 eventTimestamp;     // Event start time (Unix timestamp)\n        uint256 eventEndTimestamp;  // Event end time (for resale restrictions)\n        bool transferable;          // Can tickets be transferred before event?\n        bool active;                // Is event active (not cancelled)?\n        string metadataURI;         // IPFS or API URI for event metadata\n        string souvenirMetadataURI; // Metadata URI for post-event souvenir NFT\n        uint96 royaltyBps;          // Royalty in basis points (e.g., 500 = 5%)\n        address royaltyRecipient;   // Who receives royalties\n    }\n\n    // Ticket tier configuration\n    struct TierConfig {\n        TicketTier tier;\n        string tierName;            // e.g., \"VIP\", \"General Admission\"\n        uint256 maxSupply;          // Max tickets for this tier\n        uint256 priceCents;         // Price in cents (for reference)\n        string[] accessAreas;       // Areas this tier can access\n        string[] includedPerks;     // Perks included with tier\n    }\n\n    // Seat assignment (optional - for reserved seating)\n    struct SeatAssignment {\n        string section;\n        string row;\n        string seat;\n        bool assigned;\n    }\n\n    // Perk tracking\n    struct PerkConsumption {\n        string perkName;\n        uint256 maxQuantity;        // How many times can be redeemed\n        uint256 consumed;           // How many times redeemed\n    }\n\n    // Ticket state for transformation\n    enum TicketState {\n        ACTIVE,      // Valid ticket, not yet used\n        USED,        // Checked in, can still be at event\n        SOUVENIR     // Event ended, transformed to collectible\n    }\n\n    // Mappings\n    mapping(uint256 => EventInfo) public events;\n    mapping(uint256 => mapping(address => bool)) public usedTickets;\n    mapping(uint256 => mapping(address => TicketState)) public ticketStates;\n\n    // Tier management: eventId => tierId => TierConfig\n    mapping(uint256 => mapping(uint256 => TierConfig)) public eventTiers;\n    mapping(uint256 => uint256) public eventTierCount; // Number of tiers per event\n\n    // Seat assignments: eventId => tokenId => SeatAssignment\n    mapping(uint256 => mapping(uint256 => SeatAssignment)) public seatAssignments;\n\n    // Perk tracking: eventId => holder => perkName => consumption\n    mapping(uint256 => mapping(address => mapping(string => PerkConsumption))) public perkTracking;\n\n    // Token ID to tier mapping\n    mapping(uint256 => uint256) public tokenToTier;\n\n    // Counter for unique token IDs within events\n    mapping(uint256 => uint256) public eventTokenCounter;\n\n    // Events\n    event EventCreated(uint256 indexed eventId, uint256 maxSupply, uint256 eventTimestamp);\n    event TierCreated(uint256 indexed eventId, uint256 indexed tierId, string tierName);\n    event TicketMinted(uint256 indexed eventId, uint256 indexed tokenId, address indexed recipient, uint256 tierId);\n    event TicketUsed(uint256 indexed eventId, address indexed owner);\n    event TicketTransformed(uint256 indexed eventId, uint256 indexed tokenId, TicketState newState);\n    event PerkConsumed(uint256 indexed eventId, address indexed holder, string perkName, uint256 quantity);\n    event SeatAssigned(uint256 indexed eventId, uint256 indexed tokenId, string section, string row, string seat);\n    event RoyaltyConfigured(uint256 indexed eventId, address recipient, uint96 royaltyBps);\n\n    constructor(string memory baseURI_) ERC1155(\"\") Ownable(msg.sender) {\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev Create a new event with ticket supply and royalty configuration\n     */\n    function createEvent(\n        uint256 eventId,\n        uint256 maxSupply,\n        uint256 eventTimestamp,\n        uint256 eventEndTimestamp,\n        string memory metadataURI,\n        string memory souvenirMetadataURI,\n        address royaltyRecipient,\n        uint96 royaltyBps\n    ) external onlyOwner {\n        require(events[eventId].maxSupply == 0, \"Event already exists\");\n        require(maxSupply > 0, \"Max supply must be greater than 0\");\n        require(eventTimestamp > block.timestamp, \"Event must be in the future\");\n        require(eventEndTimestamp > eventTimestamp, \"Event end must be after start\");\n        require(royaltyBps <= 10000, \"Royalty cannot exceed 100%\");\n\n        events[eventId] = EventInfo({\n            maxSupply: maxSupply,\n            eventTimestamp: eventTimestamp,\n            eventEndTimestamp: eventEndTimestamp,\n            transferable: false,\n            active: true,\n            metadataURI: metadataURI,\n            souvenirMetadataURI: souvenirMetadataURI,\n            royaltyBps: royaltyBps,\n            royaltyRecipient: royaltyRecipient\n        });\n\n        // Set default royalty for this event\n        if (royaltyBps > 0 && royaltyRecipient != address(0)) {\n            _setTokenRoyalty(eventId, royaltyRecipient, royaltyBps);\n            emit RoyaltyConfigured(eventId, royaltyRecipient, royaltyBps);\n        }\n\n        emit EventCreated(eventId, maxSupply, eventTimestamp);\n    }\n\n    /**\n     * @dev Create a ticket tier for an event\n     */\n    function createTier(\n        uint256 eventId,\n        string memory tierName,\n        TicketTier tier,\n        uint256 maxSupply,\n        uint256 priceCents,\n        string[] memory accessAreas,\n        string[] memory includedPerks\n    ) external onlyOwner {\n        require(events[eventId].maxSupply > 0, \"Event does not exist\");\n\n        uint256 tierId = eventTierCount[eventId];\n\n        eventTiers[eventId][tierId] = TierConfig({\n            tier: tier,\n            tierName: tierName,\n            maxSupply: maxSupply,\n            priceCents: priceCents,\n            accessAreas: accessAreas,\n            includedPerks: includedPerks\n        });\n\n        eventTierCount[eventId]++;\n\n        emit TierCreated(eventId, tierId, tierName);\n    }\n\n    /**\n     * @dev Mint a ticket for a specific tier with optional seat assignment\n     */\n    function mintTicketWithTier(\n        uint256 eventId,\n        uint256 tierId,\n        address recipient,\n        string memory section,\n        string memory row,\n        string memory seat\n    ) external onlyOwner returns (uint256) {\n        require(events[eventId].active, \"Event is not active\");\n        require(tierId < eventTierCount[eventId], \"Invalid tier\");\n        require(recipient != address(0), \"Invalid recipient address\");\n\n        TierConfig memory tierConfig = eventTiers[eventId][tierId];\n\n        // Create unique token ID: eventId * 1000000 + counter\n        uint256 tokenId = (eventId * 1000000) + eventTokenCounter[eventId];\n        eventTokenCounter[eventId]++;\n\n        // Check supply limits\n        require(\n            totalSupply(eventId) < events[eventId].maxSupply,\n            \"Event sold out\"\n        );\n\n        // Mint the ticket\n        _mint(recipient, tokenId, 1, \"\");\n        tokenToTier[tokenId] = tierId;\n        ticketStates[eventId][recipient] = TicketState.ACTIVE;\n\n        // Assign seat if provided\n        if (bytes(section).length > 0) {\n            seatAssignments[eventId][tokenId] = SeatAssignment({\n                section: section,\n                row: row,\n                seat: seat,\n                assigned: true\n            });\n            emit SeatAssigned(eventId, tokenId, section, row, seat);\n        }\n\n        // Initialize perks\n        for (uint256 i = 0; i < tierConfig.includedPerks.length; i++) {\n            string memory perkName = tierConfig.includedPerks[i];\n            perkTracking[eventId][recipient][perkName] = PerkConsumption({\n                perkName: perkName,\n                maxQuantity: 1, // Default to 1, can be customized\n                consumed: 0\n            });\n        }\n\n        emit TicketMinted(eventId, tokenId, recipient, tierId);\n\n        return tokenId;\n    }\n\n    /**\n     * @dev Use a ticket (check-in) and optionally transform to souvenir\n     */\n    function useTicket(uint256 eventId, address ticketHolder, bool transformToSouvenir) external onlyOwner {\n        require(balanceOf(ticketHolder, eventId) > 0, \"No ticket owned\");\n        require(!usedTickets[eventId][ticketHolder], \"Ticket already used\");\n        require(ticketStates[eventId][ticketHolder] == TicketState.ACTIVE, \"Ticket not active\");\n\n        usedTickets[eventId][ticketHolder] = true;\n\n        if (transformToSouvenir) {\n            ticketStates[eventId][ticketHolder] = TicketState.SOUVENIR;\n            emit TicketTransformed(eventId, eventId, TicketState.SOUVENIR);\n        } else {\n            ticketStates[eventId][ticketHolder] = TicketState.USED;\n            emit TicketTransformed(eventId, eventId, TicketState.USED);\n        }\n\n        emit TicketUsed(eventId, ticketHolder);\n    }\n\n    /**\n     * @dev Consume a perk (e.g., redeem a free beer)\n     */\n    function consumePerk(\n        uint256 eventId,\n        address ticketHolder,\n        string memory perkName,\n        uint256 quantity\n    ) external onlyOwner {\n        PerkConsumption storage perk = perkTracking[eventId][ticketHolder][perkName];\n        require(perk.maxQuantity > 0, \"Perk not available\");\n        require(perk.consumed + quantity <= perk.maxQuantity, \"Perk limit exceeded\");\n\n        perk.consumed += quantity;\n\n        emit PerkConsumed(eventId, ticketHolder, perkName, quantity);\n    }\n\n    /**\n     * @dev Check if holder can access a specific area\n     */\n    function canAccessArea(uint256 eventId, uint256 tokenId, string memory area) external view returns (bool) {\n        require(exists(tokenId), \"Token does not exist\");\n\n        uint256 tierId = tokenToTier[tokenId];\n        TierConfig memory tierConfig = eventTiers[eventId][tierId];\n\n        for (uint256 i = 0; i < tierConfig.accessAreas.length; i++) {\n            if (keccak256(bytes(tierConfig.accessAreas[i])) == keccak256(bytes(area))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @dev Override transfer to enforce resale restrictions\n     * - Cannot transfer during event (between start and end time)\n     * - Can transfer before or after event\n     * - Royalties enforced on secondary sales via ERC2981\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) public override {\n        // Allow minting and burning\n        if (from == address(0) || to == address(0) || from == owner()) {\n            super.safeTransferFrom(from, to, id, value, data);\n            return;\n        }\n\n        uint256 eventId = id / 1000000; // Extract event ID from token ID\n        EventInfo memory eventInfo = events[eventId];\n\n        // Block transfers during the event\n        require(\n            block.timestamp < eventInfo.eventTimestamp || block.timestamp > eventInfo.eventEndTimestamp,\n            \"Cannot transfer tickets during event\"\n        );\n\n        // Check if event allows transfers\n        require(\n            eventInfo.transferable || block.timestamp >= eventInfo.eventEndTimestamp,\n            \"Tickets are non-transferable before event ends\"\n        );\n\n        super.safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev Transform all tickets for an event to souvenirs (batch operation post-event)\n     */\n    function batchTransformToSouvenirs(uint256 eventId, address[] memory holders) external onlyOwner {\n        require(block.timestamp > events[eventId].eventEndTimestamp, \"Event not ended\");\n\n        for (uint256 i = 0; i < holders.length; i++) {\n            if (ticketStates[eventId][holders[i]] == TicketState.USED) {\n                ticketStates[eventId][holders[i]] = TicketState.SOUVENIR;\n                emit TicketTransformed(eventId, eventId, TicketState.SOUVENIR);\n            }\n        }\n    }\n\n    /**\n     * @dev Get ticket state (ACTIVE, USED, SOUVENIR)\n     */\n    function getTicketState(uint256 eventId, address holder) external view returns (TicketState) {\n        return ticketStates[eventId][holder];\n    }\n\n    /**\n     * @dev Get perk consumption status\n     */\n    function getPerkStatus(\n        uint256 eventId,\n        address holder,\n        string memory perkName\n    ) external view returns (uint256 maxQuantity, uint256 consumed) {\n        PerkConsumption memory perk = perkTracking[eventId][holder][perkName];\n        return (perk.maxQuantity, perk.consumed);\n    }\n\n    /**\n     * @dev Get seat assignment for a token\n     */\n    function getSeatAssignment(uint256 eventId, uint256 tokenId)\n        external\n        view\n        returns (string memory section, string memory row, string memory seat)\n    {\n        SeatAssignment memory assignment = seatAssignments[eventId][tokenId];\n        require(assignment.assigned, \"No seat assigned\");\n        return (assignment.section, assignment.row, assignment.seat);\n    }\n\n    /**\n     * @dev Get tier information\n     */\n    function getTierInfo(uint256 eventId, uint256 tierId) external view returns (TierConfig memory) {\n        require(tierId < eventTierCount[eventId], \"Invalid tier\");\n        return eventTiers[eventId][tierId];\n    }\n\n    /**\n     * @dev Update royalty configuration for an event\n     */\n    function updateRoyalty(uint256 eventId, address recipient, uint96 royaltyBps) external onlyOwner {\n        require(events[eventId].maxSupply > 0, \"Event does not exist\");\n        require(royaltyBps <= 10000, \"Royalty cannot exceed 100%\");\n\n        events[eventId].royaltyRecipient = recipient;\n        events[eventId].royaltyBps = royaltyBps;\n\n        _setTokenRoyalty(eventId, recipient, royaltyBps);\n\n        emit RoyaltyConfigured(eventId, recipient, royaltyBps);\n    }\n\n    /**\n     * @dev Get token URI - returns souvenir metadata if transformed\n     */\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        uint256 eventId = tokenId / 1000000;\n        require(events[eventId].maxSupply > 0, \"Event does not exist\");\n\n        EventInfo memory eventInfo = events[eventId];\n\n        // Return souvenir metadata if ticket is in souvenir state\n        // Note: Need to check holder's state, but this is for general metadata\n        if (bytes(eventInfo.souvenirMetadataURI).length > 0 &&\n            block.timestamp > eventInfo.eventEndTimestamp) {\n            return eventInfo.souvenirMetadataURI;\n        }\n\n        if (bytes(eventInfo.metadataURI).length > 0) {\n            return eventInfo.metadataURI;\n        }\n\n        return string(abi.encodePacked(_baseURI, tokenId.toString()));\n    }\n\n    /**\n     * @dev Set base URI\n     */\n    function setBaseURI(string memory baseURI_) external onlyOwner {\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev Check if token exists\n     */\n    function exists(uint256 tokenId) public view override returns (bool) {\n        return totalSupply(tokenId) > 0;\n    }\n\n    // Required overrides for multiple inheritance\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC1155, ERC2981)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal override(ERC1155, ERC1155Supply) {\n        super._update(from, to, ids, values);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3125],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":3126,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3125,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,3125],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[4869],"IERC2981":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":168,"sourceUnit":4870,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":153,"name":"IERC165","nameLocations":["476:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"476:7:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"476:7:1"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"194:259:1","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":167,"linearizedBaseContracts":[167,4869],"name":"IERC2981","nameLocation":"464:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"490:473:1","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:1","nodeType":"VariableDeclaration","scope":166,"src":"998:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:1","nodeType":"VariableDeclaration","scope":166,"src":"1023:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:1","nodeType":"VariableDeclaration","scope":166,"src":"1070:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:1","nodeType":"VariableDeclaration","scope":166,"src":"1088:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:1"},"scope":167,"src":"968:143:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":168,"src":"454:659:1","usedErrors":[],"usedEvents":[]}],"src":"107:1007:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[304],"IERC20Errors":[209],"IERC721Errors":[257]},"id":305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":209,"linearizedBaseContracts":[209],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":179,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":179,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":179,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":179,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":184,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":184,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":189,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":189,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":198,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":198,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":198,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":198,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":203,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":203,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":208,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":208,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":305,"src":"280:1764:2","usedErrors":[179,184,189,198,203,208],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":257,"linearizedBaseContracts":[257],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":215,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":215,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":220,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":220,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":229,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":229,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":229,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":229,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":234,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":239,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":239,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":246,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":246,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":246,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":251,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":251,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":256,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":305,"src":"2190:2092:2","usedErrors":[215,220,229,234,239,246,251,256],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":269,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":269,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":269,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":269,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":269,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":274,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":274,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":279,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":279,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":286,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":286,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":286,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":291,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":296,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":296,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":303,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":303,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":303,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":305,"src":"4430:2107:2","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3063],"Context":[3125],"ERC1155":[1221],"ERC1155Utils":[1818],"ERC165":[4857],"IERC1155":[1344],"IERC1155Errors":[304],"IERC1155MetadataURI":[1664],"IERC165":[4869]},"id":1222,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":306,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":1345,"src":"135:40:3","symbolAliases":[{"foreign":{"id":307,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":1665,"src":"176:73:3","symbolAliases":[{"foreign":{"id":309,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"184:19:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":1819,"src":"250:54:3","symbolAliases":[{"foreign":{"id":311,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"258:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":3126,"src":"305:48:3","symbolAliases":[{"foreign":{"id":313,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"313:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":4858,"src":"354:69:3","symbolAliases":[{"foreign":{"id":315,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"362:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":316,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"371:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":3064,"src":"424:46:3","symbolAliases":[{"foreign":{"id":318,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"432:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1222,"sourceUnit":305,"src":"471:67:3","symbolAliases":[{"foreign":{"id":320,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"479:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":323,"name":"Context","nameLocations":["754:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3125,"src":"754:7:3"},"id":324,"nodeType":"InheritanceSpecifier","src":"754:7:3"},{"baseName":{"id":325,"name":"ERC165","nameLocations":["763:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4857,"src":"763:6:3"},"id":326,"nodeType":"InheritanceSpecifier","src":"763:6:3"},{"baseName":{"id":327,"name":"IERC1155","nameLocations":["771:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"771:8:3"},"id":328,"nodeType":"InheritanceSpecifier","src":"771:8:3"},{"baseName":{"id":329,"name":"IERC1155MetadataURI","nameLocations":["781:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1664,"src":"781:19:3"},"id":330,"nodeType":"InheritanceSpecifier","src":"781:19:3"},{"baseName":{"id":331,"name":"IERC1155Errors","nameLocations":["802:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":304,"src":"802:14:3"},"id":332,"nodeType":"InheritanceSpecifier","src":"802:14:3"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"540:184:3","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1221,"linearizedBaseContracts":[1221,304,1664,1344,4857,4869,3125],"name":"ERC1155","nameLocation":"743:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":336,"libraryName":{"id":333,"name":"Arrays","nameLocations":["829:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3063,"src":"829:6:3"},"nodeType":"UsingForDirective","src":"823:27:3","typeName":{"baseType":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":335,"nodeType":"ArrayTypeName","src":"840:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":340,"libraryName":{"id":337,"name":"Arrays","nameLocations":["861:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3063,"src":"861:6:3"},"nodeType":"UsingForDirective","src":"855:27:3","typeName":{"baseType":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":339,"nodeType":"ArrayTypeName","src":"872:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":346,"mutability":"mutable","name":"_balances","nameLocation":"955:9:3","nodeType":"VariableDeclaration","scope":1221,"src":"888:76:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":345,"keyName":"id","keyNameLocation":"904:2:3","keyType":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":344,"keyName":"account","keyNameLocation":"926:7:3","keyType":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":352,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:3","nodeType":"VariableDeclaration","scope":1221,"src":"971:88:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":351,"keyName":"account","keyNameLocation":"987:7:3","keyType":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":350,"keyName":"operator","keyNameLocation":"1014:8:3","keyType":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":349,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":354,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"1180:19:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":353,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":364,"nodeType":"Block","src":"1281:30:3","statements":[{"expression":{"arguments":[{"id":361,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1299:4:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":360,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"1291:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"1291:13:3"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1206:38:3","text":" @dev See {_setURI}."},"id":365,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:3","nodeType":"VariableDeclaration","scope":365,"src":"1261:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":356,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:3"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"1281:0:3"},"scope":1221,"src":"1249:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4856,4868],"body":{"id":395,"nodeType":"Block","src":"1453:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1482:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":378,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1502:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1344_$","typeString":"type(contract IERC1155)"}],"id":377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1497:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1344","typeString":"type(contract IERC1155)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1512:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1497:26:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1482:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1539:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":384,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"1559:19:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1664_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1664_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1554:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1664","typeString":"type(contract IERC1155MetadataURI)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1554:37:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1539:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:109:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":391,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1631:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":389,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1607:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1221_$","typeString":"type(contract super ERC1155)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4856,"src":"1607:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:161:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":375,"id":394,"nodeType":"Return","src":"1463:180:3"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"1317:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":396,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1354:17:3","nodeType":"FunctionDefinition","overrides":{"id":372,"nodeType":"OverrideSpecifier","overrides":[{"id":370,"name":"ERC165","nameLocations":["1421:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4857,"src":"1421:6:3"},{"id":371,"name":"IERC165","nameLocations":["1429:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"1429:7:3"}],"src":"1412:25:3"},"parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"interfaceId","nameLocation":"1379:11:3","nodeType":"VariableDeclaration","scope":396,"src":"1372:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":367,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1372:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1371:20:3"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"1447:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:6:3"},"scope":1221,"src":"1345:305:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1663],"body":{"id":406,"nodeType":"Block","src":"2124:28:3","statements":[{"expression":{"id":404,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"2141:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":403,"id":405,"nodeType":"Return","src":"2134:11:3"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1656:388:3","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":407,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2058:3:3","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"2062:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:18:3"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"2109:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":401,"name":"string","nodeType":"ElementaryTypeName","src":"2109:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2108:15:3"},"scope":1221,"src":"2049:103:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1282],"body":{"id":423,"nodeType":"Block","src":"2273:46:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":417,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2290:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":419,"indexExpression":{"id":418,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"2300:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"2304:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":416,"id":422,"nodeType":"Return","src":"2283:29:3"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2158:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":424,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2196:9:3","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"account","nameLocation":"2214:7:3","nodeType":"VariableDeclaration","scope":424,"src":"2206:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"id","nameLocation":"2231:2:3","nodeType":"VariableDeclaration","scope":424,"src":"2223:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:29:3"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":424,"src":"2264:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:9:3"},"scope":1221,"src":"2187:132:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1295],"body":{"id":493,"nodeType":"Block","src":"2618:410:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":437,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2632:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:3","memberName":"length","nodeType":"MemberAccess","src":"2632:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":439,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2651:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:3","memberName":"length","nodeType":"MemberAccess","src":"2651:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":450,"nodeType":"IfStatement","src":"2628:121:3","trueBody":{"id":449,"nodeType":"Block","src":"2663:86:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":443,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2710:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:6:3","memberName":"length","nodeType":"MemberAccess","src":"2710:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":445,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2722:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:3","memberName":"length","nodeType":"MemberAccess","src":"2722:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2684:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"RevertStatement","src":"2677:61:3"}]}},{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"batchBalances","nameLocation":"2776:13:3","nodeType":"VariableDeclaration","scope":493,"src":"2759:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":454,"nodeType":"ArrayTypeName","src":"2759:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":462,"initialValue":{"arguments":[{"expression":{"id":459,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2806:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:3","memberName":"length","nodeType":"MemberAccess","src":"2806:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2792:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":457,"nodeType":"ArrayTypeName","src":"2796:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2759:63:3"},{"body":{"id":489,"nodeType":"Block","src":"2879:112:3","statements":[{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":474,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2893:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":476,"indexExpression":{"id":475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2907:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2893:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2950:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":478,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2922:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2955,"src":"2922:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2977:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":482,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2954:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"2954:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2912:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:87:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":488,"nodeType":"ExpressionStatement","src":"2893:87:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2853:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":468,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"2857:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:6:3","memberName":"length","nodeType":"MemberAccess","src":"2857:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":490,"initializationExpression":{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"i","nameLocation":"2846:1:3","nodeType":"VariableDeclaration","scope":490,"src":"2838:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":466,"initialValue":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2838:13:3"},"loopExpression":{"expression":{"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2874:3:3","subExpression":{"id":471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2876:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"nodeType":"ExpressionStatement","src":"2874:3:3"},"nodeType":"ForStatement","src":"2833:158:3"},{"expression":{"id":491,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3008:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":436,"id":492,"nodeType":"Return","src":"3001:20:3"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"2325:146:3","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":494,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2485:14:3","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"accounts","nameLocation":"2526:8:3","nodeType":"VariableDeclaration","scope":494,"src":"2509:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":427,"nodeType":"ArrayTypeName","src":"2509:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"ids","nameLocation":"2561:3:3","nodeType":"VariableDeclaration","scope":494,"src":"2544:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2544:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":430,"nodeType":"ArrayTypeName","src":"2544:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2499:71:3"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"2600:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2600:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2599:18:3"},"scope":1221,"src":"2476:552:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":509,"nodeType":"Block","src":"3138:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":503,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3167:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3181:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3191:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":502,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3148:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"3148:52:3"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"3034:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":510,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3072:17:3","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"operator","nameLocation":"3098:8:3","nodeType":"VariableDeclaration","scope":510,"src":"3090:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"approved","nameLocation":"3113:8:3","nodeType":"VariableDeclaration","scope":510,"src":"3108:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":498,"name":"bool","nodeType":"ElementaryTypeName","src":"3108:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3089:33:3"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"3138:0:3"},"scope":1221,"src":"3063:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":526,"nodeType":"Block","src":"3338:61:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":520,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3355:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":522,"indexExpression":{"id":521,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3374:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":524,"indexExpression":{"id":523,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"3383:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":519,"id":525,"nodeType":"Return","src":"3348:44:3"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"3213:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":527,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3251:16:3","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"account","nameLocation":"3276:7:3","nodeType":"VariableDeclaration","scope":527,"src":"3268:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"operator","nameLocation":"3293:8:3","nodeType":"VariableDeclaration","scope":527,"src":"3285:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3267:35:3"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"3332:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3331:6:3"},"scope":1221,"src":"3242:157:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1327],"body":{"id":570,"nodeType":"Block","src":"3547:238:3","statements":[{"assignments":[542],"declarations":[{"constant":false,"id":542,"mutability":"mutable","name":"sender","nameLocation":"3565:6:3","nodeType":"VariableDeclaration","scope":570,"src":"3557:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":545,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":543,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3574:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3557:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3600:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":547,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3608:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3618:31:3","subExpression":{"arguments":[{"id":550,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3636:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":551,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3642:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":549,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3619:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3600:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"3596:129:3","trueBody":{"id":560,"nodeType":"Block","src":"3651:74:3","statements":[{"errorCall":{"arguments":[{"id":556,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3701:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3709:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":555,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"3672:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"RevertStatement","src":"3665:49:3"}]}},{"expression":{"arguments":[{"id":563,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3752:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"3758:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3762:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3766:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":567,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3773:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":562,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3734:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"3734:44:3"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"3405:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":571,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3443:16:3","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"from","nameLocation":"3468:4:3","nodeType":"VariableDeclaration","scope":571,"src":"3460:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"to","nameLocation":"3482:2:3","nodeType":"VariableDeclaration","scope":571,"src":"3474:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"id","nameLocation":"3494:2:3","nodeType":"VariableDeclaration","scope":571,"src":"3486:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"3506:5:3","nodeType":"VariableDeclaration","scope":571,"src":"3498:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"data","nameLocation":"3526:4:3","nodeType":"VariableDeclaration","scope":571,"src":"3513:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:72:3"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"3547:0:3"},"scope":1221,"src":"3434:351:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1343],"body":{"id":616,"nodeType":"Block","src":"4004:245:3","statements":[{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"sender","nameLocation":"4022:6:3","nodeType":"VariableDeclaration","scope":616,"src":"4014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":587,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":591,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":589,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"4031:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4014:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":592,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4057:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":593,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4065:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4057:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4075:31:3","subExpression":{"arguments":[{"id":596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4093:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":597,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4099:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4076:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4057:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":607,"nodeType":"IfStatement","src":"4053:129:3","trueBody":{"id":606,"nodeType":"Block","src":"4108:74:3","statements":[{"errorCall":{"arguments":[{"id":602,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4158:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4166:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":601,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4129:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"RevertStatement","src":"4122:49:3"}]}},{"expression":{"arguments":[{"id":609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4214:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4220:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4224:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":612,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"4229:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4237:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":608,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4191:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"4191:51:3"}]},"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"3791:24:3","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3829:21:3","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"from","nameLocation":"3868:4:3","nodeType":"VariableDeclaration","scope":617,"src":"3860:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"to","nameLocation":"3890:2:3","nodeType":"VariableDeclaration","scope":617,"src":"3882:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"ids","nameLocation":"3919:3:3","nodeType":"VariableDeclaration","scope":617,"src":"3902:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":578,"nodeType":"ArrayTypeName","src":"3902:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"values","nameLocation":"3949:6:3","nodeType":"VariableDeclaration","scope":617,"src":"3932:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":581,"nodeType":"ArrayTypeName","src":"3932:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"data","nameLocation":"3978:4:3","nodeType":"VariableDeclaration","scope":617,"src":"3965:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3850:138:3"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"4004:0:3"},"scope":1221,"src":"3820:429:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":769,"nodeType":"Block","src":"5057:1174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":631,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5071:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:3","memberName":"length","nodeType":"MemberAccess","src":"5071:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":633,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5085:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:3","memberName":"length","nodeType":"MemberAccess","src":"5085:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5071:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"IfStatement","src":"5067:117:3","trueBody":{"id":643,"nodeType":"Block","src":"5100:84:3","statements":[{"errorCall":{"arguments":[{"expression":{"id":637,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5147:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:3","memberName":"length","nodeType":"MemberAccess","src":"5147:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":639,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5159:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:3","memberName":"length","nodeType":"MemberAccess","src":"5159:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"5121:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"RevertStatement","src":"5114:59:3"}]}},{"assignments":[646],"declarations":[{"constant":false,"id":646,"mutability":"mutable","name":"operator","nameLocation":"5202:8:3","nodeType":"VariableDeclaration","scope":769,"src":"5194:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":647,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5213:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5194:31:3"},{"body":{"id":730,"nodeType":"Block","src":"5277:650:3","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"id","nameLocation":"5299:2:3","nodeType":"VariableDeclaration","scope":730,"src":"5291:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[{"id":665,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5327:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":663,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5304:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5308:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"5304:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5291:38:3"},{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"value","nameLocation":"5351:5:3","nodeType":"VariableDeclaration","scope":730,"src":"5343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"arguments":[{"id":672,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5385:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":670,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5359:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5366:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"5359:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5343:44:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5406:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:3","typeDescriptions":{}}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5406:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"5402:420:3","trueBody":{"id":712,"nodeType":"Block","src":"5426:396:3","statements":[{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"fromBalance","nameLocation":"5452:11:3","nodeType":"VariableDeclaration","scope":712,"src":"5444:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":688,"initialValue":{"baseExpression":{"baseExpression":{"id":683,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5466:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":685,"indexExpression":{"id":684,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5476:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":687,"indexExpression":{"id":686,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5480:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5444:41:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":689,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5507:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5521:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":700,"nodeType":"IfStatement","src":"5503:129:3","trueBody":{"id":699,"nodeType":"Block","src":"5528:104:3","statements":[{"errorCall":{"arguments":[{"id":693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5584:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5590:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":696,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5610:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5557:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":698,"nodeType":"RevertStatement","src":"5550:63:3"}]}},{"id":711,"nodeType":"UncheckedBlock","src":"5649:159:3","statements":[{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":701,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5748:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":704,"indexExpression":{"id":702,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5758:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":705,"indexExpression":{"id":703,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5762:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5770:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5784:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5770:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5748:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"5748:41:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5840:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:3","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":729,"nodeType":"IfStatement","src":"5836:81:3","trueBody":{"id":728,"nodeType":"Block","src":"5858:59:3","statements":[{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":720,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5876:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":723,"indexExpression":{"id":721,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5886:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":724,"indexExpression":{"id":722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5890:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5876:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"5897:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":727,"nodeType":"ExpressionStatement","src":"5876:26:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5256:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":655,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5260:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:6:3","memberName":"length","nodeType":"MemberAccess","src":"5260:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"initializationExpression":{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"i","nameLocation":"5249:1:3","nodeType":"VariableDeclaration","scope":731,"src":"5241:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":653,"initialValue":{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:3"},"loopExpression":{"expression":{"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5272:3:3","subExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5274:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":660,"nodeType":"ExpressionStatement","src":"5272:3:3"},"nodeType":"ForStatement","src":"5236:691:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":732,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5941:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5945:6:3","memberName":"length","nodeType":"MemberAccess","src":"5941:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5955:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5941:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":767,"nodeType":"Block","src":"6149:76:3","statements":[{"eventCall":{"arguments":[{"id":760,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"6182:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6192:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6198:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"6202:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":764,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"6207:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":759,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"6168:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"EmitStatement","src":"6163:51:3"}]},"id":768,"nodeType":"IfStatement","src":"5937:288:3","trueBody":{"id":758,"nodeType":"Block","src":"5958:185:3","statements":[{"assignments":[737],"declarations":[{"constant":false,"id":737,"mutability":"mutable","name":"id","nameLocation":"5980:2:3","nodeType":"VariableDeclaration","scope":758,"src":"5972:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":742,"initialValue":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":738,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5985:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5989:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"5985:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:38:3"},{"assignments":[744],"declarations":[{"constant":false,"id":744,"mutability":"mutable","name":"value","nameLocation":"6032:5:3","nodeType":"VariableDeclaration","scope":758,"src":"6024:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":749,"initialValue":{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6066:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":745,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"6040:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"6040:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6024:44:3"},{"eventCall":{"arguments":[{"id":751,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"6102:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"6112:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6118:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6122:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"6126:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"6087:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"EmitStatement","src":"6082:50:3"}]}}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4255:690:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":770,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4959:7:3","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"from","nameLocation":"4975:4:3","nodeType":"VariableDeclaration","scope":770,"src":"4967:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"to","nameLocation":"4989:2:3","nodeType":"VariableDeclaration","scope":770,"src":"4981:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"ids","nameLocation":"5010:3:3","nodeType":"VariableDeclaration","scope":770,"src":"4993:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":624,"nodeType":"ArrayTypeName","src":"4993:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"values","nameLocation":"5032:6:3","nodeType":"VariableDeclaration","scope":770,"src":"5015:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ArrayTypeName","src":"5015:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4966:73:3"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5057:0:3"},"scope":1221,"src":"4950:1281:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":849,"nodeType":"Block","src":"7001:509:3","statements":[{"expression":{"arguments":[{"id":787,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7019:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7025:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":789,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7029:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":790,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7034:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":786,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"7011:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7055:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:3","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":848,"nodeType":"IfStatement","src":"7051:453:3","trueBody":{"id":847,"nodeType":"Block","src":"7073:431:3","statements":[{"assignments":[800],"declarations":[{"constant":false,"id":800,"mutability":"mutable","name":"operator","nameLocation":"7095:8:3","nodeType":"VariableDeclaration","scope":847,"src":"7087:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"7087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":803,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":801,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"7106:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7087:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":804,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7136:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:6:3","memberName":"length","nodeType":"MemberAccess","src":"7136:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7136:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":845,"nodeType":"Block","src":"7382:112:3","statements":[{"expression":{"arguments":[{"id":837,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"7441:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7461:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":841,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7466:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":842,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7474:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":834,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7400:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1818_$","typeString":"type(library ERC1155Utils)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7413:27:3","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1817,"src":"7400:40:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"7400:79:3"}]},"id":846,"nodeType":"IfStatement","src":"7132:362:3","trueBody":{"id":833,"nodeType":"Block","src":"7153:223:3","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"id","nameLocation":"7179:2:3","nodeType":"VariableDeclaration","scope":833,"src":"7171:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":814,"initialValue":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7207:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":810,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7184:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7188:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"7184:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:38:3"},{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"value","nameLocation":"7235:5:3","nodeType":"VariableDeclaration","scope":833,"src":"7227:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7227:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":821,"initialValue":{"arguments":[{"hexValue":"30","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":817,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7243:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:18:3","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"7243:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7227:44:3"},{"expression":{"arguments":[{"id":825,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"7325:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":826,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7335:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7341:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"7345:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"7349:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7356:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":822,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7289:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1818_$","typeString":"type(library ERC1155Utils)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7302:22:3","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"7289:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"ExpressionStatement","src":"7289:72:3"}]}}]}}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"6237:568:3","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":850,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"6819:26:3","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"from","nameLocation":"6863:4:3","nodeType":"VariableDeclaration","scope":850,"src":"6855:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"6855:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"to","nameLocation":"6885:2:3","nodeType":"VariableDeclaration","scope":850,"src":"6877:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"6877:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"ids","nameLocation":"6914:3:3","nodeType":"VariableDeclaration","scope":850,"src":"6897:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"6897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ArrayTypeName","src":"6897:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"values","nameLocation":"6944:6:3","nodeType":"VariableDeclaration","scope":850,"src":"6927:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":780,"nodeType":"ArrayTypeName","src":"6927:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"data","nameLocation":"6973:4:3","nodeType":"VariableDeclaration","scope":850,"src":"6960:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"6960:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6845:138:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"7001:0:3"},"scope":1221,"src":"6810:700:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":915,"nodeType":"Block","src":"8075:355:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8089:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8095:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"8095:7:3","typeDescriptions":{}}},"id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8089:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":878,"nodeType":"IfStatement","src":"8085:88:3","trueBody":{"id":877,"nodeType":"Block","src":"8107:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:3","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":870,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8128:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"RevertStatement","src":"8121:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8186:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8202:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:3","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8186:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":893,"nodeType":"IfStatement","src":"8182:88:3","trueBody":{"id":892,"nodeType":"Block","src":"8206:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:3","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8248:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":885,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"8227:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"RevertStatement","src":"8220:39:3"}]}},{"assignments":[898,901],"declarations":[{"constant":false,"id":898,"mutability":"mutable","name":"ids","nameLocation":"8297:3:3","nodeType":"VariableDeclaration","scope":915,"src":"8280:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":897,"nodeType":"ArrayTypeName","src":"8280:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"values","nameLocation":"8319:6:3","nodeType":"VariableDeclaration","scope":915,"src":"8302:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":900,"nodeType":"ArrayTypeName","src":"8302:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[{"id":903,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"8348:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"8352:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":902,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8329:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8279:79:3"},{"expression":{"arguments":[{"id":908,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8395:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8401:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8405:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":911,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8410:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"8418:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":907,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"8368:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"8368:55:3"}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"7516:446:3","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":916,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"7976:17:3","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"from","nameLocation":"8002:4:3","nodeType":"VariableDeclaration","scope":916,"src":"7994:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"to","nameLocation":"8016:2:3","nodeType":"VariableDeclaration","scope":916,"src":"8008:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"id","nameLocation":"8028:2:3","nodeType":"VariableDeclaration","scope":916,"src":"8020:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"8040:5:3","nodeType":"VariableDeclaration","scope":916,"src":"8032:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"data","nameLocation":"8060:4:3","nodeType":"VariableDeclaration","scope":916,"src":"8047:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":860,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7993:72:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"8075:0:3"},"scope":1221,"src":"7967:463:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"9010:266:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"9024:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9030:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9030:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9024:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"9020:88:3","trueBody":{"id":945,"nodeType":"Block","src":"9042:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9094:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9086:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9086:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"9063:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"9056:41:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9121:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9137:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9129:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"9129:7:3","typeDescriptions":{}}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9121:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":961,"nodeType":"IfStatement","src":"9117:88:3","trueBody":{"id":960,"nodeType":"Block","src":"9141:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:3","typeDescriptions":{}}},"id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":953,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"9162:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"RevertStatement","src":"9155:39:3"}]}},{"expression":{"arguments":[{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9241:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"9247:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":965,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9251:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":966,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"9256:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"9264:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":962,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9214:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"ExpressionStatement","src":"9214:55:3"}]},"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"8436:390:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"8840:22:3","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"from","nameLocation":"8880:4:3","nodeType":"VariableDeclaration","scope":971,"src":"8872:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"to","nameLocation":"8902:2:3","nodeType":"VariableDeclaration","scope":971,"src":"8894:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"ids","nameLocation":"8931:3:3","nodeType":"VariableDeclaration","scope":971,"src":"8914:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":923,"nodeType":"ArrayTypeName","src":"8914:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"values","nameLocation":"8961:6:3","nodeType":"VariableDeclaration","scope":971,"src":"8944:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ArrayTypeName","src":"8944:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"data","nameLocation":"8990:4:3","nodeType":"VariableDeclaration","scope":971,"src":"8977:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":928,"name":"bytes","nodeType":"ElementaryTypeName","src":"8977:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8862:138:3"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[],"src":"9010:0:3"},"scope":1221,"src":"8831:445:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"10154:30:3","statements":[{"expression":{"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":977,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"10164:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":978,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"10171:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10164:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":980,"nodeType":"ExpressionStatement","src":"10164:13:3"}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"9282:811:3","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10107:7:3","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"newuri","nameLocation":"10129:6:3","nodeType":"VariableDeclaration","scope":982,"src":"10115:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":973,"name":"string","nodeType":"ElementaryTypeName","src":"10115:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10114:22:3"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"10154:0:3"},"scope":1221,"src":"10098:86:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"10644:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10658:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10672:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:3","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10658:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"10654:88:3","trueBody":{"id":1007,"nodeType":"Block","src":"10676:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{}}},"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1000,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"10697:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10697:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"RevertStatement","src":"10690:41:3"}]}},{"assignments":[1013,1016],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"ids","nameLocation":"10769:3:3","nodeType":"VariableDeclaration","scope":1033,"src":"10752:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1012,"nodeType":"ArrayTypeName","src":"10752:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"values","nameLocation":"10791:6:3","nodeType":"VariableDeclaration","scope":1033,"src":"10774:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ArrayTypeName","src":"10774:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1021,"initialValue":{"arguments":[{"id":1018,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"10820:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"10824:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1017,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"10801:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10801:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10751:79:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10867:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:3","typeDescriptions":{}}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10867:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1027,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"10879:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10883:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1029,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10888:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1030,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"10896:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1022,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"10840:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"ExpressionStatement","src":"10840:61:3"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"10190:367:3","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10571:5:3","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"to","nameLocation":"10585:2:3","nodeType":"VariableDeclaration","scope":1034,"src":"10577:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"10577:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"id","nameLocation":"10597:2:3","nodeType":"VariableDeclaration","scope":1034,"src":"10589:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"value","nameLocation":"10609:5:3","nodeType":"VariableDeclaration","scope":1034,"src":"10601:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"10601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"data","nameLocation":"10629:4:3","nodeType":"VariableDeclaration","scope":1034,"src":"10616:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":990,"name":"bytes","nodeType":"ElementaryTypeName","src":"10616:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10576:58:3"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"10644:0:3"},"scope":1221,"src":"10562:346:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"11446:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11460:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:3","typeDescriptions":{}}},"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11460:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1062,"nodeType":"IfStatement","src":"11456:88:3","trueBody":{"id":1061,"nodeType":"Block","src":"11478:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11530:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11522:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"11522:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"11499:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"RevertStatement","src":"11492:41:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11580:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"11580:7:3","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11580:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11592:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11596:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1070,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"11601:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1071,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"11609:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1063,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"11553:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11553:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"11553:61:3"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"10914:420:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11348:10:3","nodeType":"FunctionDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"to","nameLocation":"11367:2:3","nodeType":"VariableDeclaration","scope":1075,"src":"11359:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"ids","nameLocation":"11388:3:3","nodeType":"VariableDeclaration","scope":1075,"src":"11371:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ArrayTypeName","src":"11371:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"values","nameLocation":"11410:6:3","nodeType":"VariableDeclaration","scope":1075,"src":"11393:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ArrayTypeName","src":"11393:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"data","nameLocation":"11431:4:3","nodeType":"VariableDeclaration","scope":1075,"src":"11418:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1044,"name":"bytes","nodeType":"ElementaryTypeName","src":"11418:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11358:78:3"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[],"src":"11446:0:3"},"scope":1221,"src":"11339:282:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"11980:264:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"11994:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12010:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"12002:7:3","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11994:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1099,"nodeType":"IfStatement","src":"11990:88:3","trueBody":{"id":1098,"nodeType":"Block","src":"12014:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:3","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1091,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"12035:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1097,"nodeType":"RevertStatement","src":"12028:39:3"}]}},{"assignments":[1104,1107],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"ids","nameLocation":"12105:3:3","nodeType":"VariableDeclaration","scope":1124,"src":"12088:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"12088:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ArrayTypeName","src":"12088:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"values","nameLocation":"12127:6:3","nodeType":"VariableDeclaration","scope":1124,"src":"12110:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12110:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ArrayTypeName","src":"12110:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1112,"initialValue":{"arguments":[{"id":1109,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12156:2:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12160:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1108,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"12137:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12087:79:3"},{"expression":{"arguments":[{"id":1114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"12203:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12217:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12209:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:3","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12221:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1120,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"12226:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12234:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1113,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12176:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"12176:61:3"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"11627:283:3","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11924:5:3","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"from","nameLocation":"11938:4:3","nodeType":"VariableDeclaration","scope":1125,"src":"11930:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"11930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"id","nameLocation":"11952:2:3","nodeType":"VariableDeclaration","scope":1125,"src":"11944:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11944:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"11964:5:3","nodeType":"VariableDeclaration","scope":1125,"src":"11956:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"11956:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11929:41:3"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"11980:0:3"},"scope":1221,"src":"11915:329:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1163,"nodeType":"Block","src":"12690:175:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12720:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12712:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:3","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12712:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12704:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1151,"nodeType":"IfStatement","src":"12700:88:3","trueBody":{"id":1150,"nodeType":"Block","src":"12724:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12766:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"12766:7:3","typeDescriptions":{}}},"id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12766:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1143,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"12745:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12745:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"RevertStatement","src":"12738:39:3"}]}},{"expression":{"arguments":[{"id":1153,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"12824:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12830:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"12830:7:3","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12830:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"12842:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1159,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"12847:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12855:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1152,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12797:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"ExpressionStatement","src":"12797:61:3"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"12250:345:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12609:10:3","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"from","nameLocation":"12628:4:3","nodeType":"VariableDeclaration","scope":1164,"src":"12620:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"ids","nameLocation":"12651:3:3","nodeType":"VariableDeclaration","scope":1164,"src":"12634:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"12634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1130,"nodeType":"ArrayTypeName","src":"12634:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"values","nameLocation":"12673:6:3","nodeType":"VariableDeclaration","scope":1164,"src":"12656:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1133,"nodeType":"ArrayTypeName","src":"12656:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12619:61:3"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"12690:0:3"},"scope":1221,"src":"12600:265:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"13177:222:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"13191:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13211:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13203:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"13203:7:3","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13203:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13191:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1188,"nodeType":"IfStatement","src":"13187:94:3","trueBody":{"id":1187,"nodeType":"Block","src":"13215:66:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13267:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13259:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1181,"name":"address","nodeType":"ElementaryTypeName","src":"13259:7:3","typeDescriptions":{}}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13259:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1180,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"13236:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"RevertStatement","src":"13229:41:3"}]}},{"expression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1189,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"13290:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1192,"indexExpression":{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13309:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1193,"indexExpression":{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"13316:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13290:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1194,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"13328:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13290:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"ExpressionStatement","src":"13290:46:3"},{"eventCall":{"arguments":[{"id":1198,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"13366:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"13373:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"13383:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1197,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"13351:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13351:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"EmitStatement","src":"13346:46:3"}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"12871:208:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13093:18:3","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"owner","nameLocation":"13120:5:3","nodeType":"VariableDeclaration","scope":1204,"src":"13112:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"operator","nameLocation":"13135:8:3","nodeType":"VariableDeclaration","scope":1204,"src":"13127:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"13127:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"approved","nameLocation":"13150:8:3","nodeType":"VariableDeclaration","scope":1204,"src":"13145:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1170,"name":"bool","nodeType":"ElementaryTypeName","src":"13145:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13111:48:3"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"13177:0:3"},"scope":1221,"src":"13084:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1219,"nodeType":"Block","src":"13673:664:3","statements":[{"AST":{"nodeType":"YulBlock","src":"13708:623:3","statements":[{"nodeType":"YulAssignment","src":"13766:21:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13782:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13776:5:3"},"nodeType":"YulFunctionCall","src":"13776:11:3"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13766:6:3"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"13844:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"13852:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13837:6:3"},"nodeType":"YulFunctionCall","src":"13837:17:3"},"nodeType":"YulExpressionStatement","src":"13837:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"13975:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"13983:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13971:3:3"},"nodeType":"YulFunctionCall","src":"13971:17:3"},{"name":"element1","nodeType":"YulIdentifier","src":"13990:8:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13964:6:3"},"nodeType":"YulFunctionCall","src":"13964:35:3"},"nodeType":"YulExpressionStatement","src":"13964:35:3"},{"nodeType":"YulAssignment","src":"14090:27:3","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14104:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14112:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:3"},"nodeType":"YulFunctionCall","src":"14100:17:3"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14090:6:3"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14137:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14145:1:3","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14130:6:3"},"nodeType":"YulFunctionCall","src":"14130:17:3"},"nodeType":"YulExpressionStatement","src":"14130:17:3"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14171:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:3"},"nodeType":"YulFunctionCall","src":"14167:17:3"},{"name":"element2","nodeType":"YulIdentifier","src":"14186:8:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14160:6:3"},"nodeType":"YulFunctionCall","src":"14160:35:3"},"nodeType":"YulExpressionStatement","src":"14160:35:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14297:4:3","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14307:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14315:4:3","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14303:3:3"},"nodeType":"YulFunctionCall","src":"14303:17:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14290:6:3"},"nodeType":"YulFunctionCall","src":"14290:31:3"},"nodeType":"YulExpressionStatement","src":"14290:31:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1213,"isOffset":false,"isSlot":false,"src":"13766:6:3","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"13844:6:3","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"13975:6:3","valueSize":1},{"declaration":1213,"isOffset":false,"isSlot":false,"src":"14104:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14090:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14137:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14171:6:3","valueSize":1},{"declaration":1216,"isOffset":false,"isSlot":false,"src":"14307:6:3","valueSize":1},{"declaration":1207,"isOffset":false,"isSlot":false,"src":"13990:8:3","valueSize":1},{"declaration":1209,"isOffset":false,"isSlot":false,"src":"14186:8:3","valueSize":1}],"flags":["memory-safe"],"id":1218,"nodeType":"InlineAssembly","src":"13683:648:3"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"13405:105:3","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13524:18:3","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"element1","nameLocation":"13560:8:3","nodeType":"VariableDeclaration","scope":1220,"src":"13552:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"element2","nameLocation":"13586:8:3","nodeType":"VariableDeclaration","scope":1220,"src":"13578:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13542:58:3"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"array1","nameLocation":"13640:6:3","nodeType":"VariableDeclaration","scope":1220,"src":"13623:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"13623:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1212,"nodeType":"ArrayTypeName","src":"13623:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"array2","nameLocation":"13665:6:3","nodeType":"VariableDeclaration","scope":1220,"src":"13648:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"13648:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1215,"nodeType":"ArrayTypeName","src":"13648:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13622:50:3"},"scope":1221,"src":"13515:822:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1222,"src":"725:13614:3","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[1241,1256,1265,1272]}],"src":"109:14231:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1344],"IERC165":[4869]},"id":1345,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1223,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1345,"sourceUnit":4870,"src":"136:62:4","symbolAliases":[{"foreign":{"id":1224,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"144:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1227,"name":"IERC165","nameLocations":["359:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"359:7:4"},"id":1228,"nodeType":"InheritanceSpecifier","src":"359:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"200:136:4","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1344,"linearizedBaseContracts":[1344,4869],"name":"IERC1155","nameLocation":"347:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"373:125:4","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1241,"name":"TransferSingle","nameLocation":"509:14:4","nodeType":"EventDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:4","nodeType":"VariableDeclaration","scope":1241,"src":"524:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:4","nodeType":"VariableDeclaration","scope":1241,"src":"550:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:4","nodeType":"VariableDeclaration","scope":1241,"src":"572:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:4","nodeType":"VariableDeclaration","scope":1241,"src":"592:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:4","nodeType":"VariableDeclaration","scope":1241,"src":"604:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:4"},"src":"503:116:4"},{"anonymous":false,"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"625:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1256,"name":"TransferBatch","nameLocation":"780:13:4","nodeType":"EventDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:4","nodeType":"VariableDeclaration","scope":1256,"src":"803:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1246,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:4","nodeType":"VariableDeclaration","scope":1256,"src":"837:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:4","nodeType":"VariableDeclaration","scope":1256,"src":"867:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:4","nodeType":"VariableDeclaration","scope":1256,"src":"895:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"895:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:4","nodeType":"VariableDeclaration","scope":1256,"src":"918:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ArrayTypeName","src":"918:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:4"},"src":"774:167:4"},{"anonymous":false,"documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"947:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1265,"name":"ApprovalForAll","nameLocation":"1105:14:4","nodeType":"EventDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:4","nodeType":"VariableDeclaration","scope":1265,"src":"1120:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:4","nodeType":"VariableDeclaration","scope":1265,"src":"1145:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:4","nodeType":"VariableDeclaration","scope":1265,"src":"1171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:4"},"src":"1099:87:4"},{"anonymous":false,"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"1192:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1272,"name":"URI","nameLocation":"1546:3:4","nodeType":"EventDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:4","nodeType":"VariableDeclaration","scope":1272,"src":"1550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1267,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1270,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:4","nodeType":"VariableDeclaration","scope":1272,"src":"1564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:4"},"src":"1540:44:4"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"1590:90:4","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:4","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"account","nameLocation":"1712:7:4","nodeType":"VariableDeclaration","scope":1282,"src":"1704:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"id","nameLocation":"1729:2:4","nodeType":"VariableDeclaration","scope":1282,"src":"1721:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:4"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"1756:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:4"},"scope":1344,"src":"1685:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"1771:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1295,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:4","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:4","nodeType":"VariableDeclaration","scope":1295,"src":"1997:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"nodeType":"ArrayTypeName","src":"1997:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"ids","nameLocation":"2053:3:4","nodeType":"VariableDeclaration","scope":1295,"src":"2034:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ArrayTypeName","src":"2034:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:4"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"2086:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ArrayTypeName","src":"2086:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:4"},"scope":1344,"src":"1964:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2110:254:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:4","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"operator","nameLocation":"2404:8:4","nodeType":"VariableDeclaration","scope":1303,"src":"2396:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"approved","nameLocation":"2419:8:4","nodeType":"VariableDeclaration","scope":1303,"src":"2414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:4"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"2437:0:4"},"scope":1344,"src":"2369:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"2444:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:4","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"account","nameLocation":"2618:7:4","nodeType":"VariableDeclaration","scope":1313,"src":"2610:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"operator","nameLocation":"2635:8:4","nodeType":"VariableDeclaration","scope":1313,"src":"2627:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:4"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"2668:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1310,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:4"},"scope":1344,"src":"2584:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2680:927:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:4","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3646:4:4","nodeType":"VariableDeclaration","scope":1327,"src":"3638:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3660:2:4","nodeType":"VariableDeclaration","scope":1327,"src":"3652:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"id","nameLocation":"3672:2:4","nodeType":"VariableDeclaration","scope":1327,"src":"3664:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"value","nameLocation":"3684:5:4","nodeType":"VariableDeclaration","scope":1327,"src":"3676:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"data","nameLocation":"3706:4:4","nodeType":"VariableDeclaration","scope":1327,"src":"3691:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:4"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"3720:0:4"},"scope":1344,"src":"3612:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"3727:831:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1343,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:4","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"from","nameLocation":"4611:4:4","nodeType":"VariableDeclaration","scope":1343,"src":"4603:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"to","nameLocation":"4633:2:4","nodeType":"VariableDeclaration","scope":1343,"src":"4625:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"ids","nameLocation":"4664:3:4","nodeType":"VariableDeclaration","scope":1343,"src":"4645:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1334,"nodeType":"ArrayTypeName","src":"4645:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"values","nameLocation":"4696:6:4","nodeType":"VariableDeclaration","scope":1343,"src":"4677:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ArrayTypeName","src":"4677:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"data","nameLocation":"4727:4:4","nodeType":"VariableDeclaration","scope":1343,"src":"4712:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:4"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"4746:0:4"},"scope":1344,"src":"4563:184:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1345,"src":"337:4412:4","usedErrors":[],"usedEvents":[1241,1256,1265,1272]}],"src":"110:4640:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1386],"IERC165":[4869]},"id":1387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1346,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1387,"sourceUnit":4870,"src":"144:62:5","symbolAliases":[{"foreign":{"id":1347,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"152:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1350,"name":"IERC165","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"357:7:5"},"id":1351,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"208:118:5","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1386,"linearizedBaseContracts":[1386,4869],"name":"IERC1155Receiver","nameLocation":"337:16:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"371:827:5","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1367,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:5","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"operator","nameLocation":"1247:8:5","nodeType":"VariableDeclaration","scope":1367,"src":"1239:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"from","nameLocation":"1273:4:5","nodeType":"VariableDeclaration","scope":1367,"src":"1265:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"id","nameLocation":"1295:2:5","nodeType":"VariableDeclaration","scope":1367,"src":"1287:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"value","nameLocation":"1315:5:5","nodeType":"VariableDeclaration","scope":1367,"src":"1307:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"data","nameLocation":"1345:4:5","nodeType":"VariableDeclaration","scope":1367,"src":"1330:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1361,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:5"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"1374:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1364,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:5"},"scope":1386,"src":"1203:179:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"1388:995:5","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1385,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:5","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"operator","nameLocation":"2437:8:5","nodeType":"VariableDeclaration","scope":1385,"src":"2429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"from","nameLocation":"2463:4:5","nodeType":"VariableDeclaration","scope":1385,"src":"2455:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"ids","nameLocation":"2496:3:5","nodeType":"VariableDeclaration","scope":1385,"src":"2477:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ArrayTypeName","src":"2477:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"values","nameLocation":"2528:6:5","nodeType":"VariableDeclaration","scope":1385,"src":"2509:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1377,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"data","nameLocation":"2559:4:5","nodeType":"VariableDeclaration","scope":1385,"src":"2544:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:5"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"2588:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1382,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:5"},"scope":1386,"src":"2388:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1387,"src":"327:2271:5","usedErrors":[],"usedEvents":[]}],"src":"118:2481:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","exportedSymbols":{"ERC1155":[1221],"ERC1155Burnable":[1466]},"id":1467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1388,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1467,"sourceUnit":1222,"src":"154:39:6","symbolAliases":[{"foreign":{"id":1389,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"162:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1392,"name":"ERC1155","nameLocations":["380:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"380:7:6"},"id":1393,"nodeType":"InheritanceSpecifier","src":"380:7:6"}],"canonicalName":"ERC1155Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"195:147:6","text":" @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."},"fullyImplemented":true,"id":1466,"linearizedBaseContracts":[1466,1221,304,1664,1344,4857,4869,3125],"name":"ERC1155Burnable","nameLocation":"361:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1427,"nodeType":"Block","src":"467:208:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"481:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1403,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"492:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"492:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"481:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"508:40:6","subExpression":{"arguments":[{"id":1407,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"526:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1408,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"535:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"535:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1406,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"509:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"509:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"481:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"477:156:6","trueBody":{"id":1419,"nodeType":"Block","src":"550:83:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1414,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"600:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"614:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1413,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"571:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"RevertStatement","src":"564:58:6"}]}},{"expression":{"arguments":[{"id":1422,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"649:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1423,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"658:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"662:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"643:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"643:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"ExpressionStatement","src":"643:25:6"}]},"functionSelector":"f5298aca","id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"403:4:6","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"account","nameLocation":"416:7:6","nodeType":"VariableDeclaration","scope":1428,"src":"408:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"id","nameLocation":"433:2:6","nodeType":"VariableDeclaration","scope":1428,"src":"425:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"value","nameLocation":"445:5:6","nodeType":"VariableDeclaration","scope":1428,"src":"437:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"407:44:6"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[],"src":"467:0:6"},"scope":1466,"src":"394:281:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"779:215:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"793:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1440,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"804:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"804:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"793:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"820:40:6","subExpression":{"arguments":[{"id":1444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"838:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1445,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"847:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1443,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"821:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"793:67:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"nodeType":"IfStatement","src":"789:156:6","trueBody":{"id":1456,"nodeType":"Block","src":"862:83:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1451,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"912:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"912:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1450,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"883:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"RevertStatement","src":"876:58:6"}]}},{"expression":{"arguments":[{"id":1459,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"966:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"975:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1461,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"980:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1458,"name":"_burnBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"955:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"ExpressionStatement","src":"955:32:6"}]},"functionSelector":"6b20c454","id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"burnBatch","nameLocation":"690:9:6","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"account","nameLocation":"708:7:6","nodeType":"VariableDeclaration","scope":1465,"src":"700:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"ids","nameLocation":"734:3:6","nodeType":"VariableDeclaration","scope":1465,"src":"717:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1432,"nodeType":"ArrayTypeName","src":"717:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"values","nameLocation":"756:6:6","nodeType":"VariableDeclaration","scope":1465,"src":"739:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1435,"nodeType":"ArrayTypeName","src":"739:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"699:64:6"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"779:0:6"},"scope":1466,"src":"681:313:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1467,"src":"343:653:6","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[1241,1256,1265,1272]}],"src":"128:869:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","exportedSymbols":{"Arrays":[3063],"ERC1155":[1221],"ERC1155Supply":[1648]},"id":1649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1468,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1649,"sourceUnit":1222,"src":"152:39:7","symbolAliases":[{"foreign":{"id":1469,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"160:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../../utils/Arrays.sol","id":1472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1649,"sourceUnit":3064,"src":"192:49:7","symbolAliases":[{"foreign":{"id":1471,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"200:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1474,"name":"ERC1155","nameLocations":["831:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"831:7:7"},"id":1475,"nodeType":"InheritanceSpecifier","src":"831:7:7"}],"canonicalName":"ERC1155Supply","contractDependencies":[],"contractKind":"contract","documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"243:552:7","text":" @dev Extension of ERC-1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."},"fullyImplemented":true,"id":1648,"linearizedBaseContracts":[1648,1221,304,1664,1344,4857,4869,3125],"name":"ERC1155Supply","nameLocation":"814:13:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1479,"libraryName":{"id":1476,"name":"Arrays","nameLocations":["851:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":3063,"src":"851:6:7"},"nodeType":"UsingForDirective","src":"845:27:7","typeName":{"baseType":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ArrayTypeName","src":"862:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"constant":false,"id":1483,"mutability":"mutable","name":"_totalSupply","nameLocation":"917:12:7","nodeType":"VariableDeclaration","scope":1648,"src":"878:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1482,"keyName":"id","keyNameLocation":"894:2:7","keyType":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"878:30:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1485,"mutability":"mutable","name":"_totalSupplyAll","nameLocation":"951:15:7","nodeType":"VariableDeclaration","scope":1648,"src":"935:31:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1497,"nodeType":"Block","src":"1114:40:7","statements":[{"expression":{"baseExpression":{"id":1493,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"1131:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1495,"indexExpression":{"id":1494,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1144:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1131:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1492,"id":1496,"nodeType":"Return","src":"1124:23:7"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"973:65:7","text":" @dev Total value of tokens in with a given id."},"functionSelector":"bd85b039","id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1052:11:7","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"id","nameLocation":"1072:2:7","nodeType":"VariableDeclaration","scope":1498,"src":"1064:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1063:12:7"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1498,"src":"1105:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"1105:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1104:9:7"},"scope":1648,"src":"1043:111:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1506,"nodeType":"Block","src":"1272:39:7","statements":[{"expression":{"id":1504,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1289:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1503,"id":1505,"nodeType":"Return","src":"1282:22:7"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"1160:46:7","text":" @dev Total value of tokens."},"functionSelector":"18160ddd","id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1220:11:7","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[],"src":"1231:2:7"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1507,"src":"1263:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1262:9:7"},"scope":1648,"src":"1211:100:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1521,"nodeType":"Block","src":"1467:43:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1516,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1496:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1515,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1498,1507],"referencedDeclaration":1498,"src":"1484:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1502:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1484:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1514,"id":1520,"nodeType":"Return","src":"1477:26:7"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"1317:82:7","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"1413:6:7","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"id","nameLocation":"1428:2:7","nodeType":"VariableDeclaration","scope":1522,"src":"1420:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1419:12:7"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"1461:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1512,"name":"bool","nodeType":"ElementaryTypeName","src":"1461:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1460:6:7"},"scope":1648,"src":"1404:106:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[770],"body":{"id":1646,"nodeType":"Block","src":"1698:1440:7","statements":[{"expression":{"arguments":[{"id":1540,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1722:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"1728:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1542,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1732:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1543,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1737:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1537,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1708:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Supply_$1648_$","typeString":"type(contract super ERC1155Supply)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1714:7:7","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":770,"src":"1708:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"1708:36:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1759:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1775:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1767:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"1767:7:7","typeDescriptions":{}}},"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1759:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1594,"nodeType":"IfStatement","src":"1755:571:7","trueBody":{"id":1593,"nodeType":"Block","src":"1779:547:7","statements":[{"assignments":[1553],"declarations":[{"constant":false,"id":1553,"mutability":"mutable","name":"totalMintValue","nameLocation":"1801:14:7","nodeType":"VariableDeclaration","scope":1593,"src":"1793:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1555,"initialValue":{"hexValue":"30","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1818:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1793:26:7"},{"body":{"id":1587,"nodeType":"Block","src":"1874:290:7","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"value","nameLocation":"1900:5:7","nodeType":"VariableDeclaration","scope":1587,"src":"1892:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1573,"initialValue":{"arguments":[{"id":1571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1934:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1569,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"1908:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1915:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"1908:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1892:44:7"},{"expression":{"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1574,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"2060:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1579,"indexExpression":{"arguments":[{"id":1577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2096:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1575,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2073:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2077:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"2073:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2060:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2103:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2060:48:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"nodeType":"ExpressionStatement","src":"2060:48:7"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1583,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"2126:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2144:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"2126:23:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1853:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1561,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"1857:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1861:6:7","memberName":"length","nodeType":"MemberAccess","src":"1857:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1853:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1588,"initializationExpression":{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"i","nameLocation":"1846:1:7","nodeType":"VariableDeclaration","scope":1588,"src":"1838:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1559,"initialValue":{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1850:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1838:13:7"},"loopExpression":{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1869:3:7","subExpression":{"id":1564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1871:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"nodeType":"ExpressionStatement","src":"1869:3:7"},"nodeType":"ForStatement","src":"1833:331:7"},{"expression":{"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1589,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2282:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1590,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"2301:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2282:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1592,"nodeType":"ExpressionStatement","src":"2282:33:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2340:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2354:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2346:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"2346:7:7","typeDescriptions":{}}},"id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2340:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1645,"nodeType":"IfStatement","src":"2336:796:7","trueBody":{"id":1644,"nodeType":"Block","src":"2358:774:7","statements":[{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"totalBurnValue","nameLocation":"2380:14:7","nodeType":"VariableDeclaration","scope":1644,"src":"2372:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2372:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1604,"initialValue":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2397:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2372:26:7"},{"body":{"id":1637,"nodeType":"Block","src":"2453:456:7","statements":[{"assignments":[1617],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"value","nameLocation":"2479:5:7","nodeType":"VariableDeclaration","scope":1637,"src":"2471:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2471:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1622,"initialValue":{"arguments":[{"id":1620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2513:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1618,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2487:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2494:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"2487:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2487:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2471:44:7"},{"id":1636,"nodeType":"UncheckedBlock","src":"2534:361:7","statements":[{"expression":{"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1623,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"2672:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1628,"indexExpression":{"arguments":[{"id":1626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2708:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1624,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2685:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2689:18:7","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2981,"src":"2685:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2672:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"2715:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2672:48:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1631,"nodeType":"ExpressionStatement","src":"2672:48:7"},{"expression":{"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1632,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"2853:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"2871:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1635,"nodeType":"ExpressionStatement","src":"2853:23:7"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2432:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1610,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2436:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2440:6:7","memberName":"length","nodeType":"MemberAccess","src":"2436:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2432:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1638,"initializationExpression":{"assignments":[1606],"declarations":[{"constant":false,"id":1606,"mutability":"mutable","name":"i","nameLocation":"2425:1:7","nodeType":"VariableDeclaration","scope":1638,"src":"2417:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2417:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1608,"initialValue":{"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2429:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2417:13:7"},"loopExpression":{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2448:3:7","subExpression":{"id":1613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2450:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1615,"nodeType":"ExpressionStatement","src":"2448:3:7"},"nodeType":"ForStatement","src":"2412:497:7"},{"id":1643,"nodeType":"UncheckedBlock","src":"2922:200:7","statements":[{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1639,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"3074:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1640,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"3093:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3074:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1642,"nodeType":"ExpressionStatement","src":"3074:33:7"}]}]}}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"1516:23:7","text":"@inheritdoc ERC1155"},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1553:7:7","nodeType":"FunctionDefinition","overrides":{"id":1535,"nodeType":"OverrideSpecifier","overrides":[],"src":"1689:8:7"},"parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"from","nameLocation":"1578:4:7","nodeType":"VariableDeclaration","scope":1647,"src":"1570:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"1570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"to","nameLocation":"1600:2:7","nodeType":"VariableDeclaration","scope":1647,"src":"1592:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"ids","nameLocation":"1629:3:7","nodeType":"VariableDeclaration","scope":1647,"src":"1612:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ArrayTypeName","src":"1612:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"values","nameLocation":"1659:6:7","nodeType":"VariableDeclaration","scope":1647,"src":"1642:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1642:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1532,"nodeType":"ArrayTypeName","src":"1642:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1560:111:7"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"1698:0:7"},"scope":1648,"src":"1544:1594:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1649,"src":"796:2344:7","usedErrors":[269,274,279,286,291,296,303],"usedEvents":[1241,1256,1265,1272]}],"src":"126:3015:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1344],"IERC1155MetadataURI":[1664]},"id":1665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1650,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1652,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1665,"sourceUnit":1345,"src":"158:41:8","symbolAliases":[{"foreign":{"id":1651,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"166:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1654,"name":"IERC1155","nameLocations":["399:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1344,"src":"399:8:8"},"id":1655,"nodeType":"InheritanceSpecifier","src":"399:8:8"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"201:164:8","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1664,"linearizedBaseContracts":[1664,1344,4869],"name":"IERC1155MetadataURI","nameLocation":"376:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"414:192:8","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1663,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:8","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"id","nameLocation":"632:2:8","nodeType":"VariableDeclaration","scope":1663,"src":"624:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1657,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:8"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"659:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1660,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:8"},"scope":1664,"src":"611:63:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1665,"src":"366:310:8","usedErrors":[],"usedEvents":[1241,1256,1265,1272]}],"src":"132:545:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1818],"IERC1155Errors":[304],"IERC1155Receiver":[1386]},"id":1819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1666,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1819,"sourceUnit":1387,"src":"146:57:9","symbolAliases":[{"foreign":{"id":1667,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"154:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1819,"sourceUnit":305,"src":"204:70:9","symbolAliases":[{"foreign":{"id":1669,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"212:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"276:162:9","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1818,"linearizedBaseContracts":[1818],"name":"ERC1155Utils","nameLocation":"447:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1742,"nodeType":"Block","src":"1191:776:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1687,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1205:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:9","memberName":"code","nodeType":"MemberAccess","src":"1205:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:9","memberName":"length","nodeType":"MemberAccess","src":"1205:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1741,"nodeType":"IfStatement","src":"1201:760:9","trueBody":{"id":1740,"nodeType":"Block","src":"1225:736:9","statements":[{"clauses":[{"block":{"id":1718,"nodeType":"Block","src":"1341:221:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"1363:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1706,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1375:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"1375:34:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1717,"nodeType":"IfStatement","src":"1359:189:9","trueBody":{"id":1716,"nodeType":"Block","src":"1420:128:9","statements":[{"errorCall":{"arguments":[{"id":1713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1526:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1710,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1488:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"1488:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1715,"nodeType":"RevertStatement","src":"1481:48:9"}]}}]},"errorName":"","id":1719,"nodeType":"TryCatchClause","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"response","nameLocation":"1331:8:9","nodeType":"VariableDeclaration","scope":1719,"src":"1324:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1702,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:9"},"src":"1315:247:9"},{"block":{"id":1737,"nodeType":"Block","src":"1591:360:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1723,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:9","memberName":"length","nodeType":"MemberAccess","src":"1613:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1735,"nodeType":"Block","src":"1784:153:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1831:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1868:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1876:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:9"},"nodeType":"YulFunctionCall","src":"1864:17:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1889:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1883:5:9"},"nodeType":"YulFunctionCall","src":"1883:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:9"},"nodeType":"YulFunctionCall","src":"1857:40:9"},"nodeType":"YulExpressionStatement","src":"1857:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1721,"isOffset":false,"isSlot":false,"src":"1868:6:9","valueSize":1},{"declaration":1721,"isOffset":false,"isSlot":false,"src":"1889:6:9","valueSize":1}],"flags":["memory-safe"],"id":1734,"nodeType":"InlineAssembly","src":"1806:113:9"}]},"id":1736,"nodeType":"IfStatement","src":"1609:328:9","trueBody":{"id":1733,"nodeType":"Block","src":"1633:145:9","statements":[{"errorCall":{"arguments":[{"id":1730,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1756:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1727,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1718:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"1718:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1732,"nodeType":"RevertStatement","src":"1711:48:9"}]}}]},"errorName":"","id":1738,"nodeType":"TryCatchClause","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"reason","nameLocation":"1583:6:9","nodeType":"VariableDeclaration","scope":1738,"src":"1570:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1720,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:9"},"src":"1563:388:9"}],"externalCall":{"arguments":[{"id":1696,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1282:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1292:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"1298:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"1302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1700,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1309:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"1260:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1692,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1243:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1386","typeString":"contract IERC1155Receiver"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"1243:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1739,"nodeType":"TryStatement","src":"1239:712:9"}]}}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"466:535:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:9","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"operator","nameLocation":"1055:8:9","nodeType":"VariableDeclaration","scope":1743,"src":"1047:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"from","nameLocation":"1081:4:9","nodeType":"VariableDeclaration","scope":1743,"src":"1073:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"to","nameLocation":"1103:2:9","nodeType":"VariableDeclaration","scope":1743,"src":"1095:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"id","nameLocation":"1123:2:9","nodeType":"VariableDeclaration","scope":1743,"src":"1115:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"value","nameLocation":"1143:5:9","nodeType":"VariableDeclaration","scope":1743,"src":"1135:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"data","nameLocation":"1171:4:9","nodeType":"VariableDeclaration","scope":1743,"src":"1158:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1683,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:9"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"1191:0:9"},"scope":1818,"src":"1006:961:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1816,"nodeType":"Block","src":"2733:818:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2747:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:9","memberName":"code","nodeType":"MemberAccess","src":"2747:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:9","memberName":"length","nodeType":"MemberAccess","src":"2747:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"2743:802:9","trueBody":{"id":1814,"nodeType":"Block","src":"2767:778:9","statements":[{"clauses":[{"block":{"id":1792,"nodeType":"Block","src":"2920:226:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"2942:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1780,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2954:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"2954:39:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1791,"nodeType":"IfStatement","src":"2938:194:9","trueBody":{"id":1790,"nodeType":"Block","src":"3004:128:9","statements":[{"errorCall":{"arguments":[{"id":1787,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3110:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1784,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3072:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"3072:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1789,"nodeType":"RevertStatement","src":"3065:48:9"}]}}]},"errorName":"","id":1793,"nodeType":"TryCatchClause","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"response","nameLocation":"2897:8:9","nodeType":"VariableDeclaration","scope":1793,"src":"2890:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1776,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:9"},"src":"2864:282:9"},{"block":{"id":1811,"nodeType":"Block","src":"3175:360:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1797,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"3197:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:9","memberName":"length","nodeType":"MemberAccess","src":"3197:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1809,"nodeType":"Block","src":"3368:153:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3415:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3452:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3460:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3448:3:9"},"nodeType":"YulFunctionCall","src":"3448:17:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3473:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3467:5:9"},"nodeType":"YulFunctionCall","src":"3467:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3441:6:9"},"nodeType":"YulFunctionCall","src":"3441:40:9"},"nodeType":"YulExpressionStatement","src":"3441:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1795,"isOffset":false,"isSlot":false,"src":"3452:6:9","valueSize":1},{"declaration":1795,"isOffset":false,"isSlot":false,"src":"3473:6:9","valueSize":1}],"flags":["memory-safe"],"id":1808,"nodeType":"InlineAssembly","src":"3390:113:9"}]},"id":1810,"nodeType":"IfStatement","src":"3193:328:9","trueBody":{"id":1807,"nodeType":"Block","src":"3217:145:9","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3340:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1801,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3302:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$304_$","typeString":"type(contract IERC1155Errors)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":279,"src":"3302:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"RevertStatement","src":"3295:48:9"}]}}]},"errorName":"","id":1812,"nodeType":"TryCatchClause","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"reason","nameLocation":"3167:6:9","nodeType":"VariableDeclaration","scope":1812,"src":"3154:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1794,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:9"},"src":"3147:388:9"}],"externalCall":{"arguments":[{"id":1770,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2829:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1771,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2839:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1772,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2845:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1773,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2850:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1774,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"2858:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1767,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"2802:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1766,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2785:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1386_$","typeString":"type(contract IERC1155Receiver)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1386","typeString":"contract IERC1155Receiver"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1385,"src":"2785:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1813,"nodeType":"TryStatement","src":"2781:754:9"}]}}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"1973:545:9","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1817,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:9","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"operator","nameLocation":"2577:8:9","nodeType":"VariableDeclaration","scope":1817,"src":"2569:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"from","nameLocation":"2603:4:9","nodeType":"VariableDeclaration","scope":1817,"src":"2595:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"to","nameLocation":"2625:2:9","nodeType":"VariableDeclaration","scope":1817,"src":"2617:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"ids","nameLocation":"2654:3:9","nodeType":"VariableDeclaration","scope":1817,"src":"2637:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ArrayTypeName","src":"2637:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"values","nameLocation":"2684:6:9","nodeType":"VariableDeclaration","scope":1817,"src":"2667:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1755,"nodeType":"ArrayTypeName","src":"2667:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"data","nameLocation":"2713:4:9","nodeType":"VariableDeclaration","scope":1817,"src":"2700:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1757,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:9"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"2733:0:9"},"scope":1818,"src":"2523:1028:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1819,"src":"439:3114:9","usedErrors":[],"usedEvents":[]}],"src":"120:3434:9"},"id":9},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[4857],"ERC2981":[2085],"IERC165":[4869],"IERC2981":[167]},"id":2086,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1820,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:10"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":1822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2086,"sourceUnit":168,"src":"134:55:10","symbolAliases":[{"foreign":{"id":1821,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"142:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2086,"sourceUnit":4858,"src":"190:69:10","symbolAliases":[{"foreign":{"id":1823,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"198:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1824,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"207:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1827,"name":"IERC2981","nameLocations":["1135:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":167,"src":"1135:8:10"},"id":1828,"nodeType":"InheritanceSpecifier","src":"1135:8:10"},{"baseName":{"id":1829,"name":"ERC165","nameLocations":["1145:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4857,"src":"1145:6:10"},"id":1830,"nodeType":"InheritanceSpecifier","src":"1145:6:10"}],"canonicalName":"ERC2981","contractDependencies":[],"contractKind":"contract","documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"261:844:10","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."},"fullyImplemented":true,"id":2085,"linearizedBaseContracts":[2085,4857,167,4869],"name":"ERC2981","nameLocation":"1124:7:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":1835,"members":[{"constant":false,"id":1832,"mutability":"mutable","name":"receiver","nameLocation":"1195:8:10","nodeType":"VariableDeclaration","scope":1835,"src":"1187:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"1187:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"royaltyFraction","nameLocation":"1220:15:10","nodeType":"VariableDeclaration","scope":1835,"src":"1213:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1833,"name":"uint96","nodeType":"ElementaryTypeName","src":"1213:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nameLocation":"1165:11:10","nodeType":"StructDefinition","scope":2085,"src":"1158:84:10","visibility":"public"},{"constant":false,"id":1838,"mutability":"mutable","name":"_defaultRoyaltyInfo","nameLocation":"1268:19:10","nodeType":"VariableDeclaration","scope":2085,"src":"1248:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":1837,"nodeType":"UserDefinedTypeName","pathNode":{"id":1836,"name":"RoyaltyInfo","nameLocations":["1248:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1835,"src":"1248:11:10"},"referencedDeclaration":1835,"src":"1248:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":1843,"mutability":"mutable","name":"_tokenRoyaltyInfo","nameLocation":"1341:17:10","nodeType":"VariableDeclaration","scope":2085,"src":"1293:65:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1835_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":1842,"keyName":"tokenId","keyNameLocation":"1309:7:10","keyType":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1293:39:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1835_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1841,"nodeType":"UserDefinedTypeName","pathNode":{"id":1840,"name":"RoyaltyInfo","nameLocations":["1320:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1835,"src":"1320:11:10"},"referencedDeclaration":1835,"src":"1320:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"1365:96:10","text":" @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"6f483d09","id":1850,"name":"ERC2981InvalidDefaultRoyalty","nameLocation":"1472:28:10","nodeType":"ErrorDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"numerator","nameLocation":"1509:9:10","nodeType":"VariableDeclaration","scope":1850,"src":"1501:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1501:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"denominator","nameLocation":"1528:11:10","nodeType":"VariableDeclaration","scope":1850,"src":"1520:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1500:40:10"},"src":"1466:75:10"},{"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"1547:64:10","text":" @dev The default royalty receiver is invalid."},"errorSelector":"b6d9900a","id":1855,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nameLocation":"1622:36:10","nodeType":"ErrorDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"receiver","nameLocation":"1667:8:10","nodeType":"VariableDeclaration","scope":1855,"src":"1659:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1658:18:10"},"src":"1616:61:10"},{"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"1683:113:10","text":" @dev The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."},"errorSelector":"dfd1fc1b","id":1864,"name":"ERC2981InvalidTokenRoyalty","nameLocation":"1807:26:10","nodeType":"ErrorDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"tokenId","nameLocation":"1842:7:10","nodeType":"VariableDeclaration","scope":1864,"src":"1834:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"numerator","nameLocation":"1859:9:10","nodeType":"VariableDeclaration","scope":1864,"src":"1851:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"denominator","nameLocation":"1878:11:10","nodeType":"VariableDeclaration","scope":1864,"src":"1870:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:57:10"},"src":"1801:90:10"},{"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"1897:70:10","text":" @dev The royalty receiver for `tokenId` is invalid."},"errorSelector":"969f0852","id":1871,"name":"ERC2981InvalidTokenRoyaltyReceiver","nameLocation":"1978:34:10","nodeType":"ErrorDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"tokenId","nameLocation":"2021:7:10","nodeType":"VariableDeclaration","scope":1871,"src":"2013:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"receiver","nameLocation":"2038:8:10","nodeType":"VariableDeclaration","scope":1871,"src":"2030:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2012:35:10"},"src":"1972:76:10"},{"baseFunctions":[4856,4868],"body":{"id":1894,"nodeType":"Block","src":"2190:105:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2207:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1884,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2227:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}],"id":1883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2222:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$167","typeString":"type(contract IERC2981)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2237:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"2222:26:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2207:41:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1890,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2276:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1888,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2252:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$2085_$","typeString":"type(contract super ERC2981)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2258:17:10","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4856,"src":"2252:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2207:81:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1881,"id":1893,"nodeType":"Return","src":"2200:88:10"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"2054:23:10","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2091:17:10","nodeType":"FunctionDefinition","overrides":{"id":1878,"nodeType":"OverrideSpecifier","overrides":[{"id":1876,"name":"IERC165","nameLocations":["2158:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"2158:7:10"},{"id":1877,"name":"ERC165","nameLocations":["2167:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":4857,"src":"2167:6:10"}],"src":"2149:25:10"},"parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"interfaceId","nameLocation":"2116:11:10","nodeType":"VariableDeclaration","scope":1895,"src":"2109:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1873,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2109:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2108:20:10"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1895,"src":"2184:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1879,"name":"bool","nodeType":"ElementaryTypeName","src":"2184:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2183:6:10"},"scope":2085,"src":"2082:213:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[166],"body":{"id":1956,"nodeType":"Block","src":"2472:515:10","statements":[{"assignments":[1909],"declarations":[{"constant":false,"id":1909,"mutability":"mutable","name":"_royaltyInfo","nameLocation":"2502:12:10","nodeType":"VariableDeclaration","scope":1956,"src":"2482:32:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":1908,"nodeType":"UserDefinedTypeName","pathNode":{"id":1907,"name":"RoyaltyInfo","nameLocations":["2482:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1835,"src":"2482:11:10"},"referencedDeclaration":1835,"src":"2482:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":1913,"initialValue":{"baseExpression":{"id":1910,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2517:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1835_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":1912,"indexExpression":{"id":1911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"2535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2517:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2482:61:10"},{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"royaltyReceiver","nameLocation":"2561:15:10","nodeType":"VariableDeclaration","scope":1956,"src":"2553:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"2553:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1918,"initialValue":{"expression":{"id":1916,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2579:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2592:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"2579:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2553:47:10"},{"assignments":[1920],"declarations":[{"constant":false,"id":1920,"mutability":"mutable","name":"royaltyFraction","nameLocation":"2617:15:10","nodeType":"VariableDeclaration","scope":1956,"src":"2610:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1919,"name":"uint96","nodeType":"ElementaryTypeName","src":"2610:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":1923,"initialValue":{"expression":{"id":1921,"name":"_royaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2635:12:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo storage pointer"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2648:15:10","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1834,"src":"2635:28:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"2610:53:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2678:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2697:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"2697:7:10","typeDescriptions":{}}},"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2697:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2678:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1941,"nodeType":"IfStatement","src":"2674:173:10","trueBody":{"id":1940,"nodeType":"Block","src":"2709:138:10","statements":[{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1930,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2723:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1931,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2741:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":1932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:10","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1832,"src":"2741:28:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2723:46:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1934,"nodeType":"ExpressionStatement","src":"2723:46:10"},{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1935,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2783:15:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1936,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2801:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":1937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2821:15:10","memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1834,"src":"2801:35:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2783:53:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":1939,"nodeType":"ExpressionStatement","src":"2783:53:10"}]}},{"assignments":[1943],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2865:13:10","nodeType":"VariableDeclaration","scope":1956,"src":"2857:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"2857:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1951,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2882:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1945,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"2894:15:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2882:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2881:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1948,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2913:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2881:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2857:73:10"},{"expression":{"components":[{"id":1952,"name":"royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2949:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1953,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2966:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2948:32:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":1906,"id":1955,"nodeType":"Return","src":"2941:39:10"}]},"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"2301:24:10","text":"@inheritdoc IERC2981"},"functionSelector":"2a55205a","id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2339:11:10","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"tokenId","nameLocation":"2368:7:10","nodeType":"VariableDeclaration","scope":1957,"src":"2360:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2360:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"salePrice","nameLocation":"2393:9:10","nodeType":"VariableDeclaration","scope":1957,"src":"2385:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"2385:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2350:58:10"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"receiver","nameLocation":"2446:8:10","nodeType":"VariableDeclaration","scope":1957,"src":"2438:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1905,"mutability":"mutable","name":"amount","nameLocation":"2464:6:10","nodeType":"VariableDeclaration","scope":1957,"src":"2456:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2437:34:10"},"scope":2085,"src":"2330:657:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1965,"nodeType":"Block","src":"3328:29:10","statements":[{"expression":{"hexValue":"3130303030","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3345:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":1962,"id":1964,"nodeType":"Return","src":"3338:12:10"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"2993:264:10","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nameLocation":"3271:15:10","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[],"src":"3286:2:10"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"3320:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1960,"name":"uint96","nodeType":"ElementaryTypeName","src":"3320:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3319:8:10"},"scope":2085,"src":"3262:95:10","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":2011,"nodeType":"Block","src":"3702:423:10","statements":[{"assignments":[1975],"declarations":[{"constant":false,"id":1975,"mutability":"mutable","name":"denominator","nameLocation":"3720:11:10","nodeType":"VariableDeclaration","scope":2011,"src":"3712:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"3712:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1976,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"3734:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"3712:39:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3765:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1980,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3780:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3765:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1988,"nodeType":"IfStatement","src":"3761:173:10","trueBody":{"id":1987,"nodeType":"Block","src":"3793:141:10","statements":[{"errorCall":{"arguments":[{"id":1983,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"3897:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":1984,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3911:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1982,"name":"ERC2981InvalidDefaultRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"3868:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1986,"nodeType":"RevertStatement","src":"3861:62:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"3947:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3967:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3959:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:10","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3947:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2003,"nodeType":"IfStatement","src":"3943:108:10","trueBody":{"id":2002,"nodeType":"Block","src":"3971:80:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4037:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4029:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"4029:7:10","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1995,"name":"ERC2981InvalidDefaultRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3992:36:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3992:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"RevertStatement","src":"3985:55:10"}]}},{"expression":{"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2004,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4061:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2006,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"4095:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2007,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"4105:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2005,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4083:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1835_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"4061:57:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2010,"nodeType":"ExpressionStatement","src":"4061:57:10"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"3363:250:10","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2012,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nameLocation":"3627:18:10","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"receiver","nameLocation":"3654:8:10","nodeType":"VariableDeclaration","scope":2012,"src":"3646:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"3646:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"feeNumerator","nameLocation":"3671:12:10","nodeType":"VariableDeclaration","scope":2012,"src":"3664:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1970,"name":"uint96","nodeType":"ElementaryTypeName","src":"3664:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3645:39:10"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"3702:0:10"},"scope":2085,"src":"3618:507:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2019,"nodeType":"Block","src":"4246:43:10","statements":[{"expression":{"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4256:26:10","subExpression":{"id":2016,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"4263:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"ExpressionStatement","src":"4256:26:10"}]},"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"4131:60:10","text":" @dev Removes default royalty information."},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nameLocation":"4205:21:10","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"4226:2:10"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[],"src":"4246:0:10"},"scope":2085,"src":"4196:93:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"4658:444:10","statements":[{"assignments":[2031],"declarations":[{"constant":false,"id":2031,"mutability":"mutable","name":"denominator","nameLocation":"4676:11:10","nodeType":"VariableDeclaration","scope":2071,"src":"4668:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2034,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2032,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"4690:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4690:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4668:39:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2035,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4721:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2036,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"4736:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4721:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"IfStatement","src":"4717:180:10","trueBody":{"id":2044,"nodeType":"Block","src":"4749:148:10","statements":[{"errorCall":{"arguments":[{"id":2039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"4851:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2040,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4860:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":2041,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"4874:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2038,"name":"ERC2981InvalidTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4824:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"RevertStatement","src":"4817:69:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"4910:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"4922:7:10","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4910:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2061,"nodeType":"IfStatement","src":"4906:115:10","trueBody":{"id":2060,"nodeType":"Block","src":"4934:87:10","statements":[{"errorCall":{"arguments":[{"id":2053,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"4990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4999:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:10","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4999:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2052,"name":"ERC2981InvalidTokenRoyaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4955:34:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address) pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4955:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"RevertStatement","src":"4948:62:10"}]}},{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2062,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5031:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1835_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2064,"indexExpression":{"id":2063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"5049:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5031:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2066,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5072:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2067,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5082:12:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2065,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"5060:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1835_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5060:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"5031:64:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":2070,"nodeType":"ExpressionStatement","src":"5031:64:10"}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"4295:259:10","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nameLocation":"4568:16:10","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"tokenId","nameLocation":"4593:7:10","nodeType":"VariableDeclaration","scope":2072,"src":"4585:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"receiver","nameLocation":"4610:8:10","nodeType":"VariableDeclaration","scope":2072,"src":"4602:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"4602:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"feeNumerator","nameLocation":"4627:12:10","nodeType":"VariableDeclaration","scope":2072,"src":"4620:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2026,"name":"uint96","nodeType":"ElementaryTypeName","src":"4620:6:10","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4584:56:10"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"4658:0:10"},"scope":2085,"src":"4559:543:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2083,"nodeType":"Block","src":"5270:50:10","statements":[{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5280:33:10","subExpression":{"baseExpression":{"id":2078,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"5287:17:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1835_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":2080,"indexExpression":{"id":2079,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5305:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5287:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1835_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"5280:33:10"}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"5108:95:10","text":" @dev Resets royalty information for the token id back to the global default."},"id":2084,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nameLocation":"5217:18:10","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"tokenId","nameLocation":"5244:7:10","nodeType":"VariableDeclaration","scope":2084,"src":"5236:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5235:17:10"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[],"src":"5270:0:10"},"scope":2085,"src":"5208:112:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2086,"src":"1106:4216:10","usedErrors":[1850,1855,1864,1871],"usedEvents":[]}],"src":"108:5215:10"},"id":10},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3063],"Comparators":[3095],"Math":[6490],"SlotDerivation":[3307],"StorageSlot":[3431]},"id":3064,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2087,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3064,"sourceUnit":3096,"src":"209:46:11","symbolAliases":[{"foreign":{"id":2088,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"217:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3064,"sourceUnit":3308,"src":"256:52:11","symbolAliases":[{"foreign":{"id":2090,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"264:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2093,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3064,"sourceUnit":3432,"src":"309:46:11","symbolAliases":[{"foreign":{"id":2092,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"317:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3064,"sourceUnit":6491,"src":"356:37:11","symbolAliases":[{"foreign":{"id":2094,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"364:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"395:63:11","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3063,"linearizedBaseContracts":[3063],"name":"Arrays","nameLocation":"467:6:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2099,"libraryName":{"id":2097,"name":"SlotDerivation","nameLocations":["486:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":3307,"src":"486:14:11"},"nodeType":"UsingForDirective","src":"480:33:11","typeName":{"id":2098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2102,"libraryName":{"id":2100,"name":"StorageSlot","nameLocations":["524:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":3431,"src":"524:11:11"},"nodeType":"UsingForDirective","src":"518:30:11","typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2134,"nodeType":"Block","src":"1628:83:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2124,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1656:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2123,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"1649:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2127,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1669:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2126,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"1664:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2129,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"1677:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2122,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"1638:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2131,"nodeType":"ExpressionStatement","src":"1638:44:11"},{"expression":{"id":2132,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1699:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2121,"id":2133,"nodeType":"Return","src":"1692:12:11"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"554:915:11","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:11","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"array","nameLocation":"1514:5:11","nodeType":"VariableDeclaration","scope":2135,"src":"1497:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ArrayTypeName","src":"1497:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"comp","nameLocation":"1576:4:11","nodeType":"VariableDeclaration","scope":2135,"src":"1529:51:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2115,"nodeType":"FunctionTypeName","parameterTypes":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"1538:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"1547:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:11"},"returnParameterTypes":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2115,"src":"1570:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2112,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:11"},"src":"1529:51:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:11"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"1610:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2119,"nodeType":"ArrayTypeName","src":"1610:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:11"},"scope":3063,"src":"1474:237:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"1894:66:11","statements":[{"expression":{"arguments":[{"id":2146,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1909:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2147,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"1916:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3095_$","typeString":"type(library Comparators)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:11","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3080,"src":"1916:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2145,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2135,2154,2186,2207,2239,2260],"referencedDeclaration":2135,"src":"1904:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2150,"nodeType":"ExpressionStatement","src":"1904:27:11"},{"expression":{"id":2151,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1948:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2144,"id":2152,"nodeType":"Return","src":"1941:12:11"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"1717:93:11","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:11","nodeType":"FunctionDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"array","nameLocation":"1846:5:11","nodeType":"VariableDeclaration","scope":2154,"src":"1829:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ArrayTypeName","src":"1829:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:11"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"1876:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2142,"nodeType":"ArrayTypeName","src":"1876:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:11"},"scope":3063,"src":"1815:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2185,"nodeType":"Block","src":"3040:97:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2176,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3075:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2175,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2411,2423],"referencedDeclaration":2411,"src":"3055:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2179,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"3102:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2178,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2449,2475],"referencedDeclaration":2449,"src":"3083:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2174,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2135,2154,2186,2207,2239,2260],"referencedDeclaration":2135,"src":"3050:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2182,"nodeType":"ExpressionStatement","src":"3050:58:11"},{"expression":{"id":2183,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"3125:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2173,"id":2184,"nodeType":"Return","src":"3118:12:11"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"1966:915:11","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:11","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"array","nameLocation":"2926:5:11","nodeType":"VariableDeclaration","scope":2186,"src":"2909:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2157,"nodeType":"ArrayTypeName","src":"2909:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"comp","nameLocation":"2988:4:11","nodeType":"VariableDeclaration","scope":2186,"src":"2941:51:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2167,"nodeType":"FunctionTypeName","parameterTypes":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"2950:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"2959:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:11"},"returnParameterTypes":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"2982:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2164,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:11"},"src":"2941:51:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:11"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"3022:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2171,"nodeType":"ArrayTypeName","src":"3022:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:11"},"scope":3063,"src":"2886:251:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2206,"nodeType":"Block","src":"3320:87:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2198,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3355:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2197,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2411,2423],"referencedDeclaration":2411,"src":"3335:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2200,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"3363:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3095_$","typeString":"type(library Comparators)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:11","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3080,"src":"3363:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2196,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2135,2154,2186,2207,2239,2260],"referencedDeclaration":2135,"src":"3330:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2203,"nodeType":"ExpressionStatement","src":"3330:48:11"},{"expression":{"id":2204,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3395:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2195,"id":2205,"nodeType":"Return","src":"3388:12:11"}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"3143:93:11","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:11","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"array","nameLocation":"3272:5:11","nodeType":"VariableDeclaration","scope":2207,"src":"3255:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2188,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2189,"nodeType":"ArrayTypeName","src":"3255:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:11"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"3302:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2193,"nodeType":"ArrayTypeName","src":"3302:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:11"},"scope":3063,"src":"3241:166:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2238,"nodeType":"Block","src":"4487:97:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2229,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"4522:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2228,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2411,2423],"referencedDeclaration":2423,"src":"4502:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2232,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"4549:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2231,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2449,2475],"referencedDeclaration":2475,"src":"4530:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2227,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2135,2154,2186,2207,2239,2260],"referencedDeclaration":2135,"src":"4497:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2235,"nodeType":"ExpressionStatement","src":"4497:58:11"},{"expression":{"id":2236,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"4572:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2226,"id":2237,"nodeType":"Return","src":"4565:12:11"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"3413:915:11","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2239,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:11","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"array","nameLocation":"4373:5:11","nodeType":"VariableDeclaration","scope":2239,"src":"4356:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2210,"nodeType":"ArrayTypeName","src":"4356:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"comp","nameLocation":"4435:4:11","nodeType":"VariableDeclaration","scope":2239,"src":"4388:51:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2220,"nodeType":"FunctionTypeName","parameterTypes":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2220,"src":"4397:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2220,"src":"4406:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:11"},"returnParameterTypes":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2220,"src":"4429:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2217,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:11"},"src":"4388:51:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:11"},"returnParameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2239,"src":"4469:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2224,"nodeType":"ArrayTypeName","src":"4469:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:11"},"scope":3063,"src":"4333:251:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"4767:87:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2251,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4802:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2250,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2411,2423],"referencedDeclaration":2423,"src":"4782:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2253,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4810:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3095_$","typeString":"type(library Comparators)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:11","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3080,"src":"4810:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2249,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2135,2154,2186,2207,2239,2260],"referencedDeclaration":2135,"src":"4777:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2256,"nodeType":"ExpressionStatement","src":"4777:48:11"},{"expression":{"id":2257,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4842:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2248,"id":2258,"nodeType":"Return","src":"4835:12:11"}]},"documentation":{"id":2240,"nodeType":"StructuredDocumentation","src":"4590:93:11","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:11","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"array","nameLocation":"4719:5:11","nodeType":"VariableDeclaration","scope":2260,"src":"4702:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2242,"nodeType":"ArrayTypeName","src":"4702:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:11"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"4749:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2246,"nodeType":"ArrayTypeName","src":"4749:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:11"},"scope":3063,"src":"4688:166:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2347,"nodeType":"Block","src":"5470:889:11","statements":[{"id":2346,"nodeType":"UncheckedBlock","src":"5480:873:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5508:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2279,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5514:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"5504:31:11","trueBody":{"functionReturnParameters":2277,"id":2283,"nodeType":"Return","src":"5528:7:11"}},{"assignments":[2286],"declarations":[{"constant":false,"id":2286,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:11","nodeType":"VariableDeclaration","scope":2346,"src":"5591:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2290,"initialValue":{"arguments":[{"id":2288,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5614:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2287,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"5607:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:11"},{"assignments":[2292],"declarations":[{"constant":false,"id":2292,"mutability":"mutable","name":"pos","nameLocation":"5715:3:11","nodeType":"VariableDeclaration","scope":2346,"src":"5707:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2294,"initialValue":{"id":2293,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5721:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:11"},{"body":{"id":2325,"nodeType":"Block","src":"5795:331:11","statements":[{"condition":{"arguments":[{"arguments":[{"id":2310,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"5829:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2309,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"5822:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2312,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"5834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"5817:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2324,"nodeType":"IfStatement","src":"5813:299:11","trueBody":{"id":2323,"nodeType":"Block","src":"5842:270:11","statements":[{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6046:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ExpressionStatement","src":"6046:11:11"},{"expression":{"arguments":[{"id":2319,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6085:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2320,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"6090:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2318,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"6079:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2322,"nodeType":"ExpressionStatement","src":"6079:14:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"5773:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2302,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"5778:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2326,"initializationExpression":{"assignments":[2296],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"it","nameLocation":"5754:2:11","nodeType":"VariableDeclaration","scope":2326,"src":"5746:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2300,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5759:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:11"},"loopExpression":{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"5783:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2307,"nodeType":"ExpressionStatement","src":"5783:10:11"},"nodeType":"ForStatement","src":"5741:385:11"},{"expression":{"arguments":[{"id":2328,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"6146:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2329,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6153:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2327,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"6140:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2331,"nodeType":"ExpressionStatement","src":"6140:17:11"},{"expression":{"arguments":[{"id":2333,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"6207:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2334,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6214:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2335,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6219:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2332,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6196:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2337,"nodeType":"ExpressionStatement","src":"6196:28:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"6284:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2342,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"6296:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2343,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6301:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2338,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6273:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"ExpressionStatement","src":"6273:33:11"}]}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"4860:491:11","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2348,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:11","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"begin","nameLocation":"5384:5:11","nodeType":"VariableDeclaration","scope":2348,"src":"5376:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"end","nameLocation":"5399:3:11","nodeType":"VariableDeclaration","scope":2348,"src":"5391:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"comp","nameLocation":"5451:4:11","nodeType":"VariableDeclaration","scope":2348,"src":"5404:51:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2274,"nodeType":"FunctionTypeName","parameterTypes":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"5413:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"5422:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:11"},"returnParameterTypes":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"5445:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2271,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:11"},"src":"5404:51:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:11"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[],"src":"5470:0:11"},"scope":3063,"src":"5356:1003:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2358,"nodeType":"Block","src":"6532:88:11","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:11","statements":[{"nodeType":"YulAssignment","src":"6581:23:11","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:11"},"nodeType":"YulFunctionCall","src":"6588:16:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2352,"isOffset":false,"isSlot":false,"src":"6592:5:11","valueSize":1},{"declaration":2355,"isOffset":false,"isSlot":false,"src":"6581:3:11","valueSize":1}],"flags":["memory-safe"],"id":2357,"nodeType":"InlineAssembly","src":"6542:72:11"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"6365:87:11","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:11","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"array","nameLocation":"6490:5:11","nodeType":"VariableDeclaration","scope":2359,"src":"6473:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"nodeType":"ArrayTypeName","src":"6473:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:11"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:11","nodeType":"VariableDeclaration","scope":2359,"src":"6519:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:11"},"scope":3063,"src":"6457:163:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2378,"nodeType":"Block","src":"6892:93:11","statements":[{"id":2377,"nodeType":"UncheckedBlock","src":"6902:77:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2369,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6940:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2368,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"6933:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2371,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6949:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:11","memberName":"length","nodeType":"MemberAccess","src":"6949:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2367,"id":2376,"nodeType":"Return","src":"6926:42:11"}]}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"6626:188:11","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:11","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"array","nameLocation":"6850:5:11","nodeType":"VariableDeclaration","scope":2379,"src":"6833:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ArrayTypeName","src":"6833:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:11"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:11","nodeType":"VariableDeclaration","scope":2379,"src":"6879:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:11"},"scope":3063,"src":"6819:166:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2388,"nodeType":"Block","src":"7136:68:11","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:11","statements":[{"nodeType":"YulAssignment","src":"7169:19:11","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:11"},"nodeType":"YulFunctionCall","src":"7178:10:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2382,"isOffset":false,"isSlot":false,"src":"7184:3:11","valueSize":1},{"declaration":2385,"isOffset":false,"isSlot":false,"src":"7169:5:11","valueSize":1}],"id":2387,"nodeType":"InlineAssembly","src":"7146:52:11"}]},"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"6991:74:11","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:11","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:11","nodeType":"VariableDeclaration","scope":2389,"src":"7086:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:11"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"value","nameLocation":"7129:5:11","nodeType":"VariableDeclaration","scope":2389,"src":"7121:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:11"},"scope":3063,"src":"7070:134:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2398,"nodeType":"Block","src":"7348:178:11","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:11","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:11","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:11"},"nodeType":"YulFunctionCall","src":"7395:11:11"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:11","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:11"},"nodeType":"YulFunctionCall","src":"7433:11:11"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:11","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:11"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:11"},"nodeType":"YulFunctionCall","src":"7457:20:11"},"nodeType":"YulExpressionStatement","src":"7457:20:11"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:11"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:11"},"nodeType":"YulFunctionCall","src":"7490:20:11"},"nodeType":"YulExpressionStatement","src":"7490:20:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2392,"isOffset":false,"isSlot":false,"src":"7401:4:11","valueSize":1},{"declaration":2392,"isOffset":false,"isSlot":false,"src":"7464:4:11","valueSize":1},{"declaration":2394,"isOffset":false,"isSlot":false,"src":"7439:4:11","valueSize":1},{"declaration":2394,"isOffset":false,"isSlot":false,"src":"7497:4:11","valueSize":1}],"id":2397,"nodeType":"InlineAssembly","src":"7358:162:11"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"7210:77:11","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:11","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:11","nodeType":"VariableDeclaration","scope":2399,"src":"7307:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:11","nodeType":"VariableDeclaration","scope":2399,"src":"7321:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:11"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[],"src":"7348:0:11"},"scope":3063,"src":"7292:234:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2410,"nodeType":"Block","src":"7713:64:11","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:11","statements":[{"nodeType":"YulAssignment","src":"7746:15:11","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:11"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2403,"isOffset":false,"isSlot":false,"src":"7756:5:11","valueSize":1},{"declaration":2407,"isOffset":false,"isSlot":false,"src":"7746:6:11","valueSize":1}],"id":2409,"nodeType":"InlineAssembly","src":"7723:48:11"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"7532:76:11","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2411,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:11","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"input","nameLocation":"7659:5:11","nodeType":"VariableDeclaration","scope":2411,"src":"7642:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2402,"nodeType":"ArrayTypeName","src":"7642:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:11"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"output","nameLocation":"7705:6:11","nodeType":"VariableDeclaration","scope":2411,"src":"7688:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ArrayTypeName","src":"7688:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:11"},"scope":3063,"src":"7613:164:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2422,"nodeType":"Block","src":"7964:64:11","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:11","statements":[{"nodeType":"YulAssignment","src":"7997:15:11","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:11"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2415,"isOffset":false,"isSlot":false,"src":"8007:5:11","valueSize":1},{"declaration":2419,"isOffset":false,"isSlot":false,"src":"7997:6:11","valueSize":1}],"id":2421,"nodeType":"InlineAssembly","src":"7974:48:11"}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"7783:76:11","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2423,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:11","nodeType":"FunctionDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"input","nameLocation":"7910:5:11","nodeType":"VariableDeclaration","scope":2423,"src":"7893:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2414,"nodeType":"ArrayTypeName","src":"7893:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:11"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"output","nameLocation":"7956:6:11","nodeType":"VariableDeclaration","scope":2423,"src":"7939:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"nodeType":"ArrayTypeName","src":"7939:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:11"},"scope":3063,"src":"7864:164:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2448,"nodeType":"Block","src":"8290:64:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:11","statements":[{"nodeType":"YulAssignment","src":"8323:15:11","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:11"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2434,"isOffset":false,"isSlot":false,"src":"8333:5:11","valueSize":1},{"declaration":2445,"isOffset":false,"isSlot":false,"src":"8323:6:11","valueSize":1}],"id":2447,"nodeType":"InlineAssembly","src":"8300:48:11"}]},"documentation":{"id":2424,"nodeType":"StructuredDocumentation","src":"8034:78:11","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2449,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:11","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"input","nameLocation":"8201:5:11","nodeType":"VariableDeclaration","scope":2449,"src":"8154:52:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2433,"nodeType":"FunctionTypeName","parameterTypes":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"8163:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"8172:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:11"},"returnParameterTypes":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"8195:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:11"},"src":"8154:52:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:11"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"output","nameLocation":"8282:6:11","nodeType":"VariableDeclaration","scope":2449,"src":"8235:53:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2444,"nodeType":"FunctionTypeName","parameterTypes":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"8244:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"8253:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:11"},"returnParameterTypes":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"8276:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2441,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:11"},"src":"8235:53:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:11"},"scope":3063,"src":"8117:237:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2474,"nodeType":"Block","src":"8616:64:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:11","statements":[{"nodeType":"YulAssignment","src":"8649:15:11","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:11"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2460,"isOffset":false,"isSlot":false,"src":"8659:5:11","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"8649:6:11","valueSize":1}],"id":2473,"nodeType":"InlineAssembly","src":"8626:48:11"}]},"documentation":{"id":2450,"nodeType":"StructuredDocumentation","src":"8360:78:11","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:11","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"input","nameLocation":"8527:5:11","nodeType":"VariableDeclaration","scope":2475,"src":"8480:52:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2459,"nodeType":"FunctionTypeName","parameterTypes":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"8489:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"8498:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:11"},"returnParameterTypes":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"8521:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2456,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:11"},"src":"8480:52:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:11"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"output","nameLocation":"8608:6:11","nodeType":"VariableDeclaration","scope":2475,"src":"8561:53:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2470,"nodeType":"FunctionTypeName","parameterTypes":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"8570:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"8579:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:11"},"returnParameterTypes":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"8602:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2467,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:11"},"src":"8561:53:11","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:11"},"scope":3063,"src":"8443:237:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2557,"nodeType":"Block","src":"9405:834:11","statements":[{"assignments":[2487],"declarations":[{"constant":false,"id":2487,"mutability":"mutable","name":"low","nameLocation":"9423:3:11","nodeType":"VariableDeclaration","scope":2557,"src":"9415:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2489,"initialValue":{"hexValue":"30","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:11"},{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"high","nameLocation":"9448:4:11","nodeType":"VariableDeclaration","scope":2557,"src":"9440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2494,"initialValue":{"expression":{"id":2492,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"9455:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:11","memberName":"length","nodeType":"MemberAccess","src":"9455:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2495,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"9482:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"IfStatement","src":"9478:48:11","trueBody":{"id":2500,"nodeType":"Block","src":"9493:33:11","statements":[{"expression":{"hexValue":"30","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2485,"id":2499,"nodeType":"Return","src":"9507:8:11"}]}},{"body":{"id":2533,"nodeType":"Block","src":"9555:423:11","statements":[{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"mid","nameLocation":"9577:3:11","nodeType":"VariableDeclaration","scope":2533,"src":"9569:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2512,"initialValue":{"arguments":[{"id":2509,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"9596:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2510,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"9601:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2507,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"9583:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5219,"src":"9583:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2514,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"9844:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2515,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"9851:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2513,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2838,2864,2890,2916,2942],"referencedDeclaration":2890,"src":"9831:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3322_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"9831:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2518,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9864:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2531,"nodeType":"Block","src":"9922:46:11","statements":[{"expression":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"9940:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"9946:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2530,"nodeType":"ExpressionStatement","src":"9940:13:11"}]},"id":2532,"nodeType":"IfStatement","src":"9827:141:11","trueBody":{"id":2524,"nodeType":"Block","src":"9873:43:11","statements":[{"expression":{"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2520,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"9891:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2521,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"9898:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"nodeType":"ExpressionStatement","src":"9891:10:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"9543:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2503,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"9549:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"WhileStatement","src":"9536:442:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"10095:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2539,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"10119:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"10126:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2538,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2838,2864,2890,2916,2942],"referencedDeclaration":2890,"src":"10106:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3322_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"10106:34:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2545,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"10144:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2555,"nodeType":"Block","src":"10198:35:11","statements":[{"expression":{"id":2553,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"10219:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2485,"id":2554,"nodeType":"Return","src":"10212:10:11"}]},"id":2556,"nodeType":"IfStatement","src":"10091:142:11","trueBody":{"id":2552,"nodeType":"Block","src":"10153:39:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"10174:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2485,"id":2551,"nodeType":"Return","src":"10167:14:11"}]}}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"8686:616:11","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2558,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:11","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"array","nameLocation":"9349:5:11","nodeType":"VariableDeclaration","scope":2558,"src":"9331:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ArrayTypeName","src":"9331:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"element","nameLocation":"9364:7:11","nodeType":"VariableDeclaration","scope":2558,"src":"9356:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:11"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2558,"src":"9396:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:11"},"scope":3063,"src":"9307:932:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2621,"nodeType":"Block","src":"10756:709:11","statements":[{"assignments":[2570],"declarations":[{"constant":false,"id":2570,"mutability":"mutable","name":"low","nameLocation":"10774:3:11","nodeType":"VariableDeclaration","scope":2621,"src":"10766:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2572,"initialValue":{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:11"},{"assignments":[2574],"declarations":[{"constant":false,"id":2574,"mutability":"mutable","name":"high","nameLocation":"10799:4:11","nodeType":"VariableDeclaration","scope":2621,"src":"10791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2577,"initialValue":{"expression":{"id":2575,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"10806:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:11","memberName":"length","nodeType":"MemberAccess","src":"10806:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"10833:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2584,"nodeType":"IfStatement","src":"10829:48:11","trueBody":{"id":2583,"nodeType":"Block","src":"10844:33:11","statements":[{"expression":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2568,"id":2582,"nodeType":"Return","src":"10858:8:11"}]}},{"body":{"id":2617,"nodeType":"Block","src":"10906:532:11","statements":[{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"mid","nameLocation":"10928:3:11","nodeType":"VariableDeclaration","scope":2617,"src":"10920:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2595,"initialValue":{"arguments":[{"id":2592,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"10947:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2593,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"10952:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2590,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"10934:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5219,"src":"10934:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2597,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"11195:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2598,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"11202:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2596,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2838,2864,2890,2916,2942],"referencedDeclaration":2890,"src":"11182:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3322_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"11182:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2601,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"11215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2615,"nodeType":"Block","src":"11385:43:11","statements":[{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2611,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"11403:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2612,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"11410:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"nodeType":"ExpressionStatement","src":"11403:10:11"}]},"id":2616,"nodeType":"IfStatement","src":"11178:250:11","trueBody":{"id":2610,"nodeType":"Block","src":"11224:155:11","statements":[{"id":2609,"nodeType":"UncheckedBlock","src":"11301:64:11","statements":[{"expression":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2603,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"11333:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"11339:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2608,"nodeType":"ExpressionStatement","src":"11333:13:11"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"10894:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2586,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"10900:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"WhileStatement","src":"10887:551:11"},{"expression":{"id":2619,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"11455:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2568,"id":2620,"nodeType":"Return","src":"11448:10:11"}]},"documentation":{"id":2559,"nodeType":"StructuredDocumentation","src":"10245:412:11","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:11","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"array","nameLocation":"10700:5:11","nodeType":"VariableDeclaration","scope":2622,"src":"10682:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2560,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ArrayTypeName","src":"10682:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2564,"mutability":"mutable","name":"element","nameLocation":"10715:7:11","nodeType":"VariableDeclaration","scope":2622,"src":"10707:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:11"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"10747:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:11"},"scope":3063,"src":"10662:803:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2685,"nodeType":"Block","src":"11982:709:11","statements":[{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"low","nameLocation":"12000:3:11","nodeType":"VariableDeclaration","scope":2685,"src":"11992:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2636,"initialValue":{"hexValue":"30","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:11"},{"assignments":[2638],"declarations":[{"constant":false,"id":2638,"mutability":"mutable","name":"high","nameLocation":"12025:4:11","nodeType":"VariableDeclaration","scope":2685,"src":"12017:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2641,"initialValue":{"expression":{"id":2639,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"12032:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:11","memberName":"length","nodeType":"MemberAccess","src":"12032:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"12059:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2648,"nodeType":"IfStatement","src":"12055:48:11","trueBody":{"id":2647,"nodeType":"Block","src":"12070:33:11","statements":[{"expression":{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2632,"id":2646,"nodeType":"Return","src":"12084:8:11"}]}},{"body":{"id":2681,"nodeType":"Block","src":"12132:532:11","statements":[{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"mid","nameLocation":"12154:3:11","nodeType":"VariableDeclaration","scope":2681,"src":"12146:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2659,"initialValue":{"arguments":[{"id":2656,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"12173:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2657,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"12178:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2654,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"12160:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5219,"src":"12160:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2661,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"12421:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2662,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"12428:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2660,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2838,2864,2890,2916,2942],"referencedDeclaration":2890,"src":"12408:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3322_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12408:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2665,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"12441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2679,"nodeType":"Block","src":"12499:155:11","statements":[{"id":2678,"nodeType":"UncheckedBlock","src":"12576:64:11","statements":[{"expression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2672,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"12608:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"12614:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2677,"nodeType":"ExpressionStatement","src":"12608:13:11"}]}]},"id":2680,"nodeType":"IfStatement","src":"12404:250:11","trueBody":{"id":2671,"nodeType":"Block","src":"12450:43:11","statements":[{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"12468:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2668,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"12475:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2670,"nodeType":"ExpressionStatement","src":"12468:10:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2649,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"12120:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2650,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"12126:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2682,"nodeType":"WhileStatement","src":"12113:551:11"},{"expression":{"id":2683,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"12681:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2632,"id":2684,"nodeType":"Return","src":"12674:10:11"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"11471:412:11","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:11","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"array","nameLocation":"11926:5:11","nodeType":"VariableDeclaration","scope":2686,"src":"11908:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ArrayTypeName","src":"11908:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2628,"mutability":"mutable","name":"element","nameLocation":"11941:7:11","nodeType":"VariableDeclaration","scope":2686,"src":"11933:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:11"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2686,"src":"11973:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:11"},"scope":3063,"src":"11888:803:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2748,"nodeType":"Block","src":"12875:709:11","statements":[{"assignments":[2698],"declarations":[{"constant":false,"id":2698,"mutability":"mutable","name":"low","nameLocation":"12893:3:11","nodeType":"VariableDeclaration","scope":2748,"src":"12885:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2700,"initialValue":{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:11"},{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"high","nameLocation":"12918:4:11","nodeType":"VariableDeclaration","scope":2748,"src":"12910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2705,"initialValue":{"expression":{"id":2703,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"12925:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:11","memberName":"length","nodeType":"MemberAccess","src":"12925:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"12952:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2712,"nodeType":"IfStatement","src":"12948:48:11","trueBody":{"id":2711,"nodeType":"Block","src":"12963:33:11","statements":[{"expression":{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2696,"id":2710,"nodeType":"Return","src":"12977:8:11"}]}},{"body":{"id":2744,"nodeType":"Block","src":"13025:532:11","statements":[{"assignments":[2717],"declarations":[{"constant":false,"id":2717,"mutability":"mutable","name":"mid","nameLocation":"13047:3:11","nodeType":"VariableDeclaration","scope":2744,"src":"13039:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2723,"initialValue":{"arguments":[{"id":2720,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"13066:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2721,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13071:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2718,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"13053:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5219,"src":"13053:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2725,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"13320:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2726,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"13327:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2724,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2955,2968,2981,2994,3007],"referencedDeclaration":2981,"src":"13301:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2728,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"13334:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2742,"nodeType":"Block","src":"13504:43:11","statements":[{"expression":{"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2738,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13522:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2739,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"13529:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2741,"nodeType":"ExpressionStatement","src":"13522:10:11"}]},"id":2743,"nodeType":"IfStatement","src":"13297:250:11","trueBody":{"id":2737,"nodeType":"Block","src":"13343:155:11","statements":[{"id":2736,"nodeType":"UncheckedBlock","src":"13420:64:11","statements":[{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2730,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"13452:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"13458:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"nodeType":"ExpressionStatement","src":"13452:13:11"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"13013:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2714,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13019:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2745,"nodeType":"WhileStatement","src":"13006:551:11"},{"expression":{"id":2746,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"13574:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2696,"id":2747,"nodeType":"Return","src":"13567:10:11"}]},"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"12697:74:11","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2749,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:11","nodeType":"FunctionDefinition","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"array","nameLocation":"12819:5:11","nodeType":"VariableDeclaration","scope":2749,"src":"12802:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ArrayTypeName","src":"12802:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"element","nameLocation":"12834:7:11","nodeType":"VariableDeclaration","scope":2749,"src":"12826:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:11"},"returnParameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2749,"src":"12866:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:11"},"scope":3063,"src":"12776:808:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2811,"nodeType":"Block","src":"13768:709:11","statements":[{"assignments":[2761],"declarations":[{"constant":false,"id":2761,"mutability":"mutable","name":"low","nameLocation":"13786:3:11","nodeType":"VariableDeclaration","scope":2811,"src":"13778:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2763,"initialValue":{"hexValue":"30","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:11"},{"assignments":[2765],"declarations":[{"constant":false,"id":2765,"mutability":"mutable","name":"high","nameLocation":"13811:4:11","nodeType":"VariableDeclaration","scope":2811,"src":"13803:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2768,"initialValue":{"expression":{"id":2766,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"13818:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:11","memberName":"length","nodeType":"MemberAccess","src":"13818:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13845:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"nodeType":"IfStatement","src":"13841:48:11","trueBody":{"id":2774,"nodeType":"Block","src":"13856:33:11","statements":[{"expression":{"hexValue":"30","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2759,"id":2773,"nodeType":"Return","src":"13870:8:11"}]}},{"body":{"id":2807,"nodeType":"Block","src":"13918:532:11","statements":[{"assignments":[2780],"declarations":[{"constant":false,"id":2780,"mutability":"mutable","name":"mid","nameLocation":"13940:3:11","nodeType":"VariableDeclaration","scope":2807,"src":"13932:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2786,"initialValue":{"arguments":[{"id":2783,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13959:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2784,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13964:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2781,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"13946:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:11","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5219,"src":"13946:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2788,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"14213:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2789,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"14220:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2787,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2955,2968,2981,2994,3007],"referencedDeclaration":2981,"src":"14194:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2791,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"14227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2805,"nodeType":"Block","src":"14285:155:11","statements":[{"id":2804,"nodeType":"UncheckedBlock","src":"14362:64:11","statements":[{"expression":{"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2798,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"14394:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"14400:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2803,"nodeType":"ExpressionStatement","src":"14394:13:11"}]}]},"id":2806,"nodeType":"IfStatement","src":"14190:250:11","trueBody":{"id":2797,"nodeType":"Block","src":"14236:43:11","statements":[{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2793,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"14254:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2794,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"14261:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"14254:10:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2776,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13906:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2777,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"13912:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2808,"nodeType":"WhileStatement","src":"13899:551:11"},{"expression":{"id":2809,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"14467:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2759,"id":2810,"nodeType":"Return","src":"14460:10:11"}]},"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"13590:74:11","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:11","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"array","nameLocation":"13712:5:11","nodeType":"VariableDeclaration","scope":2812,"src":"13695:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2752,"nodeType":"ArrayTypeName","src":"13695:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"element","nameLocation":"13727:7:11","nodeType":"VariableDeclaration","scope":2812,"src":"13719:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:11"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"13759:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:11"},"scope":3063,"src":"13669:808:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"14793:167:11","statements":[{"assignments":[2825],"declarations":[{"constant":false,"id":2825,"mutability":"mutable","name":"slot","nameLocation":"14811:4:11","nodeType":"VariableDeclaration","scope":2837,"src":"14803:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2826,"nodeType":"VariableDeclarationStatement","src":"14803:12:11"},{"AST":{"nodeType":"YulBlock","src":"14850:40:11","statements":[{"nodeType":"YulAssignment","src":"14864:16:11","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2816,"isOffset":false,"isSlot":true,"src":"14872:8:11","suffix":"slot","valueSize":1},{"declaration":2825,"isOffset":false,"isSlot":false,"src":"14864:4:11","valueSize":1}],"flags":["memory-safe"],"id":2827,"nodeType":"InlineAssembly","src":"14825:65:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2832,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"14932:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2828,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"14906:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:11","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"14906:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:11","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"14906:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:11","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3342,"src":"14906:45:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3313_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3313_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2823,"id":2836,"nodeType":"Return","src":"14899:54:11"}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"14483:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:11","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"arr","nameLocation":"14719:3:11","nodeType":"VariableDeclaration","scope":2838,"src":"14701:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2815,"nodeType":"ArrayTypeName","src":"14701:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"pos","nameLocation":"14732:3:11","nodeType":"VariableDeclaration","scope":2838,"src":"14724:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:11"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"14760:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3313_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2821,"nodeType":"UserDefinedTypeName","pathNode":{"id":2820,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:11","14772:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":3313,"src":"14760:23:11"},"referencedDeclaration":3313,"src":"14760:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3313_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:11"},"scope":3063,"src":"14679:281:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2863,"nodeType":"Block","src":"15276:167:11","statements":[{"assignments":[2851],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"slot","nameLocation":"15294:4:11","nodeType":"VariableDeclaration","scope":2863,"src":"15286:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2852,"nodeType":"VariableDeclarationStatement","src":"15286:12:11"},{"AST":{"nodeType":"YulBlock","src":"15333:40:11","statements":[{"nodeType":"YulAssignment","src":"15347:16:11","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2842,"isOffset":false,"isSlot":true,"src":"15355:8:11","suffix":"slot","valueSize":1},{"declaration":2851,"isOffset":false,"isSlot":false,"src":"15347:4:11","valueSize":1}],"flags":["memory-safe"],"id":2853,"nodeType":"InlineAssembly","src":"15308:65:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2858,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"15415:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2854,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"15389:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:11","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"15389:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:11","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"15389:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:11","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3364,"src":"15389:45:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3319_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3319_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2849,"id":2862,"nodeType":"Return","src":"15382:54:11"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"14966:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2864,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:11","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"arr","nameLocation":"15202:3:11","nodeType":"VariableDeclaration","scope":2864,"src":"15184:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2841,"nodeType":"ArrayTypeName","src":"15184:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"pos","nameLocation":"15215:3:11","nodeType":"VariableDeclaration","scope":2864,"src":"15207:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:11"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2864,"src":"15243:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3319_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2847,"nodeType":"UserDefinedTypeName","pathNode":{"id":2846,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:11","15255:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":3319,"src":"15243:23:11"},"referencedDeclaration":3319,"src":"15243:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3319_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:11"},"scope":3063,"src":"15162:281:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"15759:167:11","statements":[{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"slot","nameLocation":"15777:4:11","nodeType":"VariableDeclaration","scope":2889,"src":"15769:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2878,"nodeType":"VariableDeclarationStatement","src":"15769:12:11"},{"AST":{"nodeType":"YulBlock","src":"15816:40:11","statements":[{"nodeType":"YulAssignment","src":"15830:16:11","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2868,"isOffset":false,"isSlot":true,"src":"15838:8:11","suffix":"slot","valueSize":1},{"declaration":2877,"isOffset":false,"isSlot":false,"src":"15830:4:11","valueSize":1}],"flags":["memory-safe"],"id":2879,"nodeType":"InlineAssembly","src":"15791:65:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2884,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"15898:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2880,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"15872:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:11","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"15872:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:11","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"15872:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:11","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3375,"src":"15872:45:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3322_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2875,"id":2888,"nodeType":"Return","src":"15865:54:11"}]},"documentation":{"id":2865,"nodeType":"StructuredDocumentation","src":"15449:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:11","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"arr","nameLocation":"15685:3:11","nodeType":"VariableDeclaration","scope":2890,"src":"15667:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ArrayTypeName","src":"15667:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"pos","nameLocation":"15698:3:11","nodeType":"VariableDeclaration","scope":2890,"src":"15690:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:11"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2890,"src":"15726:31:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2873,"nodeType":"UserDefinedTypeName","pathNode":{"id":2872,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:11","15738:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"15726:23:11"},"referencedDeclaration":3322,"src":"15726:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:11"},"scope":3063,"src":"15645:281:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2915,"nodeType":"Block","src":"16238:165:11","statements":[{"assignments":[2903],"declarations":[{"constant":false,"id":2903,"mutability":"mutable","name":"slot","nameLocation":"16256:4:11","nodeType":"VariableDeclaration","scope":2915,"src":"16248:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2904,"nodeType":"VariableDeclarationStatement","src":"16248:12:11"},{"AST":{"nodeType":"YulBlock","src":"16295:40:11","statements":[{"nodeType":"YulAssignment","src":"16309:16:11","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"16317:8:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"16309:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2894,"isOffset":false,"isSlot":true,"src":"16317:8:11","suffix":"slot","valueSize":1},{"declaration":2903,"isOffset":false,"isSlot":false,"src":"16309:4:11","valueSize":1}],"flags":["memory-safe"],"id":2905,"nodeType":"InlineAssembly","src":"16270:65:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2910,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"16377:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2906,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"16351:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:11","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"16351:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:11","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"16351:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:11","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"16351:43:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$3331_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":2901,"id":2914,"nodeType":"Return","src":"16344:52:11"}]},"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"15932:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2916,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:11","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"arr","nameLocation":"16166:3:11","nodeType":"VariableDeclaration","scope":2916,"src":"16150:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2892,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2893,"nodeType":"ArrayTypeName","src":"16150:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"pos","nameLocation":"16179:3:11","nodeType":"VariableDeclaration","scope":2916,"src":"16171:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:11"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"16207:29:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2899,"nodeType":"UserDefinedTypeName","pathNode":{"id":2898,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:11","16219:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":3331,"src":"16207:21:11"},"referencedDeclaration":3331,"src":"16207:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:11"},"scope":3063,"src":"16128:275:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2941,"nodeType":"Block","src":"16717:166:11","statements":[{"assignments":[2929],"declarations":[{"constant":false,"id":2929,"mutability":"mutable","name":"slot","nameLocation":"16735:4:11","nodeType":"VariableDeclaration","scope":2941,"src":"16727:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2930,"nodeType":"VariableDeclarationStatement","src":"16727:12:11"},{"AST":{"nodeType":"YulBlock","src":"16774:40:11","statements":[{"nodeType":"YulAssignment","src":"16788:16:11","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"16796:8:11"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"16788:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2920,"isOffset":false,"isSlot":true,"src":"16796:8:11","suffix":"slot","valueSize":1},{"declaration":2929,"isOffset":false,"isSlot":false,"src":"16788:4:11","valueSize":1}],"flags":["memory-safe"],"id":2931,"nodeType":"InlineAssembly","src":"16749:65:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2936,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"16856:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2932,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"16830:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:11","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3222,"src":"16830:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:11","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"16830:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:11","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3397,"src":"16830:44:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$3328_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":2927,"id":2940,"nodeType":"Return","src":"16823:53:11"}]},"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"16409:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2942,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:11","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"arr","nameLocation":"16644:3:11","nodeType":"VariableDeclaration","scope":2942,"src":"16627:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2918,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2919,"nodeType":"ArrayTypeName","src":"16627:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"pos","nameLocation":"16657:3:11","nodeType":"VariableDeclaration","scope":2942,"src":"16649:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:11"},"returnParameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2942,"src":"16685:30:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2925,"nodeType":"UserDefinedTypeName","pathNode":{"id":2924,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:11","16697:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":3328,"src":"16685:22:11"},"referencedDeclaration":3328,"src":"16685:22:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:11"},"scope":3063,"src":"16605:278:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"17184:98:11","statements":[{"AST":{"nodeType":"YulBlock","src":"17203:73:11","statements":[{"nodeType":"YulAssignment","src":"17217:49:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17238:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17243:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17234:3:11"},"nodeType":"YulFunctionCall","src":"17234:14:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17254:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17259:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17250:3:11"},"nodeType":"YulFunctionCall","src":"17250:14:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17230:3:11"},"nodeType":"YulFunctionCall","src":"17230:35:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17224:5:11"},"nodeType":"YulFunctionCall","src":"17224:42:11"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17217:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2946,"isOffset":false,"isSlot":false,"src":"17238:3:11","valueSize":1},{"declaration":2948,"isOffset":false,"isSlot":false,"src":"17254:3:11","valueSize":1},{"declaration":2951,"isOffset":false,"isSlot":false,"src":"17217:3:11","valueSize":1}],"id":2953,"nodeType":"InlineAssembly","src":"17194:82:11"}]},"documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"16889:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:11","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"arr","nameLocation":"17130:3:11","nodeType":"VariableDeclaration","scope":2955,"src":"17113:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2945,"nodeType":"ArrayTypeName","src":"17113:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"pos","nameLocation":"17143:3:11","nodeType":"VariableDeclaration","scope":2955,"src":"17135:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:11"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"res","nameLocation":"17179:3:11","nodeType":"VariableDeclaration","scope":2955,"src":"17171:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:11"},"scope":3063,"src":"17085:197:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2967,"nodeType":"Block","src":"17583:98:11","statements":[{"AST":{"nodeType":"YulBlock","src":"17602:73:11","statements":[{"nodeType":"YulAssignment","src":"17616:49:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17637:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17642:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17633:3:11"},"nodeType":"YulFunctionCall","src":"17633:14:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17653:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"17658:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17649:3:11"},"nodeType":"YulFunctionCall","src":"17649:14:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17629:3:11"},"nodeType":"YulFunctionCall","src":"17629:35:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17623:5:11"},"nodeType":"YulFunctionCall","src":"17623:42:11"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17616:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2959,"isOffset":false,"isSlot":false,"src":"17637:3:11","valueSize":1},{"declaration":2961,"isOffset":false,"isSlot":false,"src":"17653:3:11","valueSize":1},{"declaration":2964,"isOffset":false,"isSlot":false,"src":"17616:3:11","valueSize":1}],"id":2966,"nodeType":"InlineAssembly","src":"17593:82:11"}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"17288:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2968,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:11","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"arr","nameLocation":"17529:3:11","nodeType":"VariableDeclaration","scope":2968,"src":"17512:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2958,"nodeType":"ArrayTypeName","src":"17512:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"pos","nameLocation":"17542:3:11","nodeType":"VariableDeclaration","scope":2968,"src":"17534:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:11"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"res","nameLocation":"17578:3:11","nodeType":"VariableDeclaration","scope":2968,"src":"17570:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:11"},"scope":3063,"src":"17484:197:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2980,"nodeType":"Block","src":"17982:98:11","statements":[{"AST":{"nodeType":"YulBlock","src":"18001:73:11","statements":[{"nodeType":"YulAssignment","src":"18015:49:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18036:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18041:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18032:3:11"},"nodeType":"YulFunctionCall","src":"18032:14:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18052:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18057:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18048:3:11"},"nodeType":"YulFunctionCall","src":"18048:14:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18028:3:11"},"nodeType":"YulFunctionCall","src":"18028:35:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18022:5:11"},"nodeType":"YulFunctionCall","src":"18022:42:11"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18015:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2972,"isOffset":false,"isSlot":false,"src":"18036:3:11","valueSize":1},{"declaration":2974,"isOffset":false,"isSlot":false,"src":"18052:3:11","valueSize":1},{"declaration":2977,"isOffset":false,"isSlot":false,"src":"18015:3:11","valueSize":1}],"id":2979,"nodeType":"InlineAssembly","src":"17992:82:11"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"17687:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:11","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"arr","nameLocation":"17928:3:11","nodeType":"VariableDeclaration","scope":2981,"src":"17911:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2971,"nodeType":"ArrayTypeName","src":"17911:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"pos","nameLocation":"17941:3:11","nodeType":"VariableDeclaration","scope":2981,"src":"17933:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:11"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"res","nameLocation":"17977:3:11","nodeType":"VariableDeclaration","scope":2981,"src":"17969:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:11"},"scope":3063,"src":"17883:197:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"18384:98:11","statements":[{"AST":{"nodeType":"YulBlock","src":"18403:73:11","statements":[{"nodeType":"YulAssignment","src":"18417:49:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18438:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18443:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18434:3:11"},"nodeType":"YulFunctionCall","src":"18434:14:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18454:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18459:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18450:3:11"},"nodeType":"YulFunctionCall","src":"18450:14:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:11"},"nodeType":"YulFunctionCall","src":"18430:35:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18424:5:11"},"nodeType":"YulFunctionCall","src":"18424:42:11"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18417:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2985,"isOffset":false,"isSlot":false,"src":"18438:3:11","valueSize":1},{"declaration":2987,"isOffset":false,"isSlot":false,"src":"18454:3:11","valueSize":1},{"declaration":2990,"isOffset":false,"isSlot":false,"src":"18417:3:11","valueSize":1}],"id":2992,"nodeType":"InlineAssembly","src":"18394:82:11"}]},"documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"18086:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:11","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"arr","nameLocation":"18325:3:11","nodeType":"VariableDeclaration","scope":2994,"src":"18310:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2983,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2984,"nodeType":"ArrayTypeName","src":"18310:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"pos","nameLocation":"18338:3:11","nodeType":"VariableDeclaration","scope":2994,"src":"18330:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:11"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"res","nameLocation":"18379:3:11","nodeType":"VariableDeclaration","scope":2994,"src":"18366:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2989,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:11"},"scope":3063,"src":"18282:200:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"18788:98:11","statements":[{"AST":{"nodeType":"YulBlock","src":"18807:73:11","statements":[{"nodeType":"YulAssignment","src":"18821:49:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18842:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18847:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:11"},"nodeType":"YulFunctionCall","src":"18838:14:11"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18858:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18863:4:11","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18854:3:11"},"nodeType":"YulFunctionCall","src":"18854:14:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18834:3:11"},"nodeType":"YulFunctionCall","src":"18834:35:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18828:5:11"},"nodeType":"YulFunctionCall","src":"18828:42:11"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18821:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2998,"isOffset":false,"isSlot":false,"src":"18842:3:11","valueSize":1},{"declaration":3000,"isOffset":false,"isSlot":false,"src":"18858:3:11","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"18821:3:11","valueSize":1}],"id":3005,"nodeType":"InlineAssembly","src":"18798:82:11"}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"18488:191:11","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:11","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"arr","nameLocation":"18728:3:11","nodeType":"VariableDeclaration","scope":3007,"src":"18712:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2996,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2997,"nodeType":"ArrayTypeName","src":"18712:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"pos","nameLocation":"18741:3:11","nodeType":"VariableDeclaration","scope":3007,"src":"18733:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2999,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:11"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"res","nameLocation":"18783:3:11","nodeType":"VariableDeclaration","scope":3007,"src":"18769:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3002,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:11"},"scope":3063,"src":"18684:202:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"19202:88:11","statements":[{"AST":{"nodeType":"YulBlock","src":"19237:47:11","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"19258:10:11"},{"name":"len","nodeType":"YulIdentifier","src":"19270:3:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19251:6:11"},"nodeType":"YulFunctionCall","src":"19251:23:11"},"nodeType":"YulExpressionStatement","src":"19251:23:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3011,"isOffset":false,"isSlot":true,"src":"19258:10:11","suffix":"slot","valueSize":1},{"declaration":3013,"isOffset":false,"isSlot":false,"src":"19270:3:11","valueSize":1}],"flags":["memory-safe"],"id":3016,"nodeType":"InlineAssembly","src":"19212:72:11"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"18892:233:11","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:11","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"array","nameLocation":"19173:5:11","nodeType":"VariableDeclaration","scope":3018,"src":"19155:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3010,"nodeType":"ArrayTypeName","src":"19155:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"len","nameLocation":"19188:3:11","nodeType":"VariableDeclaration","scope":3018,"src":"19180:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:11"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[],"src":"19202:0:11"},"scope":3063,"src":"19130:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3028,"nodeType":"Block","src":"19606:88:11","statements":[{"AST":{"nodeType":"YulBlock","src":"19641:47:11","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"19662:10:11"},{"name":"len","nodeType":"YulIdentifier","src":"19674:3:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19655:6:11"},"nodeType":"YulFunctionCall","src":"19655:23:11"},"nodeType":"YulExpressionStatement","src":"19655:23:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3022,"isOffset":false,"isSlot":true,"src":"19662:10:11","suffix":"slot","valueSize":1},{"declaration":3024,"isOffset":false,"isSlot":false,"src":"19674:3:11","valueSize":1}],"flags":["memory-safe"],"id":3027,"nodeType":"InlineAssembly","src":"19616:72:11"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"19296:233:11","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3029,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:11","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"array","nameLocation":"19577:5:11","nodeType":"VariableDeclaration","scope":3029,"src":"19559:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3021,"nodeType":"ArrayTypeName","src":"19559:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"len","nameLocation":"19592:3:11","nodeType":"VariableDeclaration","scope":3029,"src":"19584:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:11"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"19606:0:11"},"scope":3063,"src":"19534:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3039,"nodeType":"Block","src":"20010:88:11","statements":[{"AST":{"nodeType":"YulBlock","src":"20045:47:11","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20066:10:11"},{"name":"len","nodeType":"YulIdentifier","src":"20078:3:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20059:6:11"},"nodeType":"YulFunctionCall","src":"20059:23:11"},"nodeType":"YulExpressionStatement","src":"20059:23:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3033,"isOffset":false,"isSlot":true,"src":"20066:10:11","suffix":"slot","valueSize":1},{"declaration":3035,"isOffset":false,"isSlot":false,"src":"20078:3:11","valueSize":1}],"flags":["memory-safe"],"id":3038,"nodeType":"InlineAssembly","src":"20020:72:11"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"19700:233:11","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3040,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:11","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"array","nameLocation":"19981:5:11","nodeType":"VariableDeclaration","scope":3040,"src":"19963:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"nodeType":"ArrayTypeName","src":"19963:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"len","nameLocation":"19996:3:11","nodeType":"VariableDeclaration","scope":3040,"src":"19988:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:11"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"20010:0:11"},"scope":3063,"src":"19938:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"20412:88:11","statements":[{"AST":{"nodeType":"YulBlock","src":"20447:47:11","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20468:10:11"},{"name":"len","nodeType":"YulIdentifier","src":"20480:3:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20461:6:11"},"nodeType":"YulFunctionCall","src":"20461:23:11"},"nodeType":"YulExpressionStatement","src":"20461:23:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3044,"isOffset":false,"isSlot":true,"src":"20468:10:11","suffix":"slot","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"20480:3:11","valueSize":1}],"flags":["memory-safe"],"id":3049,"nodeType":"InlineAssembly","src":"20422:72:11"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"20104:233:11","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:11","nodeType":"FunctionDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"array","nameLocation":"20383:5:11","nodeType":"VariableDeclaration","scope":3051,"src":"20367:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3042,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3043,"nodeType":"ArrayTypeName","src":"20367:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"len","nameLocation":"20398:3:11","nodeType":"VariableDeclaration","scope":3051,"src":"20390:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:11"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[],"src":"20412:0:11"},"scope":3063,"src":"20342:158:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3061,"nodeType":"Block","src":"20815:88:11","statements":[{"AST":{"nodeType":"YulBlock","src":"20850:47:11","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20871:10:11"},{"name":"len","nodeType":"YulIdentifier","src":"20883:3:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20864:6:11"},"nodeType":"YulFunctionCall","src":"20864:23:11"},"nodeType":"YulExpressionStatement","src":"20864:23:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3055,"isOffset":false,"isSlot":true,"src":"20871:10:11","suffix":"slot","valueSize":1},{"declaration":3057,"isOffset":false,"isSlot":false,"src":"20883:3:11","valueSize":1}],"flags":["memory-safe"],"id":3060,"nodeType":"InlineAssembly","src":"20825:72:11"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"20506:233:11","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3062,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:11","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"array","nameLocation":"20786:5:11","nodeType":"VariableDeclaration","scope":3062,"src":"20769:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3053,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3054,"nodeType":"ArrayTypeName","src":"20769:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"len","nameLocation":"20801:3:11","nodeType":"VariableDeclaration","scope":3062,"src":"20793:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:11"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[],"src":"20815:0:11"},"scope":3063,"src":"20744:159:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3064,"src":"459:20446:11","usedErrors":[],"usedEvents":[]}],"src":"183:20723:11"},"id":11},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3095]},"id":3096,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3065,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3066,"nodeType":"StructuredDocumentation","src":"131:92:12","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3095,"linearizedBaseContracts":[3095],"name":"Comparators","nameLocation":"232:11:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":3079,"nodeType":"Block","src":"313:29:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"330:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3076,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"334:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3074,"id":3078,"nodeType":"Return","src":"323:12:12"}]},"id":3080,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:12","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"a","nameLocation":"270:1:12","nodeType":"VariableDeclaration","scope":3080,"src":"262:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"b","nameLocation":"281:1:12","nodeType":"VariableDeclaration","scope":3080,"src":"273:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:12"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3080,"src":"307:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3072,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:12"},"scope":3095,"src":"250:92:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"411:29:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"428:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3090,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"432:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3088,"id":3092,"nodeType":"Return","src":"421:12:12"}]},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:12","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"a","nameLocation":"368:1:12","nodeType":"VariableDeclaration","scope":3094,"src":"360:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"b","nameLocation":"379:1:12","nodeType":"VariableDeclaration","scope":3094,"src":"371:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3083,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:12"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"405:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3086,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:12"},"scope":3095,"src":"348:92:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3096,"src":"224:218:12","usedErrors":[],"usedEvents":[]}],"src":"105:338:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3125]},"id":3126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3097,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3125,"linearizedBaseContracts":[3125],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3106,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":3103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3102,"id":3105,"nodeType":"Return","src":"728:17:13"}]},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":3125,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3115,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":3112,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3111,"id":3114,"nodeType":"Return","src":"835:15:13"}]},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3116,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3109,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":3125,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3120,"id":3122,"nodeType":"Return","src":"945:8:13"}]},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":3125,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3126,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3177]},"id":3178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3127,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3177,"linearizedBaseContracts":[3177],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":3132,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":3177,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3133,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":3136,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":3177,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":3140,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":3177,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3141,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":3144,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":3177,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":3148,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":3177,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":3152,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":3177,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":3156,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":3177,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":3160,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":3177,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":3164,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":3177,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":3168,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":3177,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3171,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":3174,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":3169,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":3176,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":3177,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3178,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3307]},"id":3308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3180,"nodeType":"StructuredDocumentation","src":"225:1373:15","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3307,"linearizedBaseContracts":[3307],"name":"SlotDerivation","nameLocation":"1607:14:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3189,"nodeType":"Block","src":"1790:194:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:15","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:15"},"nodeType":"YulFunctionCall","src":"1866:20:15"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:15"},"nodeType":"YulFunctionCall","src":"1888:16:15"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:15"},"nodeType":"YulFunctionCall","src":"1856:49:15"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:15","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:15"},"nodeType":"YulFunctionCall","src":"1852:57:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:15"},"nodeType":"YulFunctionCall","src":"1839:71:15"},"nodeType":"YulExpressionStatement","src":"1839:71:15"},{"nodeType":"YulAssignment","src":"1923:45:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:15"},"nodeType":"YulFunctionCall","src":"1935:21:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:15","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:15"},"nodeType":"YulFunctionCall","src":"1958:9:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:15"},"nodeType":"YulFunctionCall","src":"1931:37:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3183,"isOffset":false,"isSlot":false,"src":"1870:9:15","valueSize":1},{"declaration":3183,"isOffset":false,"isSlot":false,"src":"1894:9:15","valueSize":1},{"declaration":3186,"isOffset":false,"isSlot":false,"src":"1923:4:15","valueSize":1}],"flags":["memory-safe"],"id":3188,"nodeType":"InlineAssembly","src":"1800:178:15"}]},"documentation":{"id":3181,"nodeType":"StructuredDocumentation","src":"1628:74:15","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3190,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:15","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:15","nodeType":"VariableDeclaration","scope":3190,"src":"1728:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3182,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:15"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"slot","nameLocation":"1784:4:15","nodeType":"VariableDeclaration","scope":3190,"src":"1776:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:15"},"scope":3307,"src":"1707:277:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3211,"nodeType":"Block","src":"2176:86:15","statements":[{"id":3210,"nodeType":"UncheckedBlock","src":"2186:70:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3204,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"2233:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:15","typeDescriptions":{}}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3206,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"2241:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:15","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3199,"id":3209,"nodeType":"Return","src":"2210:35:15"}]}]},"documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"1990:99:15","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:15","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"slot","nameLocation":"2118:4:15","nodeType":"VariableDeclaration","scope":3212,"src":"2110:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"pos","nameLocation":"2132:3:15","nodeType":"VariableDeclaration","scope":3212,"src":"2124:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:15"},"returnParameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"result","nameLocation":"2168:6:15","nodeType":"VariableDeclaration","scope":3212,"src":"2160:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:15"},"scope":3307,"src":"2094:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3221,"nodeType":"Block","src":"2465:127:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:15","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:15"},"nodeType":"YulFunctionCall","src":"2514:18:15"},"nodeType":"YulExpressionStatement","src":"2514:18:15"},{"nodeType":"YulAssignment","src":"2545:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:15"},"nodeType":"YulFunctionCall","src":"2555:21:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3218,"isOffset":false,"isSlot":false,"src":"2545:6:15","valueSize":1},{"declaration":3215,"isOffset":false,"isSlot":false,"src":"2527:4:15","valueSize":1}],"flags":["memory-safe"],"id":3220,"nodeType":"InlineAssembly","src":"2475:111:15"}]},"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"2268:118:15","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3222,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:15","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"slot","nameLocation":"2420:4:15","nodeType":"VariableDeclaration","scope":3222,"src":"2412:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:15"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"result","nameLocation":"2457:6:15","nodeType":"VariableDeclaration","scope":3222,"src":"2449:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:15"},"scope":3307,"src":"2391:201:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"2770:179:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:15","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:15","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:15"},"nodeType":"YulFunctionCall","src":"2849:6:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:15"},"nodeType":"YulFunctionCall","src":"2841:15:15"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:15"},"nodeType":"YulFunctionCall","src":"2832:25:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:15"},"nodeType":"YulFunctionCall","src":"2819:39:15"},"nodeType":"YulExpressionStatement","src":"2819:39:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:15","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:15"},"nodeType":"YulFunctionCall","src":"2871:18:15"},"nodeType":"YulExpressionStatement","src":"2871:18:15"},{"nodeType":"YulAssignment","src":"2902:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:15"},"nodeType":"YulFunctionCall","src":"2912:21:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3227,"isOffset":false,"isSlot":false,"src":"2836:3:15","valueSize":1},{"declaration":3230,"isOffset":false,"isSlot":false,"src":"2902:6:15","valueSize":1},{"declaration":3225,"isOffset":false,"isSlot":false,"src":"2884:4:15","valueSize":1}],"flags":["memory-safe"],"id":3232,"nodeType":"InlineAssembly","src":"2780:163:15"}]},"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"2598:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:15","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"slot","nameLocation":"2712:4:15","nodeType":"VariableDeclaration","scope":3234,"src":"2704:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"key","nameLocation":"2726:3:15","nodeType":"VariableDeclaration","scope":3234,"src":"2718:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:15"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"result","nameLocation":"2762:6:15","nodeType":"VariableDeclaration","scope":3234,"src":"2754:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:15"},"scope":3307,"src":"2681:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"3124:173:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:15","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:15"},"nodeType":"YulFunctionCall","src":"3193:11:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:15"},"nodeType":"YulFunctionCall","src":"3186:19:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:15"},"nodeType":"YulFunctionCall","src":"3173:33:15"},"nodeType":"YulExpressionStatement","src":"3173:33:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:15","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:15"},"nodeType":"YulFunctionCall","src":"3219:18:15"},"nodeType":"YulExpressionStatement","src":"3219:18:15"},{"nodeType":"YulAssignment","src":"3250:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:15"},"nodeType":"YulFunctionCall","src":"3260:21:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3239,"isOffset":false,"isSlot":false,"src":"3200:3:15","valueSize":1},{"declaration":3242,"isOffset":false,"isSlot":false,"src":"3250:6:15","valueSize":1},{"declaration":3237,"isOffset":false,"isSlot":false,"src":"3232:4:15","valueSize":1}],"flags":["memory-safe"],"id":3244,"nodeType":"InlineAssembly","src":"3134:157:15"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"2955:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:15","nodeType":"FunctionDefinition","parameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"slot","nameLocation":"3069:4:15","nodeType":"VariableDeclaration","scope":3246,"src":"3061:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"key","nameLocation":"3080:3:15","nodeType":"VariableDeclaration","scope":3246,"src":"3075:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3238,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:15"},"returnParameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"result","nameLocation":"3116:6:15","nodeType":"VariableDeclaration","scope":3246,"src":"3108:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:15"},"scope":3307,"src":"3038:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"3475:157:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:15","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:15"},"nodeType":"YulFunctionCall","src":"3524:17:15"},"nodeType":"YulExpressionStatement","src":"3524:17:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:15","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:15"},"nodeType":"YulFunctionCall","src":"3554:18:15"},"nodeType":"YulExpressionStatement","src":"3554:18:15"},{"nodeType":"YulAssignment","src":"3585:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:15"},"nodeType":"YulFunctionCall","src":"3595:21:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3251,"isOffset":false,"isSlot":false,"src":"3537:3:15","valueSize":1},{"declaration":3254,"isOffset":false,"isSlot":false,"src":"3585:6:15","valueSize":1},{"declaration":3249,"isOffset":false,"isSlot":false,"src":"3567:4:15","valueSize":1}],"flags":["memory-safe"],"id":3256,"nodeType":"InlineAssembly","src":"3485:141:15"}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"3303:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:15","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"slot","nameLocation":"3417:4:15","nodeType":"VariableDeclaration","scope":3258,"src":"3409:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"key","nameLocation":"3431:3:15","nodeType":"VariableDeclaration","scope":3258,"src":"3423:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:15"},"returnParameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"result","nameLocation":"3467:6:15","nodeType":"VariableDeclaration","scope":3258,"src":"3459:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:15"},"scope":3307,"src":"3386:246:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3269,"nodeType":"Block","src":"3810:157:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:15","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:15"},"nodeType":"YulFunctionCall","src":"3859:17:15"},"nodeType":"YulExpressionStatement","src":"3859:17:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:15","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:15"},"nodeType":"YulFunctionCall","src":"3889:18:15"},"nodeType":"YulExpressionStatement","src":"3889:18:15"},{"nodeType":"YulAssignment","src":"3920:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:15"},"nodeType":"YulFunctionCall","src":"3930:21:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3263,"isOffset":false,"isSlot":false,"src":"3872:3:15","valueSize":1},{"declaration":3266,"isOffset":false,"isSlot":false,"src":"3920:6:15","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"3902:4:15","valueSize":1}],"flags":["memory-safe"],"id":3268,"nodeType":"InlineAssembly","src":"3820:141:15"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"3638:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3270,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:15","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"slot","nameLocation":"3752:4:15","nodeType":"VariableDeclaration","scope":3270,"src":"3744:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"key","nameLocation":"3766:3:15","nodeType":"VariableDeclaration","scope":3270,"src":"3758:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:15"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"result","nameLocation":"3802:6:15","nodeType":"VariableDeclaration","scope":3270,"src":"3794:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:15"},"scope":3307,"src":"3721:246:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3281,"nodeType":"Block","src":"4144:157:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:15","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:15"},"nodeType":"YulFunctionCall","src":"4193:17:15"},"nodeType":"YulExpressionStatement","src":"4193:17:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:15","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:15"},"nodeType":"YulFunctionCall","src":"4223:18:15"},"nodeType":"YulExpressionStatement","src":"4223:18:15"},{"nodeType":"YulAssignment","src":"4254:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:15","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:15"},"nodeType":"YulFunctionCall","src":"4264:21:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3275,"isOffset":false,"isSlot":false,"src":"4206:3:15","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"4254:6:15","valueSize":1},{"declaration":3273,"isOffset":false,"isSlot":false,"src":"4236:4:15","valueSize":1}],"flags":["memory-safe"],"id":3280,"nodeType":"InlineAssembly","src":"4154:141:15"}]},"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"3973:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:15","nodeType":"FunctionDefinition","parameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"slot","nameLocation":"4087:4:15","nodeType":"VariableDeclaration","scope":3282,"src":"4079:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"key","nameLocation":"4100:3:15","nodeType":"VariableDeclaration","scope":3282,"src":"4093:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3274,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:15"},"returnParameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"result","nameLocation":"4136:6:15","nodeType":"VariableDeclaration","scope":3282,"src":"4128:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:15"},"scope":3307,"src":"4056:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3293,"nodeType":"Block","src":"4485:326:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:15","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:15"},"nodeType":"YulFunctionCall","src":"4548:10:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:15","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:15"},"nodeType":"YulFunctionCall","src":"4584:14:15"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:15","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:15"},"nodeType":"YulFunctionCall","src":"4622:18:15"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:15","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:15"},"nodeType":"YulFunctionCall","src":"4666:10:15"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:15","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:15"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:15"},"nodeType":"YulFunctionCall","src":"4689:17:15"},"nodeType":"YulExpressionStatement","src":"4689:17:15"},{"nodeType":"YulAssignment","src":"4719:45:15","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:15"},"nodeType":"YulFunctionCall","src":"4746:17:15"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:15"},"nodeType":"YulFunctionCall","src":"4729:35:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:15"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:15"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:15"},"nodeType":"YulFunctionCall","src":"4777:18:15"},"nodeType":"YulExpressionStatement","src":"4777:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3287,"isOffset":false,"isSlot":false,"src":"4554:3:15","valueSize":1},{"declaration":3287,"isOffset":false,"isSlot":false,"src":"4588:3:15","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"4719:6:15","valueSize":1},{"declaration":3285,"isOffset":false,"isSlot":false,"src":"4701:4:15","valueSize":1}],"flags":["memory-safe"],"id":3292,"nodeType":"InlineAssembly","src":"4495:310:15"}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"4307:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:15","nodeType":"FunctionDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"slot","nameLocation":"4421:4:15","nodeType":"VariableDeclaration","scope":3294,"src":"4413:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"key","nameLocation":"4441:3:15","nodeType":"VariableDeclaration","scope":3294,"src":"4427:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3286,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:15"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"result","nameLocation":"4477:6:15","nodeType":"VariableDeclaration","scope":3294,"src":"4469:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:15"},"scope":3307,"src":"4390:421:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3305,"nodeType":"Block","src":"4994:326:15","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:15","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:15","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:15"},"nodeType":"YulFunctionCall","src":"5057:10:15"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:15","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:15"},"nodeType":"YulFunctionCall","src":"5093:14:15"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:15","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:15"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:15"},"nodeType":"YulFunctionCall","src":"5131:18:15"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:15","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:15","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:15"},"nodeType":"YulFunctionCall","src":"5175:10:15"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:15","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:15"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:15"},"nodeType":"YulFunctionCall","src":"5198:17:15"},"nodeType":"YulExpressionStatement","src":"5198:17:15"},{"nodeType":"YulAssignment","src":"5228:45:15","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:15"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:15"},"nodeType":"YulFunctionCall","src":"5255:17:15"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:15"},"nodeType":"YulFunctionCall","src":"5238:35:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:15"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:15"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:15"},"nodeType":"YulFunctionCall","src":"5286:18:15"},"nodeType":"YulExpressionStatement","src":"5286:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3299,"isOffset":false,"isSlot":false,"src":"5063:3:15","valueSize":1},{"declaration":3299,"isOffset":false,"isSlot":false,"src":"5097:3:15","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"5228:6:15","valueSize":1},{"declaration":3297,"isOffset":false,"isSlot":false,"src":"5210:4:15","valueSize":1}],"flags":["memory-safe"],"id":3304,"nodeType":"InlineAssembly","src":"5004:310:15"}]},"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"4817:78:15","text":" @dev Derive the location of a mapping element from the key."},"id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:15","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"slot","nameLocation":"4931:4:15","nodeType":"VariableDeclaration","scope":3306,"src":"4923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"key","nameLocation":"4950:3:15","nodeType":"VariableDeclaration","scope":3306,"src":"4937:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3298,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:15"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"result","nameLocation":"4986:6:15","nodeType":"VariableDeclaration","scope":3306,"src":"4978:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:15"},"scope":3307,"src":"4900:420:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3308,"src":"1599:3723:15","usedErrors":[],"usedEvents":[]}],"src":"199:5124:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3431]},"id":3432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3309,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"219:1187:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3431,"linearizedBaseContracts":[3431],"name":"StorageSlot","nameLocation":"1415:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3313,"members":[{"constant":false,"id":3312,"mutability":"mutable","name":"value","nameLocation":"1470:5:16","nodeType":"VariableDeclaration","scope":3313,"src":"1462:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:16","nodeType":"StructDefinition","scope":3431,"src":"1433:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3316,"members":[{"constant":false,"id":3315,"mutability":"mutable","name":"value","nameLocation":"1522:5:16","nodeType":"VariableDeclaration","scope":3316,"src":"1517:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3314,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:16","nodeType":"StructDefinition","scope":3431,"src":"1488:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3319,"members":[{"constant":false,"id":3318,"mutability":"mutable","name":"value","nameLocation":"1577:5:16","nodeType":"VariableDeclaration","scope":3319,"src":"1569:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:16","nodeType":"StructDefinition","scope":3431,"src":"1540:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3322,"members":[{"constant":false,"id":3321,"mutability":"mutable","name":"value","nameLocation":"1632:5:16","nodeType":"VariableDeclaration","scope":3322,"src":"1624:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:16","nodeType":"StructDefinition","scope":3431,"src":"1595:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3325,"members":[{"constant":false,"id":3324,"mutability":"mutable","name":"value","nameLocation":"1685:5:16","nodeType":"VariableDeclaration","scope":3325,"src":"1678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3323,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:16","nodeType":"StructDefinition","scope":3431,"src":"1650:47:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3328,"members":[{"constant":false,"id":3327,"mutability":"mutable","name":"value","nameLocation":"1738:5:16","nodeType":"VariableDeclaration","scope":3328,"src":"1731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3326,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:16","nodeType":"StructDefinition","scope":3431,"src":"1703:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3331,"members":[{"constant":false,"id":3330,"mutability":"mutable","name":"value","nameLocation":"1789:5:16","nodeType":"VariableDeclaration","scope":3331,"src":"1783:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3329,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:16","nodeType":"StructDefinition","scope":3431,"src":"1756:45:16","visibility":"public"},{"body":{"id":3341,"nodeType":"Block","src":"1983:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:16","statements":[{"nodeType":"YulAssignment","src":"2032:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3338,"isOffset":false,"isSlot":true,"src":"2032:6:16","suffix":"slot","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"2042:4:16","valueSize":1}],"flags":["memory-safe"],"id":3340,"nodeType":"InlineAssembly","src":"1993:63:16"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"1807:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3342,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:16","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"slot","nameLocation":"1931:4:16","nodeType":"VariableDeclaration","scope":3342,"src":"1923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:16"},"returnParameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"r","nameLocation":"1980:1:16","nodeType":"VariableDeclaration","scope":3342,"src":"1960:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3313_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3337,"nodeType":"UserDefinedTypeName","pathNode":{"id":3336,"name":"AddressSlot","nameLocations":["1960:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3313,"src":"1960:11:16"},"referencedDeclaration":3313,"src":"1960:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3313_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:16"},"scope":3431,"src":"1899:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3352,"nodeType":"Block","src":"2243:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:16","statements":[{"nodeType":"YulAssignment","src":"2292:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3349,"isOffset":false,"isSlot":true,"src":"2292:6:16","suffix":"slot","valueSize":1},{"declaration":3345,"isOffset":false,"isSlot":false,"src":"2302:4:16","valueSize":1}],"flags":["memory-safe"],"id":3351,"nodeType":"InlineAssembly","src":"2253:63:16"}]},"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"2068:86:16","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:16","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"slot","nameLocation":"2191:4:16","nodeType":"VariableDeclaration","scope":3353,"src":"2183:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:16"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"r","nameLocation":"2240:1:16","nodeType":"VariableDeclaration","scope":3353,"src":"2220:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3316_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3348,"nodeType":"UserDefinedTypeName","pathNode":{"id":3347,"name":"BooleanSlot","nameLocations":["2220:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3316,"src":"2220:11:16"},"referencedDeclaration":3316,"src":"2220:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3316_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:16"},"scope":3431,"src":"2159:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3363,"nodeType":"Block","src":"2503:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:16","statements":[{"nodeType":"YulAssignment","src":"2552:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3360,"isOffset":false,"isSlot":true,"src":"2552:6:16","suffix":"slot","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"2562:4:16","valueSize":1}],"flags":["memory-safe"],"id":3362,"nodeType":"InlineAssembly","src":"2513:63:16"}]},"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"2328:86:16","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3364,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:16","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"slot","nameLocation":"2451:4:16","nodeType":"VariableDeclaration","scope":3364,"src":"2443:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:16"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"r","nameLocation":"2500:1:16","nodeType":"VariableDeclaration","scope":3364,"src":"2480:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3319_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3359,"nodeType":"UserDefinedTypeName","pathNode":{"id":3358,"name":"Bytes32Slot","nameLocations":["2480:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3319,"src":"2480:11:16"},"referencedDeclaration":3319,"src":"2480:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3319_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:16"},"scope":3431,"src":"2419:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"2763:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:16","statements":[{"nodeType":"YulAssignment","src":"2812:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3371,"isOffset":false,"isSlot":true,"src":"2812:6:16","suffix":"slot","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"2822:4:16","valueSize":1}],"flags":["memory-safe"],"id":3373,"nodeType":"InlineAssembly","src":"2773:63:16"}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"2588:86:16","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:16","nodeType":"FunctionDefinition","parameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"slot","nameLocation":"2711:4:16","nodeType":"VariableDeclaration","scope":3375,"src":"2703:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:16"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"r","nameLocation":"2760:1:16","nodeType":"VariableDeclaration","scope":3375,"src":"2740:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3370,"nodeType":"UserDefinedTypeName","pathNode":{"id":3369,"name":"Uint256Slot","nameLocations":["2740:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"2740:11:16"},"referencedDeclaration":3322,"src":"2740:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3322_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:16"},"scope":3431,"src":"2679:163:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3385,"nodeType":"Block","src":"3020:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:16","statements":[{"nodeType":"YulAssignment","src":"3069:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3382,"isOffset":false,"isSlot":true,"src":"3069:6:16","suffix":"slot","valueSize":1},{"declaration":3378,"isOffset":false,"isSlot":false,"src":"3079:4:16","valueSize":1}],"flags":["memory-safe"],"id":3384,"nodeType":"InlineAssembly","src":"3030:63:16"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"2848:85:16","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3386,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:16","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"slot","nameLocation":"2969:4:16","nodeType":"VariableDeclaration","scope":3386,"src":"2961:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:16"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"r","nameLocation":"3017:1:16","nodeType":"VariableDeclaration","scope":3386,"src":"2998:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3325_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3381,"nodeType":"UserDefinedTypeName","pathNode":{"id":3380,"name":"Int256Slot","nameLocations":["2998:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3325,"src":"2998:10:16"},"referencedDeclaration":3325,"src":"2998:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3325_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:16"},"scope":3431,"src":"2938:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"3277:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:16","statements":[{"nodeType":"YulAssignment","src":"3326:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3393,"isOffset":false,"isSlot":true,"src":"3326:6:16","suffix":"slot","valueSize":1},{"declaration":3389,"isOffset":false,"isSlot":false,"src":"3336:4:16","valueSize":1}],"flags":["memory-safe"],"id":3395,"nodeType":"InlineAssembly","src":"3287:63:16"}]},"documentation":{"id":3387,"nodeType":"StructuredDocumentation","src":"3105:85:16","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:16","nodeType":"FunctionDefinition","parameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3389,"mutability":"mutable","name":"slot","nameLocation":"3226:4:16","nodeType":"VariableDeclaration","scope":3397,"src":"3218:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:16"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"r","nameLocation":"3274:1:16","nodeType":"VariableDeclaration","scope":3397,"src":"3255:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3392,"nodeType":"UserDefinedTypeName","pathNode":{"id":3391,"name":"StringSlot","nameLocations":["3255:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3328,"src":"3255:10:16"},"referencedDeclaration":3328,"src":"3255:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:16"},"scope":3431,"src":"3195:161:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"3558:85:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:16","statements":[{"nodeType":"YulAssignment","src":"3607:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3404,"isOffset":false,"isSlot":true,"src":"3607:6:16","suffix":"slot","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":true,"src":"3617:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3406,"nodeType":"InlineAssembly","src":"3568:69:16"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"3362:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:16","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"store","nameLocation":"3506:5:16","nodeType":"VariableDeclaration","scope":3408,"src":"3491:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3399,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:16"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"r","nameLocation":"3555:1:16","nodeType":"VariableDeclaration","scope":3408,"src":"3536:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3403,"nodeType":"UserDefinedTypeName","pathNode":{"id":3402,"name":"StringSlot","nameLocations":["3536:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3328,"src":"3536:10:16"},"referencedDeclaration":3328,"src":"3536:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3328_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:16"},"scope":3431,"src":"3468:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"3818:79:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:16","statements":[{"nodeType":"YulAssignment","src":"3867:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3415,"isOffset":false,"isSlot":true,"src":"3867:6:16","suffix":"slot","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"3877:4:16","valueSize":1}],"flags":["memory-safe"],"id":3417,"nodeType":"InlineAssembly","src":"3828:63:16"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"3649:84:16","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:16","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"slot","nameLocation":"3768:4:16","nodeType":"VariableDeclaration","scope":3419,"src":"3760:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:16"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"r","nameLocation":"3815:1:16","nodeType":"VariableDeclaration","scope":3419,"src":"3797:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3414,"nodeType":"UserDefinedTypeName","pathNode":{"id":3413,"name":"BytesSlot","nameLocations":["3797:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3331,"src":"3797:9:16"},"referencedDeclaration":3331,"src":"3797:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:16"},"scope":3431,"src":"3738:159:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"4094:85:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:16","statements":[{"nodeType":"YulAssignment","src":"4143:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3426,"isOffset":false,"isSlot":true,"src":"4143:6:16","suffix":"slot","valueSize":1},{"declaration":3422,"isOffset":false,"isSlot":true,"src":"4153:10:16","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3428,"nodeType":"InlineAssembly","src":"4104:69:16"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"3903:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:16","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"store","nameLocation":"4043:5:16","nodeType":"VariableDeclaration","scope":3430,"src":"4029:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3421,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:16"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"r","nameLocation":"4091:1:16","nodeType":"VariableDeclaration","scope":3430,"src":"4073:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3425,"nodeType":"UserDefinedTypeName","pathNode":{"id":3424,"name":"BytesSlot","nameLocations":["4073:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":3331,"src":"4073:9:16"},"referencedDeclaration":3331,"src":"4073:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3331_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:16"},"scope":3431,"src":"4007:172:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3432,"src":"1407:2774:16","usedErrors":[],"usedEvents":[]}],"src":"193:3989:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6490],"SafeCast":[8255],"SignedMath":[8399],"Strings":[4833]},"id":4834,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4834,"sourceUnit":6491,"src":"127:37:17","symbolAliases":[{"foreign":{"id":3434,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"135:4:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4834,"sourceUnit":8256,"src":"165:45:17","symbolAliases":[{"foreign":{"id":3436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4834,"sourceUnit":8400,"src":"211:49:17","symbolAliases":[{"foreign":{"id":3438,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"219:10:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"262:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":4833,"linearizedBaseContracts":[4833],"name":"Strings","nameLocation":"305:7:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3442,"libraryName":{"id":3441,"name":"SafeCast","nameLocations":["325:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":8255,"src":"325:8:17"},"nodeType":"UsingForDirective","src":"319:21:17"},{"constant":true,"id":3445,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:17","nodeType":"VariableDeclaration","scope":4833,"src":"346:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3443,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3448,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:17","nodeType":"VariableDeclaration","scope":4833,"src":"408:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3446,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3484,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:17","nodeType":"VariableDeclaration","scope":4833,"src":"456:302:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":3457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:17","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:17","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":3462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:17","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:17","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":3465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":3467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:17","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":3472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:17","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:17","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":3477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:17","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:17","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:17","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"778:81:17","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3491,"name":"StringsInsufficientHexLength","nameLocation":"870:28:17","nodeType":"ErrorDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"value","nameLocation":"907:5:17","nodeType":"VariableDeclaration","scope":3491,"src":"899:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"length","nameLocation":"922:6:17","nodeType":"VariableDeclaration","scope":3491,"src":"914:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:17"},"src":"864:66:17"},{"documentation":{"id":3492,"nodeType":"StructuredDocumentation","src":"936:108:17","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3494,"name":"StringsInvalidChar","nameLocation":"1055:18:17","nodeType":"ErrorDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[],"src":"1073:2:17"},"src":"1049:27:17"},{"documentation":{"id":3495,"nodeType":"StructuredDocumentation","src":"1082:84:17","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3497,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:17","nodeType":"ErrorDefinition","parameters":{"id":3496,"nodeType":"ParameterList","parameters":[],"src":"1204:2:17"},"src":"1171:36:17"},{"body":{"id":3544,"nodeType":"Block","src":"1379:563:17","statements":[{"id":3543,"nodeType":"UncheckedBlock","src":"1389:547:17","statements":[{"assignments":[3506],"declarations":[{"constant":false,"id":3506,"mutability":"mutable","name":"length","nameLocation":"1421:6:17","nodeType":"VariableDeclaration","scope":3543,"src":"1413:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3513,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"1441:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3507,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"1430:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6322,"src":"1430:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:17"},{"assignments":[3515],"declarations":[{"constant":false,"id":3515,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:17","nodeType":"VariableDeclaration","scope":3543,"src":"1465:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3514,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3520,"initialValue":{"arguments":[{"id":3518,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"1499:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3516,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:17"},{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:17","nodeType":"VariableDeclaration","scope":3543,"src":"1520:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3523,"nodeType":"VariableDeclarationStatement","src":"1520:11:17"},{"AST":{"nodeType":"YulBlock","src":"1570:69:17","statements":[{"nodeType":"YulAssignment","src":"1588:37:17","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:17"},"nodeType":"YulFunctionCall","src":"1599:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:17"},"nodeType":"YulFunctionCall","src":"1595:30:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3515,"isOffset":false,"isSlot":false,"src":"1603:6:17","valueSize":1},{"declaration":3506,"isOffset":false,"isSlot":false,"src":"1618:6:17","valueSize":1},{"declaration":3522,"isOffset":false,"isSlot":false,"src":"1588:3:17","valueSize":1}],"flags":["memory-safe"],"id":3524,"nodeType":"InlineAssembly","src":"1545:94:17"},{"body":{"id":3539,"nodeType":"Block","src":"1665:234:17","statements":[{"expression":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:17","subExpression":{"id":3526,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"1683:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3528,"nodeType":"ExpressionStatement","src":"1683:5:17"},{"AST":{"nodeType":"YulBlock","src":"1731:86:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:17"},"nodeType":"YulFunctionCall","src":"1771:14:17"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:17"},"nodeType":"YulFunctionCall","src":"1766:32:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:17"},"nodeType":"YulFunctionCall","src":"1753:46:17"},"nodeType":"YulExpressionStatement","src":"1753:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3445,"isOffset":false,"isSlot":false,"src":"1787:10:17","valueSize":1},{"declaration":3522,"isOffset":false,"isSlot":false,"src":"1761:3:17","valueSize":1},{"declaration":3500,"isOffset":false,"isSlot":false,"src":"1775:5:17","valueSize":1}],"flags":["memory-safe"],"id":3529,"nodeType":"InlineAssembly","src":"1706:111:17"},{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"1834:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"1834:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"1867:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3538,"nodeType":"IfStatement","src":"1863:21:17","trueBody":{"id":3537,"nodeType":"Break","src":"1879:5:17"}}]},"condition":{"hexValue":"74727565","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3540,"nodeType":"WhileStatement","src":"1652:247:17"},{"expression":{"id":3541,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"1919:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3504,"id":3542,"nodeType":"Return","src":"1912:13:17"}]}]},"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"1213:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:17","nodeType":"FunctionDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"value","nameLocation":"1334:5:17","nodeType":"VariableDeclaration","scope":3545,"src":"1326:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:17"},"returnParameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3545,"src":"1364:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3502,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:17"},"scope":4833,"src":"1308:634:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3570,"nodeType":"Block","src":"2118:92:17","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"2149:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:17","trueExpression":{"hexValue":"2d","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"2195:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3563,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"2180:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8399_$","typeString":"type(library SignedMath)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8398,"src":"2180:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3562,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2171:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3553,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:17","typeDescriptions":{}}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:17","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3552,"id":3569,"nodeType":"Return","src":"2128:75:17"}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"1948:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3571,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:17","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"value","nameLocation":"2073:5:17","nodeType":"VariableDeclaration","scope":3571,"src":"2066:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3547,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:17"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3571,"src":"2103:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3550,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:17"},"scope":4833,"src":"2042:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3590,"nodeType":"Block","src":"2389:100:17","statements":[{"id":3589,"nodeType":"UncheckedBlock","src":"2399:84:17","statements":[{"expression":{"arguments":[{"id":3580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"2442:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"2461:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3581,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"2449:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"2449:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3579,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3591,3674,3694],"referencedDeclaration":3674,"src":"2430:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3578,"id":3588,"nodeType":"Return","src":"2423:49:17"}]}]},"documentation":{"id":3572,"nodeType":"StructuredDocumentation","src":"2216:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3591,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:17","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"value","nameLocation":"2344:5:17","nodeType":"VariableDeclaration","scope":3591,"src":"2336:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:17"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3591,"src":"2374:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3576,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:17"},"scope":4833,"src":"2315:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3673,"nodeType":"Block","src":"2702:435:17","statements":[{"assignments":[3602],"declarations":[{"constant":false,"id":3602,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:17","nodeType":"VariableDeclaration","scope":3673,"src":"2712:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3604,"initialValue":{"id":3603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"2733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:17"},{"assignments":[3606],"declarations":[{"constant":false,"id":3606,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:17","nodeType":"VariableDeclaration","scope":3673,"src":"2748:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3605,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3615,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3610,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2784:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3607,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:17"},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3616,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2805:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3618,"indexExpression":{"hexValue":"30","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3621,"nodeType":"ExpressionStatement","src":"2805:15:17"},{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3622,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2830:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3624,"indexExpression":{"hexValue":"31","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3627,"nodeType":"ExpressionStatement","src":"2830:15:17"},{"body":{"id":3656,"nodeType":"Block","src":"2900:95:17","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3642,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2914:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3644,"indexExpression":{"id":3643,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2921:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3645,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"2926:10:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3649,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2937:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3651,"nodeType":"ExpressionStatement","src":"2914:40:17"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2968:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"2968:16:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"initializationExpression":{"assignments":[3629],"declarations":[{"constant":false,"id":3629,"mutability":"mutable","name":"i","nameLocation":"2868:1:17","nodeType":"VariableDeclaration","scope":3657,"src":"2860:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3635,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3631,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2876:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:17"},"loopExpression":{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:17","subExpression":{"id":3639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2897:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"nodeType":"ExpressionStatement","src":"2895:3:17"},"nodeType":"ForStatement","src":"2855:140:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"3008:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"nodeType":"IfStatement","src":"3004:96:17","trueBody":{"id":3666,"nodeType":"Block","src":"3025:75:17","statements":[{"errorCall":{"arguments":[{"id":3662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"3075:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3663,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"3082:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3661,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"3046:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3665,"nodeType":"RevertStatement","src":"3039:50:17"}]}},{"expression":{"arguments":[{"id":3670,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"3123:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3668,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:17","typeDescriptions":{}}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3600,"id":3672,"nodeType":"Return","src":"3109:21:17"}]},"documentation":{"id":3592,"nodeType":"StructuredDocumentation","src":"2495:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:17","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"value","nameLocation":"2641:5:17","nodeType":"VariableDeclaration","scope":3674,"src":"2633:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"length","nameLocation":"2656:6:17","nodeType":"VariableDeclaration","scope":3674,"src":"2648:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:17"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"2687:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3598,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:17"},"scope":4833,"src":"2612:525:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3693,"nodeType":"Block","src":"3369:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3687,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3414:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3685,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:17","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:17","typeDescriptions":{}}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3690,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"3422:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3682,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3591,3674,3694],"referencedDeclaration":3674,"src":"3386:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3681,"id":3692,"nodeType":"Return","src":"3379:58:17"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"3143:148:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3694,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:17","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"addr","nameLocation":"3325:4:17","nodeType":"VariableDeclaration","scope":3694,"src":"3317:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3676,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:17"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"3354:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3679,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:17"},"scope":4833,"src":"3296:148:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"3701:642:17","statements":[{"assignments":[3703],"declarations":[{"constant":false,"id":3703,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:17","nodeType":"VariableDeclaration","scope":3758,"src":"3711:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3702,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3710,"initialValue":{"arguments":[{"arguments":[{"id":3707,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"3751:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3706,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3591,3674,3694],"referencedDeclaration":3694,"src":"3739:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3704,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:17","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:17"},{"assignments":[3712],"declarations":[{"constant":false,"id":3712,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:17","nodeType":"VariableDeclaration","scope":3758,"src":"3842:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"nodeType":"VariableDeclarationStatement","src":"3842:17:17"},{"AST":{"nodeType":"YulBlock","src":"3894:78:17","statements":[{"nodeType":"YulAssignment","src":"3908:54:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:17","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:17"},"nodeType":"YulFunctionCall","src":"3939:17:17"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:17","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:17"},"nodeType":"YulFunctionCall","src":"3929:32:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:17"},"nodeType":"YulFunctionCall","src":"3921:41:17"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3703,"isOffset":false,"isSlot":false,"src":"3943:6:17","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"3908:9:17","valueSize":1}],"flags":["memory-safe"],"id":3714,"nodeType":"InlineAssembly","src":"3869:103:17"},{"body":{"id":3751,"nodeType":"Block","src":"4015:291:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"4121:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3732,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"4150:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3734,"indexExpression":{"id":3733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"4157:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3730,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:17","typeDescriptions":{}}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3746,"nodeType":"IfStatement","src":"4117:150:17","trueBody":{"id":3745,"nodeType":"Block","src":"4167:100:17","statements":[{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3739,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"4235:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3741,"indexExpression":{"id":3740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"4242:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3744,"nodeType":"ExpressionStatement","src":"4235:17:17"}]}},{"expression":{"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3747,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"4280:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ExpressionStatement","src":"4280:15:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"4003:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3752,"initializationExpression":{"assignments":[3716],"declarations":[{"constant":false,"id":3716,"mutability":"mutable","name":"i","nameLocation":"3995:1:17","nodeType":"VariableDeclaration","scope":3752,"src":"3987:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3718,"initialValue":{"hexValue":"3431","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:17","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:17"},"loopExpression":{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:17","subExpression":{"id":3722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"4012:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ExpressionStatement","src":"4010:3:17"},"nodeType":"ForStatement","src":"3982:324:17"},{"expression":{"arguments":[{"id":3755,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"4329:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3753,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:17","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3701,"id":3757,"nodeType":"Return","src":"4315:21:17"}]},"documentation":{"id":3695,"nodeType":"StructuredDocumentation","src":"3450:165:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:17","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"addr","nameLocation":"3657:4:17","nodeType":"VariableDeclaration","scope":3759,"src":"3649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3696,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:17"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3759,"src":"3686:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3699,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:17"},"scope":4833,"src":"3620:723:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3795,"nodeType":"Block","src":"4498:104:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4521:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3769,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:17","typeDescriptions":{}}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:17","memberName":"length","nodeType":"MemberAccess","src":"4515:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3776,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4540:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3774,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:17","typeDescriptions":{}}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:17","memberName":"length","nodeType":"MemberAccess","src":"4534:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"4569:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3781,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:17","typeDescriptions":{}}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3780,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4592:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3787,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:17","typeDescriptions":{}}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3786,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3768,"id":3794,"nodeType":"Return","src":"4508:87:17"}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"4349:66:17","text":" @dev Returns true if the two strings are equal."},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:17","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"a","nameLocation":"4449:1:17","nodeType":"VariableDeclaration","scope":3796,"src":"4435:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3761,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"b","nameLocation":"4466:1:17","nodeType":"VariableDeclaration","scope":3796,"src":"4452:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3763,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:17"},"returnParameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"4492:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:17"},"scope":4833,"src":"4420:182:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3814,"nodeType":"Block","src":"4899:64:17","statements":[{"expression":{"arguments":[{"id":3805,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"4926:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3809,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"4942:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3807,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:17","typeDescriptions":{}}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:17","memberName":"length","nodeType":"MemberAccess","src":"4936:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3804,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3815,3846],"referencedDeclaration":3846,"src":"4916:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3803,"id":3813,"nodeType":"Return","src":"4909:47:17"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"4608:214:17","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3815,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:17","nodeType":"FunctionDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"input","nameLocation":"4860:5:17","nodeType":"VariableDeclaration","scope":3815,"src":"4846:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3798,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:17"},"returnParameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3815,"src":"4890:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:17"},"scope":4833,"src":"4827:136:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"5368:153:17","statements":[{"assignments":[3828,3830],"declarations":[{"constant":false,"id":3828,"mutability":"mutable","name":"success","nameLocation":"5384:7:17","nodeType":"VariableDeclaration","scope":3845,"src":"5379:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3827,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"value","nameLocation":"5401:5:17","nodeType":"VariableDeclaration","scope":3845,"src":"5393:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3836,"initialValue":{"arguments":[{"id":3832,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"5423:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3833,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"5430:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3834,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"5437:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3831,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3867,3904],"referencedDeclaration":3904,"src":"5410:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:17"},{"condition":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:17","subExpression":{"id":3837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"5456:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3842,"nodeType":"IfStatement","src":"5451:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3839,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5472:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3841,"nodeType":"RevertStatement","src":"5465:27:17"}},{"expression":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"5509:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3826,"id":3844,"nodeType":"Return","src":"5502:12:17"}]},"documentation":{"id":3816,"nodeType":"StructuredDocumentation","src":"4969:294:17","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:17","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"input","nameLocation":"5301:5:17","nodeType":"VariableDeclaration","scope":3846,"src":"5287:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3817,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"begin","nameLocation":"5316:5:17","nodeType":"VariableDeclaration","scope":3846,"src":"5308:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"end","nameLocation":"5331:3:17","nodeType":"VariableDeclaration","scope":3846,"src":"5323:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:17"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"5359:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:17"},"scope":4833,"src":"5268:253:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"5842:83:17","statements":[{"expression":{"arguments":[{"id":3857,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"5888:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3861,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"5904:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3859,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:17","typeDescriptions":{}}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:17","memberName":"length","nodeType":"MemberAccess","src":"5898:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3856,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"5859:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3855,"id":3865,"nodeType":"Return","src":"5852:66:17"}]},"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"5527:215:17","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:17","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"input","nameLocation":"5783:5:17","nodeType":"VariableDeclaration","scope":3867,"src":"5769:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3848,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:17"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"success","nameLocation":"5818:7:17","nodeType":"VariableDeclaration","scope":3867,"src":"5813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3851,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"value","nameLocation":"5835:5:17","nodeType":"VariableDeclaration","scope":3867,"src":"5827:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:17"},"scope":4833,"src":"5747:178:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3903,"nodeType":"Block","src":"6327:144:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6341:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3884,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"6353:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3882,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:17","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:17","memberName":"length","nodeType":"MemberAccess","src":"6347:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6370:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3889,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6378:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"nodeType":"IfStatement","src":"6337:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3880,"id":3895,"nodeType":"Return","src":"6383:17:17"}},{"expression":{"arguments":[{"id":3898,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"6446:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3899,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6453:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3900,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"6460:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3897,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"6417:28:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3880,"id":3902,"nodeType":"Return","src":"6410:54:17"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"5931:238:17","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3904,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:17","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"input","nameLocation":"6219:5:17","nodeType":"VariableDeclaration","scope":3904,"src":"6205:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3869,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"begin","nameLocation":"6242:5:17","nodeType":"VariableDeclaration","scope":3904,"src":"6234:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"end","nameLocation":"6265:3:17","nodeType":"VariableDeclaration","scope":3904,"src":"6257:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:17"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"success","nameLocation":"6303:7:17","nodeType":"VariableDeclaration","scope":3904,"src":"6298:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3876,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3879,"mutability":"mutable","name":"value","nameLocation":"6320:5:17","nodeType":"VariableDeclaration","scope":3904,"src":"6312:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:17"},"scope":4833,"src":"6174:297:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3973,"nodeType":"Block","src":"6874:347:17","statements":[{"assignments":[3919],"declarations":[{"constant":false,"id":3919,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:17","nodeType":"VariableDeclaration","scope":3973,"src":"6884:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3918,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3924,"initialValue":{"arguments":[{"id":3922,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"6912:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3920,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:17","typeDescriptions":{}}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:17"},{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"result","nameLocation":"6937:6:17","nodeType":"VariableDeclaration","scope":3973,"src":"6929:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3928,"initialValue":{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:17"},{"body":{"id":3967,"nodeType":"Block","src":"6995:189:17","statements":[{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"chr","nameLocation":"7015:3:17","nodeType":"VariableDeclaration","scope":3967,"src":"7009:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3939,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3950,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3945,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"7064:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"7072:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3944,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"7041:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3942,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:17","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3941,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7021:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"7094:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"IfStatement","src":"7090:30:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3917,"id":3957,"nodeType":"Return","src":"7103:17:17"}},{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"7134:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3962,"nodeType":"ExpressionStatement","src":"7134:12:17"},{"expression":{"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"7160:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3964,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"7170:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3966,"nodeType":"ExpressionStatement","src":"7160:13:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"6981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3934,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"6985:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3968,"initializationExpression":{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"i","nameLocation":"6970:1:17","nodeType":"VariableDeclaration","scope":3968,"src":"6962:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3932,"initialValue":{"id":3931,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"6974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:17"},"loopExpression":{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:17","subExpression":{"id":3936,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"6992:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ExpressionStatement","src":"6990:3:17"},"nodeType":"ForStatement","src":"6957:227:17"},{"expression":{"components":[{"hexValue":"74727565","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"7207:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3917,"id":3972,"nodeType":"Return","src":"7193:21:17"}]},"documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"6477:224:17","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3974,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:17","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3907,"mutability":"mutable","name":"input","nameLocation":"6767:5:17","nodeType":"VariableDeclaration","scope":3974,"src":"6753:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3906,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"begin","nameLocation":"6790:5:17","nodeType":"VariableDeclaration","scope":3974,"src":"6782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"end","nameLocation":"6813:3:17","nodeType":"VariableDeclaration","scope":3974,"src":"6805:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:17"},"returnParameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"success","nameLocation":"6850:7:17","nodeType":"VariableDeclaration","scope":3974,"src":"6845:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3913,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"value","nameLocation":"6867:5:17","nodeType":"VariableDeclaration","scope":3974,"src":"6859:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:17"},"scope":4833,"src":"6706:515:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3992,"nodeType":"Block","src":"7518:63:17","statements":[{"expression":{"arguments":[{"id":3983,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"7544:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3987,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"7560:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3985,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:17","typeDescriptions":{}}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:17","memberName":"length","nodeType":"MemberAccess","src":"7554:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3982,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3993,4024],"referencedDeclaration":4024,"src":"7535:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3981,"id":3991,"nodeType":"Return","src":"7528:46:17"}]},"documentation":{"id":3975,"nodeType":"StructuredDocumentation","src":"7227:216:17","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:17","nodeType":"FunctionDefinition","parameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3977,"mutability":"mutable","name":"input","nameLocation":"7480:5:17","nodeType":"VariableDeclaration","scope":3993,"src":"7466:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3976,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:17"},"returnParameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3993,"src":"7510:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3979,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:17"},"scope":4833,"src":"7448:133:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4023,"nodeType":"Block","src":"7986:151:17","statements":[{"assignments":[4006,4008],"declarations":[{"constant":false,"id":4006,"mutability":"mutable","name":"success","nameLocation":"8002:7:17","nodeType":"VariableDeclaration","scope":4023,"src":"7997:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4005,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"value","nameLocation":"8018:5:17","nodeType":"VariableDeclaration","scope":4023,"src":"8011:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4007,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4014,"initialValue":{"arguments":[{"id":4010,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"8039:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4011,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4012,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"8053:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4009,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4045,4087],"referencedDeclaration":4087,"src":"8027:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:17"},{"condition":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:17","subExpression":{"id":4015,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"8072:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4020,"nodeType":"IfStatement","src":"8067:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4017,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"8088:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4019,"nodeType":"RevertStatement","src":"8081:27:17"}},{"expression":{"id":4021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"8125:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4004,"id":4022,"nodeType":"Return","src":"8118:12:17"}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"7587:296:17","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4024,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:17","nodeType":"FunctionDefinition","parameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"input","nameLocation":"7920:5:17","nodeType":"VariableDeclaration","scope":4024,"src":"7906:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3995,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3998,"mutability":"mutable","name":"begin","nameLocation":"7935:5:17","nodeType":"VariableDeclaration","scope":4024,"src":"7927:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4000,"mutability":"mutable","name":"end","nameLocation":"7950:3:17","nodeType":"VariableDeclaration","scope":4024,"src":"7942:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:17"},"returnParameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4024,"src":"7978:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4002,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:17"},"scope":4833,"src":"7888:249:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4044,"nodeType":"Block","src":"8528:82:17","statements":[{"expression":{"arguments":[{"id":4035,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"8573:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4039,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"8589:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4037,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:17","typeDescriptions":{}}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:17","memberName":"length","nodeType":"MemberAccess","src":"8583:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"8545:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4033,"id":4043,"nodeType":"Return","src":"8538:65:17"}]},"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"8143:287:17","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:17","nodeType":"FunctionDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"input","nameLocation":"8470:5:17","nodeType":"VariableDeclaration","scope":4045,"src":"8456:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4026,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:17"},"returnParameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"success","nameLocation":"8505:7:17","nodeType":"VariableDeclaration","scope":4045,"src":"8500:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4029,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"value","nameLocation":"8521:5:17","nodeType":"VariableDeclaration","scope":4045,"src":"8514:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4031,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:17"},"scope":4833,"src":"8435:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4050,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:17","nodeType":"VariableDeclaration","scope":4833,"src":"8616:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4086,"nodeType":"Block","src":"9132:143:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"9146:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4067,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"9158:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4065,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:17","typeDescriptions":{}}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:17","memberName":"length","nodeType":"MemberAccess","src":"9152:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"9175:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4072,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"9183:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4079,"nodeType":"IfStatement","src":"9142:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4063,"id":4078,"nodeType":"Return","src":"9188:17:17"}},{"expression":{"arguments":[{"id":4081,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"9250:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4082,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"9257:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4083,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"9264:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4080,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"9222:27:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4063,"id":4085,"nodeType":"Return","src":"9215:53:17"}]},"documentation":{"id":4051,"nodeType":"StructuredDocumentation","src":"8673:303:17","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:17","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"input","nameLocation":"9025:5:17","nodeType":"VariableDeclaration","scope":4087,"src":"9011:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4052,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"begin","nameLocation":"9048:5:17","nodeType":"VariableDeclaration","scope":4087,"src":"9040:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"end","nameLocation":"9071:3:17","nodeType":"VariableDeclaration","scope":4087,"src":"9063:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:17"},"returnParameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"success","nameLocation":"9109:7:17","nodeType":"VariableDeclaration","scope":4087,"src":"9104:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4059,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"value","nameLocation":"9125:5:17","nodeType":"VariableDeclaration","scope":4087,"src":"9118:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4061,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:17"},"scope":4833,"src":"8981:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"9675:812:17","statements":[{"assignments":[4102],"declarations":[{"constant":false,"id":4102,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:17","nodeType":"VariableDeclaration","scope":4207,"src":"9685:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4101,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4107,"initialValue":{"arguments":[{"id":4105,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"9713:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4103,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:17","typeDescriptions":{}}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:17"},{"assignments":[4109],"declarations":[{"constant":false,"id":4109,"mutability":"mutable","name":"sign","nameLocation":"9783:4:17","nodeType":"VariableDeclaration","scope":4207,"src":"9776:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4108,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4125,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"9790:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4111,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"9799:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4120,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"9847:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4121,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"9855:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4119,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"9824:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4117,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:17","typeDescriptions":{}}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:17","trueExpression":{"arguments":[{"hexValue":"30","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4113,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:17","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:17"},{"assignments":[4127],"declarations":[{"constant":false,"id":4127,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:17","nodeType":"VariableDeclaration","scope":4207,"src":"9943:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4126,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4134,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"9963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4129,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:17","typeDescriptions":{}}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:17"},{"assignments":[4136],"declarations":[{"constant":false,"id":4136,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:17","nodeType":"VariableDeclaration","scope":4207,"src":"9992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4135,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4143,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"10012:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4138,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:17","typeDescriptions":{}}},"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:17"},{"assignments":[4145],"declarations":[{"constant":false,"id":4145,"mutability":"mutable","name":"offset","nameLocation":"10049:6:17","nodeType":"VariableDeclaration","scope":4207,"src":"10041:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4152,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"10059:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4147,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10075:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"10058:37:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:17"},{"assignments":[4154,4156],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:17","nodeType":"VariableDeclaration","scope":4207,"src":"10109:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4153,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:17","nodeType":"VariableDeclaration","scope":4207,"src":"10126:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4164,"initialValue":{"arguments":[{"id":4158,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"10159:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"10166:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4160,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"10174:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4162,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"10182:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4157,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3867,3904],"referencedDeclaration":3904,"src":"10146:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4165,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"10201:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"10215:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4167,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"10226:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"10343:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4186,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10357:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"10373:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4189,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"10385:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4100,"id":4204,"nodeType":"Return","src":"10463:17:17"},"id":4205,"nodeType":"IfStatement","src":"10339:141:17","trueBody":{"id":4200,"nodeType":"Block","src":"10401:56:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4194,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4193,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:17","memberName":"min","nodeType":"MemberAccess","src":"10429:16:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4100,"id":4199,"nodeType":"Return","src":"10415:31:17"}]}},"id":4206,"nodeType":"IfStatement","src":"10197:283:17","trueBody":{"id":4184,"nodeType":"Block","src":"10242:91:17","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4171,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"10270:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4179,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"10312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4177,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:17","typeDescriptions":{}}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:17","trueExpression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:17","subExpression":{"arguments":[{"id":4174,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"10293:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4172,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:17","typeDescriptions":{}}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4100,"id":4183,"nodeType":"Return","src":"10256:66:17"}]}}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"9281:223:17","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:17","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"input","nameLocation":"9569:5:17","nodeType":"VariableDeclaration","scope":4208,"src":"9555:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4089,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4092,"mutability":"mutable","name":"begin","nameLocation":"9592:5:17","nodeType":"VariableDeclaration","scope":4208,"src":"9584:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"end","nameLocation":"9615:3:17","nodeType":"VariableDeclaration","scope":4208,"src":"9607:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:17"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"success","nameLocation":"9652:7:17","nodeType":"VariableDeclaration","scope":4208,"src":"9647:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4096,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4099,"mutability":"mutable","name":"value","nameLocation":"9668:5:17","nodeType":"VariableDeclaration","scope":4208,"src":"9661:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4098,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:17"},"scope":4833,"src":"9509:978:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4226,"nodeType":"Block","src":"10832:67:17","statements":[{"expression":{"arguments":[{"id":4217,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"10862:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4221,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"10878:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4219,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:17","typeDescriptions":{}}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:17","memberName":"length","nodeType":"MemberAccess","src":"10872:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4216,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4227,4258],"referencedDeclaration":4258,"src":"10849:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4215,"id":4225,"nodeType":"Return","src":"10842:50:17"}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"10493:259:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:17","nodeType":"FunctionDefinition","parameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"input","nameLocation":"10793:5:17","nodeType":"VariableDeclaration","scope":4227,"src":"10779:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4210,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:17"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4227,"src":"10823:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4213,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:17"},"scope":4833,"src":"10757:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4257,"nodeType":"Block","src":"11320:156:17","statements":[{"assignments":[4240,4242],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"success","nameLocation":"11336:7:17","nodeType":"VariableDeclaration","scope":4257,"src":"11331:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"value","nameLocation":"11353:5:17","nodeType":"VariableDeclaration","scope":4257,"src":"11345:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4248,"initialValue":{"arguments":[{"id":4244,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"11378:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4245,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"11385:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4246,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"11392:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4243,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4279,4316],"referencedDeclaration":4316,"src":"11362:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:17"},{"condition":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:17","subExpression":{"id":4249,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"11411:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4254,"nodeType":"IfStatement","src":"11406:41:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4251,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"11427:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4253,"nodeType":"RevertStatement","src":"11420:27:17"}},{"expression":{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"11464:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4238,"id":4256,"nodeType":"Return","src":"11457:12:17"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"10905:307:17","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4258,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:17","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"input","nameLocation":"11253:5:17","nodeType":"VariableDeclaration","scope":4258,"src":"11239:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4229,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"begin","nameLocation":"11268:5:17","nodeType":"VariableDeclaration","scope":4258,"src":"11260:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"end","nameLocation":"11283:3:17","nodeType":"VariableDeclaration","scope":4258,"src":"11275:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:17"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4258,"src":"11311:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:17"},"scope":4833,"src":"11217:259:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"11803:86:17","statements":[{"expression":{"arguments":[{"id":4269,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"11852:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4273,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"11868:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4271,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:17","typeDescriptions":{}}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:17","memberName":"length","nodeType":"MemberAccess","src":"11862:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4268,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"11820:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4267,"id":4277,"nodeType":"Return","src":"11813:69:17"}]},"documentation":{"id":4259,"nodeType":"StructuredDocumentation","src":"11482:218:17","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:17","nodeType":"FunctionDefinition","parameters":{"id":4262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4261,"mutability":"mutable","name":"input","nameLocation":"11744:5:17","nodeType":"VariableDeclaration","scope":4279,"src":"11730:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4260,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:17"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"success","nameLocation":"11779:7:17","nodeType":"VariableDeclaration","scope":4279,"src":"11774:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4263,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4266,"mutability":"mutable","name":"value","nameLocation":"11796:5:17","nodeType":"VariableDeclaration","scope":4279,"src":"11788:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:17"},"scope":4833,"src":"11705:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4315,"nodeType":"Block","src":"12297:147:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"12311:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4296,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"12323:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4294,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:17","typeDescriptions":{}}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:17","memberName":"length","nodeType":"MemberAccess","src":"12317:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"12340:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4301,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"12348:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4308,"nodeType":"IfStatement","src":"12307:63:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4292,"id":4307,"nodeType":"Return","src":"12353:17:17"}},{"expression":{"arguments":[{"id":4310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"12419:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4311,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"12426:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4312,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"12433:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4309,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"12387:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4292,"id":4314,"nodeType":"Return","src":"12380:57:17"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"11895:241:17","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4316,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:17","nodeType":"FunctionDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"input","nameLocation":"12189:5:17","nodeType":"VariableDeclaration","scope":4316,"src":"12175:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4281,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"begin","nameLocation":"12212:5:17","nodeType":"VariableDeclaration","scope":4316,"src":"12204:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4286,"mutability":"mutable","name":"end","nameLocation":"12235:3:17","nodeType":"VariableDeclaration","scope":4316,"src":"12227:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4285,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:17"},"returnParameters":{"id":4292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"success","nameLocation":"12273:7:17","nodeType":"VariableDeclaration","scope":4316,"src":"12268:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4288,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4291,"mutability":"mutable","name":"value","nameLocation":"12290:5:17","nodeType":"VariableDeclaration","scope":4316,"src":"12282:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4290,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:17"},"scope":4833,"src":"12141:303:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"12853:881:17","statements":[{"assignments":[4331],"declarations":[{"constant":false,"id":4331,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:17","nodeType":"VariableDeclaration","scope":4418,"src":"12863:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4330,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4336,"initialValue":{"arguments":[{"id":4334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"12891:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4332,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:17","typeDescriptions":{}}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:17"},{"assignments":[4338],"declarations":[{"constant":false,"id":4338,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:17","nodeType":"VariableDeclaration","scope":4418,"src":"12945:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4337,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4358,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"12963:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"12969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4348,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"13013:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4349,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"13021:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4347,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"12990:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4345,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:17","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4352,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:17","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:17"},{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"offset","nameLocation":"13133:6:17","nodeType":"VariableDeclaration","scope":4418,"src":"13125:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4366,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4361,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"13142:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"13142:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:17"},{"assignments":[4368],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"result","nameLocation":"13183:6:17","nodeType":"VariableDeclaration","scope":4418,"src":"13175:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4370,"initialValue":{"hexValue":"30","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:17"},{"body":{"id":4412,"nodeType":"Block","src":"13250:447:17","statements":[{"assignments":[4384],"declarations":[{"constant":false,"id":4384,"mutability":"mutable","name":"chr","nameLocation":"13270:3:17","nodeType":"VariableDeclaration","scope":4412,"src":"13264:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4383,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4394,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4389,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"13319:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"13327:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4388,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"13296:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4386,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:17","typeDescriptions":{}}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4385,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"13276:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4395,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"13349:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4402,"nodeType":"IfStatement","src":"13345:31:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4329,"id":4401,"nodeType":"Return","src":"13359:17:17"}},{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"13390:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"13390:12:17"},{"id":4411,"nodeType":"UncheckedBlock","src":"13416:271:17","statements":[{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"13659:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4408,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"13669:3:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4410,"nodeType":"ExpressionStatement","src":"13659:13:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"13236:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"13240:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4413,"initializationExpression":{"assignments":[4372],"declarations":[{"constant":false,"id":4372,"mutability":"mutable","name":"i","nameLocation":"13216:1:17","nodeType":"VariableDeclaration","scope":4413,"src":"13208:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"13220:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4374,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"13228:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:17"},"loopExpression":{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:17","subExpression":{"id":4380,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"13247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ExpressionStatement","src":"13245:3:17"},"nodeType":"ForStatement","src":"13203:494:17"},{"expression":{"components":[{"hexValue":"74727565","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"13720:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4329,"id":4417,"nodeType":"Return","src":"13706:21:17"}]},"documentation":{"id":4317,"nodeType":"StructuredDocumentation","src":"12450:227:17","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:17","nodeType":"FunctionDefinition","parameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"input","nameLocation":"12746:5:17","nodeType":"VariableDeclaration","scope":4419,"src":"12732:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4318,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"begin","nameLocation":"12769:5:17","nodeType":"VariableDeclaration","scope":4419,"src":"12761:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4323,"mutability":"mutable","name":"end","nameLocation":"12792:3:17","nodeType":"VariableDeclaration","scope":4419,"src":"12784:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:17"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"success","nameLocation":"12829:7:17","nodeType":"VariableDeclaration","scope":4419,"src":"12824:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4325,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"value","nameLocation":"12846:5:17","nodeType":"VariableDeclaration","scope":4419,"src":"12838:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:17"},"scope":4833,"src":"12682:1052:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4437,"nodeType":"Block","src":"14032:67:17","statements":[{"expression":{"arguments":[{"id":4428,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"14062:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4432,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"14078:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4430,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:17","typeDescriptions":{}}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:17","memberName":"length","nodeType":"MemberAccess","src":"14072:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4427,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4438,4469],"referencedDeclaration":4469,"src":"14049:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4426,"id":4436,"nodeType":"Return","src":"14042:50:17"}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"13740:212:17","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:17","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"input","nameLocation":"13993:5:17","nodeType":"VariableDeclaration","scope":4438,"src":"13979:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4421,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:17"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"14023:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:17"},"scope":4833,"src":"13957:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4468,"nodeType":"Block","src":"14472:165:17","statements":[{"assignments":[4451,4453],"declarations":[{"constant":false,"id":4451,"mutability":"mutable","name":"success","nameLocation":"14488:7:17","nodeType":"VariableDeclaration","scope":4468,"src":"14483:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4450,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4453,"mutability":"mutable","name":"value","nameLocation":"14505:5:17","nodeType":"VariableDeclaration","scope":4468,"src":"14497:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4452,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4459,"initialValue":{"arguments":[{"id":4455,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"14530:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4456,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"14537:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4457,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"14544:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4454,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4490,4594],"referencedDeclaration":4594,"src":"14514:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:17"},{"condition":{"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:17","subExpression":{"id":4460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"14563:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4465,"nodeType":"IfStatement","src":"14558:50:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4462,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"14579:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4464,"nodeType":"RevertStatement","src":"14572:36:17"}},{"expression":{"id":4466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"14625:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4449,"id":4467,"nodeType":"Return","src":"14618:12:17"}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"14105:259:17","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4469,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:17","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"input","nameLocation":"14405:5:17","nodeType":"VariableDeclaration","scope":4469,"src":"14391:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4440,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"begin","nameLocation":"14420:5:17","nodeType":"VariableDeclaration","scope":4469,"src":"14412:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"end","nameLocation":"14435:3:17","nodeType":"VariableDeclaration","scope":4469,"src":"14427:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:17"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4469,"src":"14463:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4447,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:17"},"scope":4833,"src":"14369:268:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4489,"nodeType":"Block","src":"14944:70:17","statements":[{"expression":{"arguments":[{"id":4480,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"14977:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4484,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"14993:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4482,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:17","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:17","memberName":"length","nodeType":"MemberAccess","src":"14987:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4490,4594],"referencedDeclaration":4594,"src":"14961:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4478,"id":4488,"nodeType":"Return","src":"14954:53:17"}]},"documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"14643:198:17","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:17","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"input","nameLocation":"14885:5:17","nodeType":"VariableDeclaration","scope":4490,"src":"14871:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4471,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:17"},"returnParameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"success","nameLocation":"14920:7:17","nodeType":"VariableDeclaration","scope":4490,"src":"14915:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4474,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"value","nameLocation":"14937:5:17","nodeType":"VariableDeclaration","scope":4490,"src":"14929:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4476,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:17"},"scope":4833,"src":"14846:168:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4593,"nodeType":"Block","src":"15407:733:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"15421:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4507,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"15433:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4505,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:17","typeDescriptions":{}}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:17","memberName":"length","nodeType":"MemberAccess","src":"15427:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4511,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"15450:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4512,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"15458:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"15417:72:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4516,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:17","typeDescriptions":{}}},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4503,"id":4521,"nodeType":"Return","src":"15463:26:17"}},{"assignments":[4524],"declarations":[{"constant":false,"id":4524,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:17","nodeType":"VariableDeclaration","scope":4593,"src":"15500:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4523,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4547,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"15518:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4526,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"15524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4536,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"15574:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4534,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:17","typeDescriptions":{}}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4538,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"15582:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4533,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"15545:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4531,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:17","typeDescriptions":{}}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4541,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:17","typeDescriptions":{}}},"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:17"},{"assignments":[4549],"declarations":[{"constant":false,"id":4549,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:17","nodeType":"VariableDeclaration","scope":4593,"src":"15686:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4557,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:17","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4551,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"15716:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"15716:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"15803:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4559,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"15809:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4561,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"15818:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4591,"nodeType":"Block","src":"16083:51:17","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4585,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:17","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4503,"id":4590,"nodeType":"Return","src":"16097:26:17"}]},"id":4592,"nodeType":"IfStatement","src":"15799:335:17","trueBody":{"id":4583,"nodeType":"Block","src":"15834:243:17","statements":[{"assignments":[4564,4566],"declarations":[{"constant":false,"id":4564,"mutability":"mutable","name":"s","nameLocation":"15955:1:17","nodeType":"VariableDeclaration","scope":4583,"src":"15950:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4563,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"v","nameLocation":"15966:1:17","nodeType":"VariableDeclaration","scope":4583,"src":"15958:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4572,"initialValue":{"arguments":[{"id":4568,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"16003:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4569,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"16010:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4570,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"16017:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4567,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"15971:31:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:17"},{"expression":{"components":[{"id":4573,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"16043:1:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4578,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"16062:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4576,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:17","typeDescriptions":{}}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4574,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:17","typeDescriptions":{}}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4503,"id":4582,"nodeType":"Return","src":"16035:31:17"}]}}]},"documentation":{"id":4491,"nodeType":"StructuredDocumentation","src":"15020:226:17","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4594,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:17","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"input","nameLocation":"15299:5:17","nodeType":"VariableDeclaration","scope":4594,"src":"15285:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4492,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4495,"mutability":"mutable","name":"begin","nameLocation":"15322:5:17","nodeType":"VariableDeclaration","scope":4594,"src":"15314:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"end","nameLocation":"15345:3:17","nodeType":"VariableDeclaration","scope":4594,"src":"15337:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:17"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"success","nameLocation":"15383:7:17","nodeType":"VariableDeclaration","scope":4594,"src":"15378:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4499,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4502,"mutability":"mutable","name":"value","nameLocation":"15400:5:17","nodeType":"VariableDeclaration","scope":4594,"src":"15392:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4501,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:17"},"scope":4833,"src":"15251:889:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4653,"nodeType":"Block","src":"16209:461:17","statements":[{"assignments":[4602],"declarations":[{"constant":false,"id":4602,"mutability":"mutable","name":"value","nameLocation":"16225:5:17","nodeType":"VariableDeclaration","scope":4653,"src":"16219:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4601,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4607,"initialValue":{"arguments":[{"id":4605,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"16239:3:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4603,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:17","typeDescriptions":{}}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:17"},{"id":4650,"nodeType":"UncheckedBlock","src":"16403:238:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16431:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:17","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16445:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:17","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16491:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16505:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:17","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16552:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16566:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:17","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4642,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:17","memberName":"max","nodeType":"MemberAccess","src":"16615:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4600,"id":4646,"nodeType":"Return","src":"16608:22:17"},"id":4647,"nodeType":"IfStatement","src":"16548:82:17","trueBody":{"expression":{"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16578:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:17","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4640,"nodeType":"ExpressionStatement","src":"16578:11:17"}},"id":4648,"nodeType":"IfStatement","src":"16487:143:17","trueBody":{"expression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16518:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:17","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4629,"nodeType":"ExpressionStatement","src":"16518:11:17"}},"id":4649,"nodeType":"IfStatement","src":"16427:203:17","trueBody":{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16457:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4618,"nodeType":"ExpressionStatement","src":"16457:11:17"}}]},{"expression":{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"16658:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4600,"id":4652,"nodeType":"Return","src":"16651:12:17"}]},"id":4654,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:17","nodeType":"FunctionDefinition","parameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"chr","nameLocation":"16175:3:17","nodeType":"VariableDeclaration","scope":4654,"src":"16168:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4595,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:17"},"returnParameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4654,"src":"16202:5:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4598,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:17"},"scope":4833,"src":"16146:524:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4819,"nodeType":"Block","src":"17336:1331:17","statements":[{"assignments":[4663],"declarations":[{"constant":false,"id":4663,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:17","nodeType":"VariableDeclaration","scope":4819,"src":"17346:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4668,"initialValue":{"arguments":[{"id":4666,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"17374:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4664,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:17","typeDescriptions":{}}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:17"},{"assignments":[4670],"declarations":[{"constant":false,"id":4670,"mutability":"mutable","name":"output","nameLocation":"17403:6:17","nodeType":"VariableDeclaration","scope":4819,"src":"17390:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4669,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4678,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4674,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"17426:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:17","memberName":"length","nodeType":"MemberAccess","src":"17426:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4671,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:17"},{"assignments":[4680],"declarations":[{"constant":false,"id":4680,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:17","nodeType":"VariableDeclaration","scope":4819,"src":"17473:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4682,"initialValue":{"hexValue":"30","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:17"},{"body":{"id":4811,"nodeType":"Block","src":"17548:854:17","statements":[{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"char","nameLocation":"17569:4:17","nodeType":"VariableDeclaration","scope":4811,"src":"17562:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4693,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4702,"initialValue":{"arguments":[{"arguments":[{"id":4698,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"17606:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4699,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"17614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4697,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"17583:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4695,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:17","typeDescriptions":{}}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:17"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"17637:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4707,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"17672:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4705,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:17","typeDescriptions":{}}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4809,"nodeType":"Block","src":"18330:62:17","statements":[{"expression":{"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4802,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18348:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4805,"indexExpression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:17","subExpression":{"id":4803,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"18355:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4806,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"18373:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4808,"nodeType":"ExpressionStatement","src":"18348:29:17"}]},"id":4810,"nodeType":"IfStatement","src":"17631:761:17","trueBody":{"id":4801,"nodeType":"Block","src":"17687:637:17","statements":[{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4716,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"17705:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4719,"indexExpression":{"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:17","subExpression":{"id":4717,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"17712:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4722,"nodeType":"ExpressionStatement","src":"17705:29:17"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"17756:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"17825:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:17","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4743,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"17894:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"17963:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:17","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"18032:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:17","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"18101:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:17","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"18171:4:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4794,"nodeType":"IfStatement","src":"18167:143:17","trueBody":{"id":4793,"nodeType":"Block","src":"18185:125:17","statements":[{"expression":{"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4786,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18263:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4789,"indexExpression":{"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:17","subExpression":{"id":4787,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"18270:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4792,"nodeType":"ExpressionStatement","src":"18263:28:17"}]}},"id":4795,"nodeType":"IfStatement","src":"18097:213:17","trueBody":{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4776,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18115:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4779,"indexExpression":{"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:17","subExpression":{"id":4777,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"18122:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4782,"nodeType":"ExpressionStatement","src":"18115:29:17"}},"id":4796,"nodeType":"IfStatement","src":"18028:282:17","trueBody":{"expression":{"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4766,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18046:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4769,"indexExpression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:17","subExpression":{"id":4767,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"18053:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4772,"nodeType":"ExpressionStatement","src":"18046:28:17"}},"id":4797,"nodeType":"IfStatement","src":"17959:351:17","trueBody":{"expression":{"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4756,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"17977:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4759,"indexExpression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:17","subExpression":{"id":4757,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"17984:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4762,"nodeType":"ExpressionStatement","src":"17977:28:17"}},"id":4798,"nodeType":"IfStatement","src":"17890:420:17","trueBody":{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4746,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"17908:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4749,"indexExpression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:17","subExpression":{"id":4747,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"17915:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4752,"nodeType":"ExpressionStatement","src":"17908:28:17"}},"id":4799,"nodeType":"IfStatement","src":"17821:489:17","trueBody":{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4736,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"17839:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4739,"indexExpression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:17","subExpression":{"id":4737,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"17846:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4742,"nodeType":"ExpressionStatement","src":"17839:28:17"}},"id":4800,"nodeType":"IfStatement","src":"17752:558:17","trueBody":{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4726,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"17770:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4729,"indexExpression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:17","subExpression":{"id":4727,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"17777:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4732,"nodeType":"ExpressionStatement","src":"17770:28:17"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"17524:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4687,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"17528:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:17","memberName":"length","nodeType":"MemberAccess","src":"17528:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4812,"initializationExpression":{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"i","nameLocation":"17521:1:17","nodeType":"VariableDeclaration","scope":4812,"src":"17513:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4685,"nodeType":"VariableDeclarationStatement","src":"17513:9:17"},"loopExpression":{"expression":{"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:17","subExpression":{"id":4690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"17545:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4692,"nodeType":"ExpressionStatement","src":"17543:3:17"},"nodeType":"ForStatement","src":"17508:894:17"},{"AST":{"nodeType":"YulBlock","src":"18500:129:17","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:17"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:17"},"nodeType":"YulFunctionCall","src":"18514:28:17"},"nodeType":"YulExpressionStatement","src":"18514:28:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:17","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:17","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:17","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:17"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:17","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:17"},"nodeType":"YulFunctionCall","src":"18594:21:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:17"},"nodeType":"YulFunctionCall","src":"18587:29:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:17"},"nodeType":"YulFunctionCall","src":"18580:37:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:17"},"nodeType":"YulFunctionCall","src":"18568:50:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:17"},"nodeType":"YulFunctionCall","src":"18555:64:17"},"nodeType":"YulExpressionStatement","src":"18555:64:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4670,"isOffset":false,"isSlot":false,"src":"18521:6:17","valueSize":1},{"declaration":4670,"isOffset":false,"isSlot":false,"src":"18572:6:17","valueSize":1},{"declaration":4680,"isOffset":false,"isSlot":false,"src":"18529:12:17","valueSize":1},{"declaration":4680,"isOffset":false,"isSlot":false,"src":"18598:12:17","valueSize":1}],"flags":["memory-safe"],"id":4813,"nodeType":"InlineAssembly","src":"18475:154:17"},{"expression":{"arguments":[{"id":4816,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"18653:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4814,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:17","typeDescriptions":{}}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4661,"id":4818,"nodeType":"Return","src":"18639:21:17"}]},"documentation":{"id":4655,"nodeType":"StructuredDocumentation","src":"16676:576:17","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:17","nodeType":"FunctionDefinition","parameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"input","nameLocation":"17291:5:17","nodeType":"VariableDeclaration","scope":4820,"src":"17277:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4656,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:17"},"returnParameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4820,"src":"17321:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4659,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:17"},"scope":4833,"src":"17257:1410:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4831,"nodeType":"Block","src":"19052:225:17","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:17","statements":[{"nodeType":"YulAssignment","src":"19215:46:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:17"},"nodeType":"YulFunctionCall","src":"19234:17:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:17"},"nodeType":"YulFunctionCall","src":"19230:30:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:17"},"nodeType":"YulFunctionCall","src":"19224:37:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4823,"isOffset":false,"isSlot":false,"src":"19238:6:17","valueSize":1},{"declaration":4825,"isOffset":false,"isSlot":false,"src":"19253:6:17","valueSize":1},{"declaration":4828,"isOffset":false,"isSlot":false,"src":"19215:5:17","valueSize":1}],"flags":["memory-safe"],"id":4830,"nodeType":"InlineAssembly","src":"19176:95:17"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"18673:268:17","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4832,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:17","nodeType":"FunctionDefinition","parameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:17","nodeType":"VariableDeclaration","scope":4832,"src":"18978:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4822,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"offset","nameLocation":"19007:6:17","nodeType":"VariableDeclaration","scope":4832,"src":"18999:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:17"},"returnParameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"19045:5:17","nodeType":"VariableDeclaration","scope":4832,"src":"19037:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:17"},"scope":4833,"src":"18946:331:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4834,"src":"297:18982:17","usedErrors":[3491,3494,3497],"usedEvents":[]}],"src":"101:19179:17"},"id":17},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4857],"IERC165":[4869]},"id":4858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4835,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4858,"sourceUnit":4870,"src":"140:38:18","symbolAliases":[{"foreign":{"id":4836,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"148:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4839,"name":"IERC165","nameLocations":["688:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"688:7:18"},"id":4840,"nodeType":"InheritanceSpecifier","src":"688:7:18"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"180:479:18","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4857,"linearizedBaseContracts":[4857,4869],"name":"ERC165","nameLocation":"678:6:18","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4868],"body":{"id":4855,"nodeType":"Block","src":"812:64:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"829:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4850,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4869_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4869_$","typeString":"type(contract IERC165)"}],"id":4849,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4869","typeString":"type(contract IERC165)"}},"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:18","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4847,"id":4854,"nodeType":"Return","src":"822:47:18"}]},"documentation":{"id":4841,"nodeType":"StructuredDocumentation","src":"702:23:18","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4856,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:18","nodeType":"FunctionDefinition","parameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:18","nodeType":"VariableDeclaration","scope":4856,"src":"757:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4842,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:18"},"returnParameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4856,"src":"806:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4845,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:18"},"scope":4857,"src":"730:146:18","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4858,"src":"660:218:18","usedErrors":[],"usedEvents":[]}],"src":"114:765:18"},"id":18},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4869]},"id":4870,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4859,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4860,"nodeType":"StructuredDocumentation","src":"142:280:19","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4869,"linearizedBaseContracts":[4869],"name":"IERC165","nameLocation":"433:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"447:340:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4868,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:19","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:19","nodeType":"VariableDeclaration","scope":4868,"src":"819:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4862,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:19"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4868,"src":"862:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4865,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:19"},"scope":4869,"src":"792:76:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4870,"src":"423:447:19","usedErrors":[],"usedEvents":[]}],"src":"115:756:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6490],"Panic":[3177],"SafeCast":[8255]},"id":6491,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4871,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6491,"sourceUnit":3178,"src":"129:35:20","symbolAliases":[{"foreign":{"id":4872,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"137:5:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6491,"sourceUnit":8256,"src":"165:40:20","symbolAliases":[{"foreign":{"id":4874,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"173:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"207:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6490,"linearizedBaseContracts":[6490],"name":"Math","nameLocation":"289:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4881,"members":[{"id":4877,"name":"Floor","nameLocation":"324:5:20","nodeType":"EnumValue","src":"324:5:20"},{"id":4878,"name":"Ceil","nameLocation":"367:4:20","nodeType":"EnumValue","src":"367:4:20"},{"id":4879,"name":"Trunc","nameLocation":"409:5:20","nodeType":"EnumValue","src":"409:5:20"},{"id":4880,"name":"Expand","nameLocation":"439:6:20","nodeType":"EnumValue","src":"439:6:20"}],"name":"Rounding","nameLocation":"305:8:20","nodeType":"EnumDefinition","src":"300:169:20"},{"body":{"id":4894,"nodeType":"Block","src":"731:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:20","statements":[{"nodeType":"YulAssignment","src":"780:16:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:20"},"nodeType":"YulFunctionCall","src":"787:9:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:20"}]},{"nodeType":"YulAssignment","src":"809:18:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:20"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:20"},"nodeType":"YulFunctionCall","src":"817:10:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4884,"isOffset":false,"isSlot":false,"src":"791:1:20","valueSize":1},{"declaration":4884,"isOffset":false,"isSlot":false,"src":"825:1:20","valueSize":1},{"declaration":4886,"isOffset":false,"isSlot":false,"src":"794:1:20","valueSize":1},{"declaration":4889,"isOffset":false,"isSlot":false,"src":"809:4:20","valueSize":1},{"declaration":4891,"isOffset":false,"isSlot":false,"src":"780:3:20","valueSize":1},{"declaration":4891,"isOffset":false,"isSlot":false,"src":"820:3:20","valueSize":1}],"flags":["memory-safe"],"id":4893,"nodeType":"InlineAssembly","src":"741:96:20"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"475:163:20","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4895,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:20","nodeType":"FunctionDefinition","parameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"a","nameLocation":"667:1:20","nodeType":"VariableDeclaration","scope":4895,"src":"659:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4886,"mutability":"mutable","name":"b","nameLocation":"678:1:20","nodeType":"VariableDeclaration","scope":4895,"src":"670:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:20"},"returnParameters":{"id":4892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"high","nameLocation":"712:4:20","nodeType":"VariableDeclaration","scope":4895,"src":"704:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4891,"mutability":"mutable","name":"low","nameLocation":"726:3:20","nodeType":"VariableDeclaration","scope":4895,"src":"718:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4890,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:20"},"scope":6490,"src":"643:200:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4908,"nodeType":"Block","src":"1115:462:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:20"},"nodeType":"YulFunctionCall","src":"1474:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:20"},"nodeType":"YulFunctionCall","src":"1461:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:20","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:20"},"nodeType":"YulFunctionCall","src":"1501:9:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:20"}]},{"nodeType":"YulAssignment","src":"1523:38:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:20"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:20"},"nodeType":"YulFunctionCall","src":"1535:12:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:20"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:20"},"nodeType":"YulFunctionCall","src":"1549:11:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:20"},"nodeType":"YulFunctionCall","src":"1531:30:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4898,"isOffset":false,"isSlot":false,"src":"1468:1:20","valueSize":1},{"declaration":4898,"isOffset":false,"isSlot":false,"src":"1505:1:20","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"1471:1:20","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"1508:1:20","valueSize":1},{"declaration":4903,"isOffset":false,"isSlot":false,"src":"1523:4:20","valueSize":1},{"declaration":4905,"isOffset":false,"isSlot":false,"src":"1494:3:20","valueSize":1},{"declaration":4905,"isOffset":false,"isSlot":false,"src":"1543:3:20","valueSize":1},{"declaration":4905,"isOffset":false,"isSlot":false,"src":"1556:3:20","valueSize":1}],"flags":["memory-safe"],"id":4907,"nodeType":"InlineAssembly","src":"1412:159:20"}]},"documentation":{"id":4896,"nodeType":"StructuredDocumentation","src":"849:173:20","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4909,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:20","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"a","nameLocation":"1051:1:20","nodeType":"VariableDeclaration","scope":4909,"src":"1043:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4900,"mutability":"mutable","name":"b","nameLocation":"1062:1:20","nodeType":"VariableDeclaration","scope":4909,"src":"1054:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:20"},"returnParameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"high","nameLocation":"1096:4:20","nodeType":"VariableDeclaration","scope":4909,"src":"1088:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4905,"mutability":"mutable","name":"low","nameLocation":"1110:3:20","nodeType":"VariableDeclaration","scope":4909,"src":"1102:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:20"},"scope":6490,"src":"1027:550:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4943,"nodeType":"Block","src":"1784:149:20","statements":[{"id":4942,"nodeType":"UncheckedBlock","src":"1794:133:20","statements":[{"assignments":[4922],"declarations":[{"constant":false,"id":4922,"mutability":"mutable","name":"c","nameLocation":"1826:1:20","nodeType":"VariableDeclaration","scope":4942,"src":"1818:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4926,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"1830:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"1834:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:20"},{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"1849:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4928,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"1859:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"1864:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"ExpressionStatement","src":"1849:16:20"},{"expression":{"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"1879:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4934,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"1888:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4937,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"1908:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"1892:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"1892:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4941,"nodeType":"ExpressionStatement","src":"1879:37:20"}]}]},"documentation":{"id":4910,"nodeType":"StructuredDocumentation","src":"1583:105:20","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4944,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:20","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"a","nameLocation":"1717:1:20","nodeType":"VariableDeclaration","scope":4944,"src":"1709:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4914,"mutability":"mutable","name":"b","nameLocation":"1728:1:20","nodeType":"VariableDeclaration","scope":4944,"src":"1720:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:20"},"returnParameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"success","nameLocation":"1759:7:20","nodeType":"VariableDeclaration","scope":4944,"src":"1754:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4916,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4919,"mutability":"mutable","name":"result","nameLocation":"1776:6:20","nodeType":"VariableDeclaration","scope":4944,"src":"1768:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:20"},"scope":6490,"src":"1693:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4978,"nodeType":"Block","src":"2143:149:20","statements":[{"id":4977,"nodeType":"UncheckedBlock","src":"2153:133:20","statements":[{"assignments":[4957],"declarations":[{"constant":false,"id":4957,"mutability":"mutable","name":"c","nameLocation":"2185:1:20","nodeType":"VariableDeclaration","scope":4977,"src":"2177:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4961,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"2189:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"2193:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:20"},{"expression":{"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4962,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"2208:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"2218:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"2223:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"ExpressionStatement","src":"2208:16:20"},{"expression":{"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"2238:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"2247:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4972,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"2267:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"2251:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"2251:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4976,"nodeType":"ExpressionStatement","src":"2238:37:20"}]}]},"documentation":{"id":4945,"nodeType":"StructuredDocumentation","src":"1939:108:20","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:20","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"a","nameLocation":"2076:1:20","nodeType":"VariableDeclaration","scope":4979,"src":"2068:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"b","nameLocation":"2087:1:20","nodeType":"VariableDeclaration","scope":4979,"src":"2079:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:20"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"success","nameLocation":"2118:7:20","nodeType":"VariableDeclaration","scope":4979,"src":"2113:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4951,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"result","nameLocation":"2135:6:20","nodeType":"VariableDeclaration","scope":4979,"src":"2127:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:20"},"scope":6490,"src":"2052:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5008,"nodeType":"Block","src":"2505:391:20","statements":[{"id":5007,"nodeType":"UncheckedBlock","src":"2515:375:20","statements":[{"assignments":[4992],"declarations":[{"constant":false,"id":4992,"mutability":"mutable","name":"c","nameLocation":"2547:1:20","nodeType":"VariableDeclaration","scope":5007,"src":"2539:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4996,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"2551:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"2555:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:20"},{"AST":{"nodeType":"YulBlock","src":"2595:188:20","statements":[{"nodeType":"YulAssignment","src":"2727:42:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:20"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:20"},"nodeType":"YulFunctionCall","src":"2744:9:20"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:20"},"nodeType":"YulFunctionCall","src":"2741:16:20"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:20"},"nodeType":"YulFunctionCall","src":"2759:9:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:20"},"nodeType":"YulFunctionCall","src":"2738:31:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4982,"isOffset":false,"isSlot":false,"src":"2751:1:20","valueSize":1},{"declaration":4982,"isOffset":false,"isSlot":false,"src":"2766:1:20","valueSize":1},{"declaration":4984,"isOffset":false,"isSlot":false,"src":"2755:1:20","valueSize":1},{"declaration":4992,"isOffset":false,"isSlot":false,"src":"2748:1:20","valueSize":1},{"declaration":4987,"isOffset":false,"isSlot":false,"src":"2727:7:20","valueSize":1}],"flags":["memory-safe"],"id":4997,"nodeType":"InlineAssembly","src":"2570:213:20"},{"expression":{"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"2842:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"2851:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5002,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"2871:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5000,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"2855:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"2855:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5006,"nodeType":"ExpressionStatement","src":"2842:37:20"}]}]},"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"2298:111:20","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5009,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:20","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"a","nameLocation":"2438:1:20","nodeType":"VariableDeclaration","scope":5009,"src":"2430:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"b","nameLocation":"2449:1:20","nodeType":"VariableDeclaration","scope":5009,"src":"2441:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:20"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"success","nameLocation":"2480:7:20","nodeType":"VariableDeclaration","scope":5009,"src":"2475:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4986,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"result","nameLocation":"2497:6:20","nodeType":"VariableDeclaration","scope":5009,"src":"2489:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:20"},"scope":6490,"src":"2414:482:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"3111:231:20","statements":[{"id":5028,"nodeType":"UncheckedBlock","src":"3121:215:20","statements":[{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5021,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"3145:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"3155:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"ExpressionStatement","src":"3145:15:20"},{"AST":{"nodeType":"YulBlock","src":"3199:127:20","statements":[{"nodeType":"YulAssignment","src":"3293:19:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:20"},"nodeType":"YulFunctionCall","src":"3303:9:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5012,"isOffset":false,"isSlot":false,"src":"3307:1:20","valueSize":1},{"declaration":5014,"isOffset":false,"isSlot":false,"src":"3310:1:20","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"3293:6:20","valueSize":1}],"flags":["memory-safe"],"id":5027,"nodeType":"InlineAssembly","src":"3174:152:20"}]}]},"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"2902:113:20","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:20","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"a","nameLocation":"3044:1:20","nodeType":"VariableDeclaration","scope":5030,"src":"3036:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"b","nameLocation":"3055:1:20","nodeType":"VariableDeclaration","scope":5030,"src":"3047:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:20"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"success","nameLocation":"3086:7:20","nodeType":"VariableDeclaration","scope":5030,"src":"3081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5016,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5019,"mutability":"mutable","name":"result","nameLocation":"3103:6:20","nodeType":"VariableDeclaration","scope":5030,"src":"3095:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:20"},"scope":6490,"src":"3020:322:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"3567:231:20","statements":[{"id":5049,"nodeType":"UncheckedBlock","src":"3577:215:20","statements":[{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"3601:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"3611:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"ExpressionStatement","src":"3601:15:20"},{"AST":{"nodeType":"YulBlock","src":"3655:127:20","statements":[{"nodeType":"YulAssignment","src":"3749:19:20","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:20"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:20"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:20"},"nodeType":"YulFunctionCall","src":"3759:9:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5033,"isOffset":false,"isSlot":false,"src":"3763:1:20","valueSize":1},{"declaration":5035,"isOffset":false,"isSlot":false,"src":"3766:1:20","valueSize":1},{"declaration":5040,"isOffset":false,"isSlot":false,"src":"3749:6:20","valueSize":1}],"flags":["memory-safe"],"id":5048,"nodeType":"InlineAssembly","src":"3630:152:20"}]}]},"documentation":{"id":5031,"nodeType":"StructuredDocumentation","src":"3348:123:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:20","nodeType":"FunctionDefinition","parameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"a","nameLocation":"3500:1:20","nodeType":"VariableDeclaration","scope":5051,"src":"3492:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5032,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5035,"mutability":"mutable","name":"b","nameLocation":"3511:1:20","nodeType":"VariableDeclaration","scope":5051,"src":"3503:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:20"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"success","nameLocation":"3542:7:20","nodeType":"VariableDeclaration","scope":5051,"src":"3537:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5037,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5040,"mutability":"mutable","name":"result","nameLocation":"3559:6:20","nodeType":"VariableDeclaration","scope":5051,"src":"3551:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:20"},"scope":6490,"src":"3476:322:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5080,"nodeType":"Block","src":"3989:122:20","statements":[{"assignments":[5062,5064],"declarations":[{"constant":false,"id":5062,"mutability":"mutable","name":"success","nameLocation":"4005:7:20","nodeType":"VariableDeclaration","scope":5080,"src":"4000:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5061,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5064,"mutability":"mutable","name":"result","nameLocation":"4022:6:20","nodeType":"VariableDeclaration","scope":5080,"src":"4014:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5069,"initialValue":{"arguments":[{"id":5066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"4039:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"4042:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5065,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"4032:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:20"},{"expression":{"arguments":[{"id":5071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"4069:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"4078:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5073,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:20","memberName":"max","nodeType":"MemberAccess","src":"4086:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5070,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"4061:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5060,"id":5079,"nodeType":"Return","src":"4054:50:20"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"3804:103:20","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5081,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:20","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"a","nameLocation":"3943:1:20","nodeType":"VariableDeclaration","scope":5081,"src":"3935:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5056,"mutability":"mutable","name":"b","nameLocation":"3954:1:20","nodeType":"VariableDeclaration","scope":5081,"src":"3946:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5055,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:20"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5081,"src":"3980:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5058,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:20"},"scope":6490,"src":"3912:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5100,"nodeType":"Block","src":"4294:73:20","statements":[{"assignments":[null,5092],"declarations":[null,{"constant":false,"id":5092,"mutability":"mutable","name":"result","nameLocation":"4315:6:20","nodeType":"VariableDeclaration","scope":5100,"src":"4307:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5097,"initialValue":{"arguments":[{"id":5094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"4332:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"4335:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5093,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"4325:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:20"},{"expression":{"id":5098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"4354:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5090,"id":5099,"nodeType":"Return","src":"4347:13:20"}]},"documentation":{"id":5082,"nodeType":"StructuredDocumentation","src":"4117:95:20","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5101,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:20","nodeType":"FunctionDefinition","parameters":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"a","nameLocation":"4248:1:20","nodeType":"VariableDeclaration","scope":5101,"src":"4240:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5083,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5086,"mutability":"mutable","name":"b","nameLocation":"4259:1:20","nodeType":"VariableDeclaration","scope":5101,"src":"4251:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5085,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:20"},"returnParameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5101,"src":"4285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:20"},"scope":6490,"src":"4217:150:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5130,"nodeType":"Block","src":"4564:122:20","statements":[{"assignments":[5112,5114],"declarations":[{"constant":false,"id":5112,"mutability":"mutable","name":"success","nameLocation":"4580:7:20","nodeType":"VariableDeclaration","scope":5130,"src":"4575:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5111,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5114,"mutability":"mutable","name":"result","nameLocation":"4597:6:20","nodeType":"VariableDeclaration","scope":5130,"src":"4589:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5119,"initialValue":{"arguments":[{"id":5116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"4614:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5117,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"4617:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"4607:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:20"},{"expression":{"arguments":[{"id":5121,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"4644:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"4653:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5123,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:20","memberName":"max","nodeType":"MemberAccess","src":"4661:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"4636:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5110,"id":5129,"nodeType":"Return","src":"4629:50:20"}]},"documentation":{"id":5102,"nodeType":"StructuredDocumentation","src":"4373:109:20","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5131,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:20","nodeType":"FunctionDefinition","parameters":{"id":5107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"a","nameLocation":"4518:1:20","nodeType":"VariableDeclaration","scope":5131,"src":"4510:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5106,"mutability":"mutable","name":"b","nameLocation":"4529:1:20","nodeType":"VariableDeclaration","scope":5131,"src":"4521:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:20"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5131,"src":"4555:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:20"},"scope":6490,"src":"4487:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5157,"nodeType":"Block","src":"5158:207:20","statements":[{"id":5156,"nodeType":"UncheckedBlock","src":"5168:191:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"5306:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"5312:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"5316:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5150,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"5337:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5148,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"5321:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"5321:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5142,"id":5155,"nodeType":"Return","src":"5299:49:20"}]}]},"documentation":{"id":5132,"nodeType":"StructuredDocumentation","src":"4692:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5158,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:20","nodeType":"FunctionDefinition","parameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"condition","nameLocation":"5093:9:20","nodeType":"VariableDeclaration","scope":5158,"src":"5088:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5133,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5136,"mutability":"mutable","name":"a","nameLocation":"5112:1:20","nodeType":"VariableDeclaration","scope":5158,"src":"5104:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5138,"mutability":"mutable","name":"b","nameLocation":"5123:1:20","nodeType":"VariableDeclaration","scope":5158,"src":"5115:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:20"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5158,"src":"5149:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:20"},"scope":6490,"src":"5071:294:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5176,"nodeType":"Block","src":"5502:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"5527:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5170,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"5531:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"5534:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"5537:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"5519:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5167,"id":5175,"nodeType":"Return","src":"5512:27:20"}]},"documentation":{"id":5159,"nodeType":"StructuredDocumentation","src":"5371:59:20","text":" @dev Returns the largest of two numbers."},"id":5177,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:20","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5161,"mutability":"mutable","name":"a","nameLocation":"5456:1:20","nodeType":"VariableDeclaration","scope":5177,"src":"5448:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5160,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5163,"mutability":"mutable","name":"b","nameLocation":"5467:1:20","nodeType":"VariableDeclaration","scope":5177,"src":"5459:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:20"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5177,"src":"5493:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:20"},"scope":6490,"src":"5435:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5195,"nodeType":"Block","src":"5684:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"5709:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5189,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"5713:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"5716:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"5719:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5187,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"5701:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5186,"id":5194,"nodeType":"Return","src":"5694:27:20"}]},"documentation":{"id":5178,"nodeType":"StructuredDocumentation","src":"5552:60:20","text":" @dev Returns the smallest of two numbers."},"id":5196,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:20","nodeType":"FunctionDefinition","parameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"a","nameLocation":"5638:1:20","nodeType":"VariableDeclaration","scope":5196,"src":"5630:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5182,"mutability":"mutable","name":"b","nameLocation":"5649:1:20","nodeType":"VariableDeclaration","scope":5196,"src":"5641:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:20"},"returnParameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5196,"src":"5675:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:20"},"scope":6490,"src":"5617:111:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"5912:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5967:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5207,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"5971:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"5977:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"5981:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5205,"id":5217,"nodeType":"Return","src":"5959:28:20"}]},"documentation":{"id":5197,"nodeType":"StructuredDocumentation","src":"5734:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:20","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"a","nameLocation":"5866:1:20","nodeType":"VariableDeclaration","scope":5219,"src":"5858:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"b","nameLocation":"5877:1:20","nodeType":"VariableDeclaration","scope":5219,"src":"5869:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:20"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"5903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:20"},"scope":6490,"src":"5841:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5259,"nodeType":"Block","src":"6286:633:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"6300:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"6296:150:20","trueBody":{"id":5239,"nodeType":"Block","src":"6308:138:20","statements":[{"expression":{"arguments":[{"expression":{"id":5235,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"6412:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"6412:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5232,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"6400:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"6400:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5238,"nodeType":"ExpressionStatement","src":"6400:35:20"}]}},{"id":5258,"nodeType":"UncheckedBlock","src":"6829:84:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"6876:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5241,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"6860:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"6860:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"6887:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"6896:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5228,"id":5257,"nodeType":"Return","src":"6853:49:20"}]}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"6000:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:20","nodeType":"FunctionDefinition","parameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"a","nameLocation":"6240:1:20","nodeType":"VariableDeclaration","scope":5260,"src":"6232:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5224,"mutability":"mutable","name":"b","nameLocation":"6251:1:20","nodeType":"VariableDeclaration","scope":5260,"src":"6243:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5223,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:20"},"returnParameters":{"id":5228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"6277:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:20"},"scope":6490,"src":"6215:704:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5395,"nodeType":"Block","src":"7340:3585:20","statements":[{"id":5394,"nodeType":"UncheckedBlock","src":"7350:3569:20","statements":[{"assignments":[5273,5275],"declarations":[{"constant":false,"id":5273,"mutability":"mutable","name":"high","nameLocation":"7383:4:20","nodeType":"VariableDeclaration","scope":5394,"src":"7375:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5275,"mutability":"mutable","name":"low","nameLocation":"7397:3:20","nodeType":"VariableDeclaration","scope":5394,"src":"7389:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5274,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5280,"initialValue":{"arguments":[{"id":5277,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"7411:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5278,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"7414:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5276,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"7404:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"7498:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5289,"nodeType":"IfStatement","src":"7494:365:20","trueBody":{"id":5288,"nodeType":"Block","src":"7509:350:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"7827:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5285,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"7833:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5271,"id":5287,"nodeType":"Return","src":"7820:24:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"7969:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5291,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"7984:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5308,"nodeType":"IfStatement","src":"7965:142:20","trueBody":{"id":5307,"nodeType":"Block","src":"7990:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"8028:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5300,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"8046:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"8046:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5302,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"8070:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3140,"src":"8070:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5296,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"8020:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5293,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"8008:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8008:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5306,"nodeType":"ExpressionStatement","src":"8008:84:20"}]}},{"assignments":[5310],"declarations":[{"constant":false,"id":5310,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:20","nodeType":"VariableDeclaration","scope":5394,"src":"8359:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5311,"nodeType":"VariableDeclarationStatement","src":"8359:17:20"},{"AST":{"nodeType":"YulBlock","src":"8415:283:20","statements":[{"nodeType":"YulAssignment","src":"8484:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:20"},"nodeType":"YulFunctionCall","src":"8497:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:20"}]},{"nodeType":"YulAssignment","src":"8604:37:20","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:20"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:20"},"nodeType":"YulFunctionCall","src":"8622:18:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:20"},"nodeType":"YulFunctionCall","src":"8612:29:20"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:20"}]},{"nodeType":"YulAssignment","src":"8658:26:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:20"},"nodeType":"YulFunctionCall","src":"8665:19:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5267,"isOffset":false,"isSlot":false,"src":"8510:11:20","valueSize":1},{"declaration":5273,"isOffset":false,"isSlot":false,"src":"8604:4:20","valueSize":1},{"declaration":5273,"isOffset":false,"isSlot":false,"src":"8616:4:20","valueSize":1},{"declaration":5275,"isOffset":false,"isSlot":false,"src":"8636:3:20","valueSize":1},{"declaration":5275,"isOffset":false,"isSlot":false,"src":"8658:3:20","valueSize":1},{"declaration":5275,"isOffset":false,"isSlot":false,"src":"8669:3:20","valueSize":1},{"declaration":5310,"isOffset":false,"isSlot":false,"src":"8484:9:20","valueSize":1},{"declaration":5310,"isOffset":false,"isSlot":false,"src":"8625:9:20","valueSize":1},{"declaration":5310,"isOffset":false,"isSlot":false,"src":"8674:9:20","valueSize":1},{"declaration":5263,"isOffset":false,"isSlot":false,"src":"8504:1:20","valueSize":1},{"declaration":5265,"isOffset":false,"isSlot":false,"src":"8507:1:20","valueSize":1}],"flags":["memory-safe"],"id":5312,"nodeType":"InlineAssembly","src":"8390:308:20"},{"assignments":[5314],"declarations":[{"constant":false,"id":5314,"mutability":"mutable","name":"twos","nameLocation":"8910:4:20","nodeType":"VariableDeclaration","scope":5394,"src":"8902:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5321,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"8917:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5317,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"8936:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:20"},{"AST":{"nodeType":"YulBlock","src":"8987:359:20","statements":[{"nodeType":"YulAssignment","src":"9052:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:20"},"nodeType":"YulFunctionCall","src":"9067:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:20"}]},{"nodeType":"YulAssignment","src":"9153:21:20","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:20"},"nodeType":"YulFunctionCall","src":"9160:14:20"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:20"}]},{"nodeType":"YulAssignment","src":"9293:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:20"},"nodeType":"YulFunctionCall","src":"9309:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:20"},"nodeType":"YulFunctionCall","src":"9305:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:20"},"nodeType":"YulFunctionCall","src":"9301:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5267,"isOffset":false,"isSlot":false,"src":"9052:11:20","valueSize":1},{"declaration":5267,"isOffset":false,"isSlot":false,"src":"9071:11:20","valueSize":1},{"declaration":5275,"isOffset":false,"isSlot":false,"src":"9153:3:20","valueSize":1},{"declaration":5275,"isOffset":false,"isSlot":false,"src":"9164:3:20","valueSize":1},{"declaration":5314,"isOffset":false,"isSlot":false,"src":"9084:4:20","valueSize":1},{"declaration":5314,"isOffset":false,"isSlot":false,"src":"9169:4:20","valueSize":1},{"declaration":5314,"isOffset":false,"isSlot":false,"src":"9293:4:20","valueSize":1},{"declaration":5314,"isOffset":false,"isSlot":false,"src":"9316:4:20","valueSize":1},{"declaration":5314,"isOffset":false,"isSlot":false,"src":"9323:4:20","valueSize":1}],"flags":["memory-safe"],"id":5322,"nodeType":"InlineAssembly","src":"8962:384:20"},{"expression":{"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5323,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"9409:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"9416:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5325,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"9423:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5328,"nodeType":"ExpressionStatement","src":"9409:18:20"},{"assignments":[5330],"declarations":[{"constant":false,"id":5330,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:20","nodeType":"VariableDeclaration","scope":5394,"src":"9762:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5337,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5332,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"9785:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:20"},{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5338,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10018:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10033:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5341,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10047:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"10018:36:20"},{"expression":{"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5346,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10103:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5349,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10117:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5353,"nodeType":"ExpressionStatement","src":"10088:36:20"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10160:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10175:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5357,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"10160:36:20"},{"expression":{"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5362,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10231:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10246:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5365,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10260:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5369,"nodeType":"ExpressionStatement","src":"10231:36:20"},{"expression":{"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5370,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10304:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10319:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5373,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10333:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5377,"nodeType":"ExpressionStatement","src":"10304:36:20"},{"expression":{"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5378,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"10393:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5381,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10407:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5385,"nodeType":"ExpressionStatement","src":"10378:36:20"},{"expression":{"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"10859:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5387,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"10868:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5388,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"10874:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5391,"nodeType":"ExpressionStatement","src":"10859:22:20"},{"expression":{"id":5392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"10902:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5271,"id":5393,"nodeType":"Return","src":"10895:13:20"}]}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"6925:312:20","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5396,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:20","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"x","nameLocation":"7266:1:20","nodeType":"VariableDeclaration","scope":5396,"src":"7258:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5262,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5265,"mutability":"mutable","name":"y","nameLocation":"7277:1:20","nodeType":"VariableDeclaration","scope":5396,"src":"7269:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5267,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:20","nodeType":"VariableDeclaration","scope":5396,"src":"7280:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:20"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"result","nameLocation":"7332:6:20","nodeType":"VariableDeclaration","scope":5396,"src":"7324:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:20"},"scope":6490,"src":"7242:3683:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"11164:128:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5412,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"11188:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5413,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"11191:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5414,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"11194:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5411,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5396,5433],"referencedDeclaration":5396,"src":"11181:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5419,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5406,"src":"11242:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":5418,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"11225:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4881_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5422,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5399,"src":"11262:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5423,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"11265:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5424,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"11268:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5421,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"11209:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"11209:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5410,"id":5431,"nodeType":"Return","src":"11174:111:20"}]},"documentation":{"id":5397,"nodeType":"StructuredDocumentation","src":"10931:118:20","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:20","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"x","nameLocation":"11078:1:20","nodeType":"VariableDeclaration","scope":5433,"src":"11070:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5401,"mutability":"mutable","name":"y","nameLocation":"11089:1:20","nodeType":"VariableDeclaration","scope":5433,"src":"11081:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5400,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5403,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:20","nodeType":"VariableDeclaration","scope":5433,"src":"11092:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:20","nodeType":"VariableDeclaration","scope":5433,"src":"11113:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":5405,"nodeType":"UserDefinedTypeName","pathNode":{"id":5404,"name":"Rounding","nameLocations":["11113:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"11113:8:20"},"referencedDeclaration":4881,"src":"11113:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:20"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"11155:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:20"},"scope":6490,"src":"11054:238:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"11500:245:20","statements":[{"id":5481,"nodeType":"UncheckedBlock","src":"11510:229:20","statements":[{"assignments":[5446,5448],"declarations":[{"constant":false,"id":5446,"mutability":"mutable","name":"high","nameLocation":"11543:4:20","nodeType":"VariableDeclaration","scope":5481,"src":"11535:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5448,"mutability":"mutable","name":"low","nameLocation":"11557:3:20","nodeType":"VariableDeclaration","scope":5481,"src":"11549:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5447,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5453,"initialValue":{"arguments":[{"id":5450,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"11571:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5451,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"11574:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5449,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"11564:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5454,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11594:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5456,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"11607:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"nodeType":"IfStatement","src":"11590:86:20","trueBody":{"id":5466,"nodeType":"Block","src":"11610:66:20","statements":[{"expression":{"arguments":[{"expression":{"id":5462,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"11640:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:20","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3140,"src":"11640:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5459,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"11628:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"11628:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5465,"nodeType":"ExpressionStatement","src":"11628:33:20"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"11697:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5470,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"11712:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5475,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"11719:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5476,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"11726:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5444,"id":5480,"nodeType":"Return","src":"11689:39:20"}]}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"11298:111:20","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:20","nodeType":"FunctionDefinition","parameters":{"id":5441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"x","nameLocation":"11438:1:20","nodeType":"VariableDeclaration","scope":5483,"src":"11430:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5438,"mutability":"mutable","name":"y","nameLocation":"11449:1:20","nodeType":"VariableDeclaration","scope":5483,"src":"11441:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5437,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5440,"mutability":"mutable","name":"n","nameLocation":"11458:1:20","nodeType":"VariableDeclaration","scope":5483,"src":"11452:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5439,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:20"},"returnParameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"result","nameLocation":"11492:6:20","nodeType":"VariableDeclaration","scope":5483,"src":"11484:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5442,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:20"},"scope":6490,"src":"11414:331:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5521,"nodeType":"Block","src":"11963:113:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5499,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"11987:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5500,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"11990:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5501,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"11993:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5498,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5483,5522],"referencedDeclaration":5483,"src":"11980:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5506,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"12031:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":5505,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"12014:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4881_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"12051:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5510,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"12054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5512,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"12062:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5508,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5503,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"11998:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"11998:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5497,"id":5520,"nodeType":"Return","src":"11973:96:20"}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"11751:109:20","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5522,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:20","nodeType":"FunctionDefinition","parameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"x","nameLocation":"11889:1:20","nodeType":"VariableDeclaration","scope":5522,"src":"11881:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5488,"mutability":"mutable","name":"y","nameLocation":"11900:1:20","nodeType":"VariableDeclaration","scope":5522,"src":"11892:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"n","nameLocation":"11909:1:20","nodeType":"VariableDeclaration","scope":5522,"src":"11903:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5489,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5493,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:20","nodeType":"VariableDeclaration","scope":5522,"src":"11912:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":5492,"nodeType":"UserDefinedTypeName","pathNode":{"id":5491,"name":"Rounding","nameLocations":["11912:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"11912:8:20"},"referencedDeclaration":4881,"src":"11912:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:20"},"returnParameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5522,"src":"11954:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:20"},"scope":6490,"src":"11865:211:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5618,"nodeType":"Block","src":"12710:1849:20","statements":[{"id":5617,"nodeType":"UncheckedBlock","src":"12720:1833:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5532,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"12748:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"12744:20:20","trueBody":{"expression":{"hexValue":"30","id":5535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5531,"id":5536,"nodeType":"Return","src":"12756:8:20"}},{"assignments":[5539],"declarations":[{"constant":false,"id":5539,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:20","nodeType":"VariableDeclaration","scope":5617,"src":"13235:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5543,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"13255:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5541,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"13259:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:20"},{"assignments":[5545],"declarations":[{"constant":false,"id":5545,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:20","nodeType":"VariableDeclaration","scope":5617,"src":"13274:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5547,"initialValue":{"id":5546,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"13288:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:20"},{"assignments":[5549],"declarations":[{"constant":false,"id":5549,"mutability":"mutable","name":"x","nameLocation":"13432:1:20","nodeType":"VariableDeclaration","scope":5617,"src":"13425:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5548,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5551,"initialValue":{"hexValue":"30","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:20"},{"assignments":[5553],"declarations":[{"constant":false,"id":5553,"mutability":"mutable","name":"y","nameLocation":"13458:1:20","nodeType":"VariableDeclaration","scope":5617,"src":"13451:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5552,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5555,"initialValue":{"hexValue":"31","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:20"},{"body":{"id":5592,"nodeType":"Block","src":"13501:882:20","statements":[{"assignments":[5560],"declarations":[{"constant":false,"id":5560,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:20","nodeType":"VariableDeclaration","scope":5592,"src":"13519:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5559,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5564,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13538:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5562,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"13544:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:20"},{"expression":{"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5565,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13573:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5566,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"13578:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5567,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5568,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"13678:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5569,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13923:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"13929:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5571,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"13941:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5576,"nodeType":"ExpressionStatement","src":"13572:395:20"},{"expression":{"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5577,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"13987:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5578,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"13990:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5579,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5580,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"14072:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"14326:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"14330:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5585,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"14341:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5583,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:20","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:20","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5591,"nodeType":"ExpressionStatement","src":"13986:382:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5556,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"13485:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5593,"nodeType":"WhileStatement","src":"13478:905:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"14401:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5599,"nodeType":"IfStatement","src":"14397:22:20","trueBody":{"expression":{"hexValue":"30","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5531,"id":5598,"nodeType":"Return","src":"14411:8:20"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"14470:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"14477:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:20","subExpression":{"id":5607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"14490:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:20","typeDescriptions":{}}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5613,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"14502:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5611,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:20","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5600,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"14462:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5531,"id":5616,"nodeType":"Return","src":"14455:50:20"}]}]},"documentation":{"id":5523,"nodeType":"StructuredDocumentation","src":"12082:553:20","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5619,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:20","nodeType":"FunctionDefinition","parameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"a","nameLocation":"12664:1:20","nodeType":"VariableDeclaration","scope":5619,"src":"12656:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5524,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"n","nameLocation":"12675:1:20","nodeType":"VariableDeclaration","scope":5619,"src":"12667:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:20"},"returnParameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5619,"src":"12701:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:20"},"scope":6490,"src":"12640:1919:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5639,"nodeType":"Block","src":"15159:82:20","statements":[{"id":5638,"nodeType":"UncheckedBlock","src":"15169:66:20","statements":[{"expression":{"arguments":[{"id":5631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"15212:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"15215:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5635,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"15222:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5629,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"15200:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6490_$","typeString":"type(library Math)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:20","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5676,"src":"15200:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5628,"id":5637,"nodeType":"Return","src":"15193:31:20"}]}]},"documentation":{"id":5620,"nodeType":"StructuredDocumentation","src":"14565:514:20","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5640,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:20","nodeType":"FunctionDefinition","parameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"a","nameLocation":"15113:1:20","nodeType":"VariableDeclaration","scope":5640,"src":"15105:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"p","nameLocation":"15124:1:20","nodeType":"VariableDeclaration","scope":5640,"src":"15116:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:20"},"returnParameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5640,"src":"15150:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:20"},"scope":6490,"src":"15084:157:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5675,"nodeType":"Block","src":"16011:174:20","statements":[{"assignments":[5653,5655],"declarations":[{"constant":false,"id":5653,"mutability":"mutable","name":"success","nameLocation":"16027:7:20","nodeType":"VariableDeclaration","scope":5675,"src":"16022:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5652,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5655,"mutability":"mutable","name":"result","nameLocation":"16044:6:20","nodeType":"VariableDeclaration","scope":5675,"src":"16036:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5661,"initialValue":{"arguments":[{"id":5657,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5643,"src":"16064:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5658,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"16067:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5659,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"16070:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5656,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5700,5782],"referencedDeclaration":5700,"src":"16054:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:20"},{"condition":{"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:20","subExpression":{"id":5662,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"16087:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"16082:74:20","trueBody":{"id":5671,"nodeType":"Block","src":"16096:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":5667,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"16122:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"16122:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5664,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"16110:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"16110:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5670,"nodeType":"ExpressionStatement","src":"16110:35:20"}]}},{"expression":{"id":5673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"16172:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5651,"id":5674,"nodeType":"Return","src":"16165:13:20"}]},"documentation":{"id":5641,"nodeType":"StructuredDocumentation","src":"15247:678:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5676,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:20","nodeType":"FunctionDefinition","parameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"b","nameLocation":"15954:1:20","nodeType":"VariableDeclaration","scope":5676,"src":"15946:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5642,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5645,"mutability":"mutable","name":"e","nameLocation":"15965:1:20","nodeType":"VariableDeclaration","scope":5676,"src":"15957:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5647,"mutability":"mutable","name":"m","nameLocation":"15976:1:20","nodeType":"VariableDeclaration","scope":5676,"src":"15968:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5646,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:20"},"returnParameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5676,"src":"16002:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5649,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:20"},"scope":6490,"src":"15930:255:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5699,"nodeType":"Block","src":"17039:1493:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"17053:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"17049:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5689,"id":5696,"nodeType":"Return","src":"17061:17:20"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:20"},"nodeType":"YulFunctionCall","src":"17138:11:20"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:20"},"nodeType":"YulFunctionCall","src":"18050:17:20"},"nodeType":"YulExpressionStatement","src":"18050:17:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:20"},"nodeType":"YulFunctionCall","src":"18087:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:20"},"nodeType":"YulFunctionCall","src":"18080:28:20"},"nodeType":"YulExpressionStatement","src":"18080:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:20"},"nodeType":"YulFunctionCall","src":"18128:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:20","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:20"},"nodeType":"YulFunctionCall","src":"18121:28:20"},"nodeType":"YulExpressionStatement","src":"18121:28:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:20"},"nodeType":"YulFunctionCall","src":"18169:14:20"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:20"},"nodeType":"YulFunctionCall","src":"18162:25:20"},"nodeType":"YulExpressionStatement","src":"18162:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:20"},"nodeType":"YulFunctionCall","src":"18207:14:20"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:20"},"nodeType":"YulFunctionCall","src":"18200:25:20"},"nodeType":"YulExpressionStatement","src":"18200:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:20"},"nodeType":"YulFunctionCall","src":"18245:14:20"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:20"},"nodeType":"YulFunctionCall","src":"18238:25:20"},"nodeType":"YulExpressionStatement","src":"18238:25:20"},{"nodeType":"YulAssignment","src":"18425:57:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:20"},"nodeType":"YulFunctionCall","src":"18447:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:20","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:20","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:20","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:20","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:20"},"nodeType":"YulFunctionCall","src":"18436:46:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:20"}]},{"nodeType":"YulAssignment","src":"18495:21:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:20","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:20"},"nodeType":"YulFunctionCall","src":"18505:11:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5679,"isOffset":false,"isSlot":false,"src":"18185:1:20","valueSize":1},{"declaration":5681,"isOffset":false,"isSlot":false,"src":"18223:1:20","valueSize":1},{"declaration":5683,"isOffset":false,"isSlot":false,"src":"18261:1:20","valueSize":1},{"declaration":5688,"isOffset":false,"isSlot":false,"src":"18495:6:20","valueSize":1},{"declaration":5686,"isOffset":false,"isSlot":false,"src":"18425:7:20","valueSize":1}],"flags":["memory-safe"],"id":5698,"nodeType":"InlineAssembly","src":"17088:1438:20"}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"16191:738:20","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5700,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:20","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"b","nameLocation":"16961:1:20","nodeType":"VariableDeclaration","scope":5700,"src":"16953:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5681,"mutability":"mutable","name":"e","nameLocation":"16972:1:20","nodeType":"VariableDeclaration","scope":5700,"src":"16964:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5680,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5683,"mutability":"mutable","name":"m","nameLocation":"16983:1:20","nodeType":"VariableDeclaration","scope":5700,"src":"16975:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:20"},"returnParameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"success","nameLocation":"17014:7:20","nodeType":"VariableDeclaration","scope":5700,"src":"17009:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5685,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"result","nameLocation":"17031:6:20","nodeType":"VariableDeclaration","scope":5700,"src":"17023:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:20"},"scope":6490,"src":"16934:1598:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5735,"nodeType":"Block","src":"18729:179:20","statements":[{"assignments":[5713,5715],"declarations":[{"constant":false,"id":5713,"mutability":"mutable","name":"success","nameLocation":"18745:7:20","nodeType":"VariableDeclaration","scope":5735,"src":"18740:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5712,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5715,"mutability":"mutable","name":"result","nameLocation":"18767:6:20","nodeType":"VariableDeclaration","scope":5735,"src":"18754:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5714,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5721,"initialValue":{"arguments":[{"id":5717,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"18787:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5718,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"18790:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5719,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"18793:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5716,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5700,5782],"referencedDeclaration":5782,"src":"18777:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:20"},{"condition":{"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:20","subExpression":{"id":5722,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"18810:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5732,"nodeType":"IfStatement","src":"18805:74:20","trueBody":{"id":5731,"nodeType":"Block","src":"18819:60:20","statements":[{"expression":{"arguments":[{"expression":{"id":5727,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"18845:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:20","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"18845:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5724,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"18833:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3177_$","typeString":"type(library Panic)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:20","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"18833:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5730,"nodeType":"ExpressionStatement","src":"18833:35:20"}]}},{"expression":{"id":5733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"18895:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5711,"id":5734,"nodeType":"Return","src":"18888:13:20"}]},"documentation":{"id":5701,"nodeType":"StructuredDocumentation","src":"18538:85:20","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:20","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"b","nameLocation":"18657:1:20","nodeType":"VariableDeclaration","scope":5736,"src":"18644:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5702,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"e","nameLocation":"18673:1:20","nodeType":"VariableDeclaration","scope":5736,"src":"18660:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5704,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5707,"mutability":"mutable","name":"m","nameLocation":"18689:1:20","nodeType":"VariableDeclaration","scope":5736,"src":"18676:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5706,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:20"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"18715:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5709,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:20"},"scope":6490,"src":"18628:280:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5781,"nodeType":"Block","src":"19162:771:20","statements":[{"condition":{"arguments":[{"id":5751,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"19187:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5750,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"19176:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5760,"nodeType":"IfStatement","src":"19172:47:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5754,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5749,"id":5759,"nodeType":"Return","src":"19191:28:20"}},{"assignments":[5762],"declarations":[{"constant":false,"id":5762,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:20","nodeType":"VariableDeclaration","scope":5781,"src":"19230:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5765,"initialValue":{"expression":{"id":5763,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"19245:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:20","memberName":"length","nodeType":"MemberAccess","src":"19245:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:20"},{"expression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"19335:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5769,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"19361:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:20","memberName":"length","nodeType":"MemberAccess","src":"19361:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5771,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"19371:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:20","memberName":"length","nodeType":"MemberAccess","src":"19371:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5773,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"19381:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"19387:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5775,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"19390:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5776,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"19393:1:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5767,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5779,"nodeType":"ExpressionStatement","src":"19335:60:20"},{"AST":{"nodeType":"YulBlock","src":"19431:496:20","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:20","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:20"},"nodeType":"YulFunctionCall","src":"19460:17:20"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:20","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:20","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:20"},"nodeType":"YulFunctionCall","src":"19589:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:20","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:20"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:20"},"nodeType":"YulFunctionCall","src":"19611:13:20"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:20"},"nodeType":"YulFunctionCall","src":"19578:62:20"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:20"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:20"},"nodeType":"YulFunctionCall","src":"19789:20:20"},"nodeType":"YulExpressionStatement","src":"19789:20:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:20","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:20"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:20"},"nodeType":"YulFunctionCall","src":"19898:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:20"},"nodeType":"YulFunctionCall","src":"19885:32:20"},"nodeType":"YulExpressionStatement","src":"19885:32:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":5762,"isOffset":false,"isSlot":false,"src":"19635:4:20","valueSize":1},{"declaration":5762,"isOffset":false,"isSlot":false,"src":"19804:4:20","valueSize":1},{"declaration":5762,"isOffset":false,"isSlot":false,"src":"19911:4:20","valueSize":1},{"declaration":5748,"isOffset":false,"isSlot":false,"src":"19464:6:20","valueSize":1},{"declaration":5748,"isOffset":false,"isSlot":false,"src":"19617:6:20","valueSize":1},{"declaration":5748,"isOffset":false,"isSlot":false,"src":"19796:6:20","valueSize":1},{"declaration":5746,"isOffset":false,"isSlot":false,"src":"19567:7:20","valueSize":1}],"flags":["memory-safe"],"id":5780,"nodeType":"InlineAssembly","src":"19406:521:20"}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"18914:88:20","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5782,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:20","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"b","nameLocation":"19048:1:20","nodeType":"VariableDeclaration","scope":5782,"src":"19035:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5738,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5741,"mutability":"mutable","name":"e","nameLocation":"19072:1:20","nodeType":"VariableDeclaration","scope":5782,"src":"19059:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5740,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5743,"mutability":"mutable","name":"m","nameLocation":"19096:1:20","nodeType":"VariableDeclaration","scope":5782,"src":"19083:14:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5742,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:20"},"returnParameters":{"id":5749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"success","nameLocation":"19132:7:20","nodeType":"VariableDeclaration","scope":5782,"src":"19127:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5745,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5748,"mutability":"mutable","name":"result","nameLocation":"19154:6:20","nodeType":"VariableDeclaration","scope":5782,"src":"19141:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5747,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:20"},"scope":6490,"src":"19007:926:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5814,"nodeType":"Block","src":"20088:176:20","statements":[{"body":{"id":5810,"nodeType":"Block","src":"20145:92:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5801,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"20163:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5803,"indexExpression":{"id":5802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"20173:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5809,"nodeType":"IfStatement","src":"20159:68:20","trueBody":{"id":5808,"nodeType":"Block","src":"20182:45:20","statements":[{"expression":{"hexValue":"66616c7365","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5789,"id":5807,"nodeType":"Return","src":"20200:12:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"20118:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5795,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"20122:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:20","memberName":"length","nodeType":"MemberAccess","src":"20122:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5811,"initializationExpression":{"assignments":[5791],"declarations":[{"constant":false,"id":5791,"mutability":"mutable","name":"i","nameLocation":"20111:1:20","nodeType":"VariableDeclaration","scope":5811,"src":"20103:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5793,"initialValue":{"hexValue":"30","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:20"},"loopExpression":{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:20","subExpression":{"id":5798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"20142:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5800,"nodeType":"ExpressionStatement","src":"20140:3:20"},"nodeType":"ForStatement","src":"20098:139:20"},{"expression":{"hexValue":"74727565","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5789,"id":5813,"nodeType":"Return","src":"20246:11:20"}]},"documentation":{"id":5783,"nodeType":"StructuredDocumentation","src":"19939:72:20","text":" @dev Returns whether the provided byte array is zero."},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:20","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:20","nodeType":"VariableDeclaration","scope":5815,"src":"20036:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5784,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:20"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5815,"src":"20082:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5787,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:20"},"scope":6490,"src":"20016:248:20","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6033,"nodeType":"Block","src":"20624:5124:20","statements":[{"id":6032,"nodeType":"UncheckedBlock","src":"20634:5108:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"20728:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5829,"nodeType":"IfStatement","src":"20724:53:20","trueBody":{"id":5828,"nodeType":"Block","src":"20736:41:20","statements":[{"expression":{"id":5826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"20761:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5822,"id":5827,"nodeType":"Return","src":"20754:8:20"}]}},{"assignments":[5831],"declarations":[{"constant":false,"id":5831,"mutability":"mutable","name":"aa","nameLocation":"21712:2:20","nodeType":"VariableDeclaration","scope":6032,"src":"21704:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5830,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5833,"initialValue":{"id":5832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"21717:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:20"},{"assignments":[5835],"declarations":[{"constant":false,"id":5835,"mutability":"mutable","name":"xn","nameLocation":"21740:2:20","nodeType":"VariableDeclaration","scope":6032,"src":"21732:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5837,"initialValue":{"hexValue":"31","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"21765:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5853,"nodeType":"IfStatement","src":"21761:92:20","trueBody":{"id":5852,"nodeType":"Block","src":"21783:70:20","statements":[{"expression":{"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"21801:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5847,"nodeType":"ExpressionStatement","src":"21801:10:20"},{"expression":{"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"21829:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5851,"nodeType":"ExpressionStatement","src":"21829:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5854,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"21870:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"nodeType":"IfStatement","src":"21866:90:20","trueBody":{"id":5868,"nodeType":"Block","src":"21887:69:20","statements":[{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"21905:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5863,"nodeType":"ExpressionStatement","src":"21905:9:20"},{"expression":{"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5864,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"21932:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5867,"nodeType":"ExpressionStatement","src":"21932:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"21973:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5885,"nodeType":"IfStatement","src":"21969:90:20","trueBody":{"id":5884,"nodeType":"Block","src":"21990:69:20","statements":[{"expression":{"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5876,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22008:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5879,"nodeType":"ExpressionStatement","src":"22008:9:20"},{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5880,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22035:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5883,"nodeType":"ExpressionStatement","src":"22035:9:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5886,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22076:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:20","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5901,"nodeType":"IfStatement","src":"22072:89:20","trueBody":{"id":5900,"nodeType":"Block","src":"22093:68:20","statements":[{"expression":{"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5892,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22111:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5895,"nodeType":"ExpressionStatement","src":"22111:9:20"},{"expression":{"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5896,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22138:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5899,"nodeType":"ExpressionStatement","src":"22138:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22178:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:20","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5917,"nodeType":"IfStatement","src":"22174:87:20","trueBody":{"id":5916,"nodeType":"Block","src":"22194:67:20","statements":[{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5908,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22212:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ExpressionStatement","src":"22212:8:20"},{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5912,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22238:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5915,"nodeType":"ExpressionStatement","src":"22238:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5918,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22278:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5933,"nodeType":"IfStatement","src":"22274:87:20","trueBody":{"id":5932,"nodeType":"Block","src":"22294:67:20","statements":[{"expression":{"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5924,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22312:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5927,"nodeType":"ExpressionStatement","src":"22312:8:20"},{"expression":{"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5928,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22338:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5931,"nodeType":"ExpressionStatement","src":"22338:8:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5934,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"22378:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5945,"nodeType":"IfStatement","src":"22374:61:20","trueBody":{"id":5944,"nodeType":"Block","src":"22394:41:20","statements":[{"expression":{"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5940,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22412:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5943,"nodeType":"ExpressionStatement","src":"22412:8:20"}]}},{"expression":{"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22855:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5948,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"22865:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5954,"nodeType":"ExpressionStatement","src":"22855:18:20"},{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5955,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24760:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5956,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24766:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5957,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"24771:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5958,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24775:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5965,"nodeType":"ExpressionStatement","src":"24760:23:20"},{"expression":{"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5966,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24869:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5967,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24875:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"24880:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5969,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24884:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5976,"nodeType":"ExpressionStatement","src":"24869:23:20"},{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5977,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24980:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5978,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24986:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"24991:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5980,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"24995:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5987,"nodeType":"ExpressionStatement","src":"24980:23:20"},{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5988,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25089:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5989,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25095:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"25100:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5991,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25104:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5998,"nodeType":"ExpressionStatement","src":"25089:23:20"},{"expression":{"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5999,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25199:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6000,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25205:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"25210:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6002,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25214:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6009,"nodeType":"ExpressionStatement","src":"25199:23:20"},{"expression":{"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6010,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25309:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25315:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"25320:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6013,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25324:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6020,"nodeType":"ExpressionStatement","src":"25309:23:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6021,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25698:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6024,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25719:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"25724:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6026,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5835,"src":"25728:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6022,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"25703:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"25703:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5822,"id":6031,"nodeType":"Return","src":"25691:40:20"}]}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"20270:292:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:20","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"a","nameLocation":"20589:1:20","nodeType":"VariableDeclaration","scope":6034,"src":"20581:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:20"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6034,"src":"20615:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:20"},"scope":6490,"src":"20567:5181:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"25921:171:20","statements":[{"id":6066,"nodeType":"UncheckedBlock","src":"25931:155:20","statements":[{"assignments":[6046],"declarations":[{"constant":false,"id":6046,"mutability":"mutable","name":"result","nameLocation":"25963:6:20","nodeType":"VariableDeclaration","scope":6066,"src":"25955:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6045,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6050,"initialValue":{"arguments":[{"id":6048,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"25977:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6047,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6034,6068],"referencedDeclaration":6034,"src":"25972:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"26000:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6055,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"26042:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":6054,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"26025:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4881_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"26055:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"26064:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"26073:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6052,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26009:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26009:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6044,"id":6065,"nodeType":"Return","src":"25993:82:20"}]}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"25754:86:20","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:20","nodeType":"FunctionDefinition","parameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"a","nameLocation":"25867:1:20","nodeType":"VariableDeclaration","scope":6068,"src":"25859:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6040,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:20","nodeType":"VariableDeclaration","scope":6068,"src":"25870:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":6039,"nodeType":"UserDefinedTypeName","pathNode":{"id":6038,"name":"Rounding","nameLocations":["25870:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"25870:8:20"},"referencedDeclaration":4881,"src":"25870:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:20"},"returnParameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6068,"src":"25912:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:20"},"scope":6490,"src":"25845:247:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"26281:2334:20","statements":[{"expression":{"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26363:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"26383:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26367:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26367:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6086,"nodeType":"ExpressionStatement","src":"26363:64:20"},{"expression":{"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6087,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26503:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6090,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"26525:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6091,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26530:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6088,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26508:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26508:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6100,"nodeType":"ExpressionStatement","src":"26503:56:20"},{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6101,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26634:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"26656:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6105,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26661:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26639:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26639:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:20","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6114,"nodeType":"ExpressionStatement","src":"26634:48:20"},{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6115,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26757:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"26779:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6119,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26784:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6116,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26762:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26762:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6128,"nodeType":"ExpressionStatement","src":"26757:44:20"},{"expression":{"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6129,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26874:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6132,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"26896:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6133,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26901:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6130,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26879:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26879:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6142,"nodeType":"ExpressionStatement","src":"26874:42:20"},{"expression":{"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6143,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"26988:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6146,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"27010:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6147,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"27015:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6144,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"26993:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"26993:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6156,"nodeType":"ExpressionStatement","src":"26988:41:20"},{"AST":{"nodeType":"YulBlock","src":"28490:119:20","statements":[{"nodeType":"YulAssignment","src":"28504:95:20","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:20"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:20"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:20"},"nodeType":"YulFunctionCall","src":"28520:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:20","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:20"},"nodeType":"YulFunctionCall","src":"28515:83:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:20"},"nodeType":"YulFunctionCall","src":"28509:90:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6074,"isOffset":false,"isSlot":false,"src":"28504:1:20","valueSize":1},{"declaration":6074,"isOffset":false,"isSlot":false,"src":"28512:1:20","valueSize":1},{"declaration":6074,"isOffset":false,"isSlot":false,"src":"28524:1:20","valueSize":1},{"declaration":6071,"isOffset":false,"isSlot":false,"src":"28527:1:20","valueSize":1}],"flags":["memory-safe"],"id":6157,"nodeType":"InlineAssembly","src":"28465:144:20"}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"26098:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:20","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"x","nameLocation":"26244:1:20","nodeType":"VariableDeclaration","scope":6159,"src":"26236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6070,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:20"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"r","nameLocation":"26278:1:20","nodeType":"VariableDeclaration","scope":6159,"src":"26270:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6073,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:20"},"scope":6490,"src":"26222:2393:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"28848:175:20","statements":[{"id":6191,"nodeType":"UncheckedBlock","src":"28858:159:20","statements":[{"assignments":[6171],"declarations":[{"constant":false,"id":6171,"mutability":"mutable","name":"result","nameLocation":"28890:6:20","nodeType":"VariableDeclaration","scope":6191,"src":"28882:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6175,"initialValue":{"arguments":[{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"28904:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6172,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6159,6193],"referencedDeclaration":6159,"src":"28899:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"28931:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6180,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"28973:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":6179,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"28956:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4881_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"28991:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"29000:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6177,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"28940:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"28940:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6169,"id":6190,"nodeType":"Return","src":"28924:82:20"}]}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"28621:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:20","nodeType":"FunctionDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"value","nameLocation":"28790:5:20","nodeType":"VariableDeclaration","scope":6193,"src":"28782:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6161,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:20","nodeType":"VariableDeclaration","scope":6193,"src":"28797:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":6164,"nodeType":"UserDefinedTypeName","pathNode":{"id":6163,"name":"Rounding","nameLocations":["28797:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"28797:8:20"},"referencedDeclaration":4881,"src":"28797:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:20"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6193,"src":"28839:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6167,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:20"},"scope":6490,"src":"28768:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6321,"nodeType":"Block","src":"29216:854:20","statements":[{"assignments":[6202],"declarations":[{"constant":false,"id":6202,"mutability":"mutable","name":"result","nameLocation":"29234:6:20","nodeType":"VariableDeclaration","scope":6321,"src":"29226:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6204,"initialValue":{"hexValue":"30","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:20"},{"id":6318,"nodeType":"UncheckedBlock","src":"29254:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29282:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6221,"nodeType":"IfStatement","src":"29278:103:20","trueBody":{"id":6220,"nodeType":"Block","src":"29301:80:20","statements":[{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29319:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6215,"nodeType":"ExpressionStatement","src":"29319:17:20"},{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"29354:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"29354:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29398:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6238,"nodeType":"IfStatement","src":"29394:103:20","trueBody":{"id":6237,"nodeType":"Block","src":"29417:80:20","statements":[{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29435:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6232,"nodeType":"ExpressionStatement","src":"29435:17:20"},{"expression":{"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"29470:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6236,"nodeType":"ExpressionStatement","src":"29470:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29514:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6255,"nodeType":"IfStatement","src":"29510:103:20","trueBody":{"id":6254,"nodeType":"Block","src":"29533:80:20","statements":[{"expression":{"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29551:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6249,"nodeType":"ExpressionStatement","src":"29551:17:20"},{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"29586:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6253,"nodeType":"ExpressionStatement","src":"29586:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29630:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6272,"nodeType":"IfStatement","src":"29626:100:20","trueBody":{"id":6271,"nodeType":"Block","src":"29648:78:20","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29666:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6266,"nodeType":"ExpressionStatement","src":"29666:16:20"},{"expression":{"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6267,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"29700:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6270,"nodeType":"ExpressionStatement","src":"29700:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6289,"nodeType":"IfStatement","src":"29739:100:20","trueBody":{"id":6288,"nodeType":"Block","src":"29761:78:20","statements":[{"expression":{"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29779:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6283,"nodeType":"ExpressionStatement","src":"29779:16:20"},{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"29813:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6287,"nodeType":"ExpressionStatement","src":"29813:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29856:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6306,"nodeType":"IfStatement","src":"29852:100:20","trueBody":{"id":6305,"nodeType":"Block","src":"29874:78:20","statements":[{"expression":{"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29892:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6300,"nodeType":"ExpressionStatement","src":"29892:16:20"},{"expression":{"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"29926:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6304,"nodeType":"ExpressionStatement","src":"29926:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"29969:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6317,"nodeType":"IfStatement","src":"29965:66:20","trueBody":{"id":6316,"nodeType":"Block","src":"29987:44:20","statements":[{"expression":{"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"30005:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6315,"nodeType":"ExpressionStatement","src":"30005:11:20"}]}}]},{"expression":{"id":6319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"30057:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6200,"id":6320,"nodeType":"Return","src":"30050:13:20"}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"29029:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6322,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:20","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"29177:5:20","nodeType":"VariableDeclaration","scope":6322,"src":"29169:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6195,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:20"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6322,"src":"29207:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6198,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:20"},"scope":6490,"src":"29154:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6355,"nodeType":"Block","src":"30305:177:20","statements":[{"id":6354,"nodeType":"UncheckedBlock","src":"30315:161:20","statements":[{"assignments":[6334],"declarations":[{"constant":false,"id":6334,"mutability":"mutable","name":"result","nameLocation":"30347:6:20","nodeType":"VariableDeclaration","scope":6354,"src":"30339:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6333,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6338,"initialValue":{"arguments":[{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6335,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6322,6356],"referencedDeclaration":6322,"src":"30356:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"30389:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6343,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6328,"src":"30431:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":6342,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"30414:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4881_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6346,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"30450:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"30459:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6340,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"30398:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"30398:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6332,"id":6353,"nodeType":"Return","src":"30382:83:20"}]}]},"documentation":{"id":6323,"nodeType":"StructuredDocumentation","src":"30076:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6356,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:20","nodeType":"FunctionDefinition","parameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"value","nameLocation":"30247:5:20","nodeType":"VariableDeclaration","scope":6356,"src":"30239:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6324,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6328,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:20","nodeType":"VariableDeclaration","scope":6356,"src":"30254:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":6327,"nodeType":"UserDefinedTypeName","pathNode":{"id":6326,"name":"Rounding","nameLocations":["30254:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"30254:8:20"},"referencedDeclaration":4881,"src":"30254:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:20"},"returnParameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6356,"src":"30296:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6330,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:20"},"scope":6490,"src":"30224:258:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"30800:675:20","statements":[{"expression":{"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6364,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"30882:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6367,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"30902:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:20","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"30886:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"30886:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6374,"nodeType":"ExpressionStatement","src":"30882:64:20"},{"expression":{"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6375,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31022:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6378,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"31044:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6379,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31049:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:20","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"31027:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"31027:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:20","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6388,"nodeType":"ExpressionStatement","src":"31022:56:20"},{"expression":{"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6389,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31153:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6392,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"31175:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6393,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31180:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:20","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"31158:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"31158:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:20","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6402,"nodeType":"ExpressionStatement","src":"31153:48:20"},{"expression":{"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31276:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6406,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"31298:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6407,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31303:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:20","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6404,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"31281:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"31281:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6416,"nodeType":"ExpressionStatement","src":"31276:44:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6417,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31426:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6423,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"31453:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6424,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"31458:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6421,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"31436:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"31436:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6363,"id":6431,"nodeType":"Return","src":"31418:50:20"}]},"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"30488:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:20","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"x","nameLocation":"30763:1:20","nodeType":"VariableDeclaration","scope":6433,"src":"30755:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:20"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"r","nameLocation":"30797:1:20","nodeType":"VariableDeclaration","scope":6433,"src":"30789:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6361,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:20"},"scope":6490,"src":"30739:736:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"31712:184:20","statements":[{"id":6468,"nodeType":"UncheckedBlock","src":"31722:168:20","statements":[{"assignments":[6445],"declarations":[{"constant":false,"id":6445,"mutability":"mutable","name":"result","nameLocation":"31754:6:20","nodeType":"VariableDeclaration","scope":6468,"src":"31746:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6449,"initialValue":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"31770:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6433,6470],"referencedDeclaration":6433,"src":"31763:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"31797:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6454,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"31839:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":6453,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"31822:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4881_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"31873:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"31806:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"31806:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6443,"id":6467,"nodeType":"Return","src":"31790:89:20"}]}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"31481:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:20","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"31654:5:20","nodeType":"VariableDeclaration","scope":6470,"src":"31646:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6439,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:20","nodeType":"VariableDeclaration","scope":6470,"src":"31661:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":6438,"nodeType":"UserDefinedTypeName","pathNode":{"id":6437,"name":"Rounding","nameLocations":["31661:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"31661:8:20"},"referencedDeclaration":4881,"src":"31661:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:20"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"31703:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6441,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:20"},"scope":6490,"src":"31630:266:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6488,"nodeType":"Block","src":"32094:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6481,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"32117:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}],"id":6480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6479,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:20","typeDescriptions":{}}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6478,"id":6487,"nodeType":"Return","src":"32104:31:20"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"31902:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6489,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:20","nodeType":"FunctionDefinition","parameters":{"id":6475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:20","nodeType":"VariableDeclaration","scope":6489,"src":"32046:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"},"typeName":{"id":6473,"nodeType":"UserDefinedTypeName","pathNode":{"id":6472,"name":"Rounding","nameLocations":["32046:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":4881,"src":"32046:8:20"},"referencedDeclaration":4881,"src":"32046:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4881","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:20"},"returnParameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"32088:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6476,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:20"},"scope":6490,"src":"32020:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6491,"src":"281:31863:20","usedErrors":[],"usedEvents":[]}],"src":"103:32042:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8255]},"id":8256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6492,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6493,"nodeType":"StructuredDocumentation","src":"218:550:21","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8255,"linearizedBaseContracts":[8255],"name":"SafeCast","nameLocation":"777:8:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"792:68:21","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6500,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:21","nodeType":"ErrorDefinition","parameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"bits","nameLocation":"908:4:21","nodeType":"VariableDeclaration","scope":6500,"src":"902:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6495,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"value","nameLocation":"922:5:21","nodeType":"VariableDeclaration","scope":6500,"src":"914:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:21"},"src":"865:64:21"},{"documentation":{"id":6501,"nodeType":"StructuredDocumentation","src":"935:75:21","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6505,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:21","nodeType":"ErrorDefinition","parameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"value","nameLocation":"1056:5:21","nodeType":"VariableDeclaration","scope":6505,"src":"1049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6502,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:21"},"src":"1015:48:21"},{"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"1069:67:21","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6512,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:21","nodeType":"ErrorDefinition","parameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"bits","nameLocation":"1183:4:21","nodeType":"VariableDeclaration","scope":6512,"src":"1177:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6507,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6510,"mutability":"mutable","name":"value","nameLocation":"1196:5:21","nodeType":"VariableDeclaration","scope":6512,"src":"1189:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6509,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:21"},"src":"1141:62:21"},{"documentation":{"id":6513,"nodeType":"StructuredDocumentation","src":"1209:75:21","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6517,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:21","nodeType":"ErrorDefinition","parameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"value","nameLocation":"1331:5:21","nodeType":"VariableDeclaration","scope":6517,"src":"1323:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:21"},"src":"1289:49:21"},{"body":{"id":6544,"nodeType":"Block","src":"1695:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1709:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6527,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:21","memberName":"max","nodeType":"MemberAccess","src":"1717:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"1705:105:21","trueBody":{"id":6537,"nodeType":"Block","src":"1736:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"1757:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6536,"nodeType":"RevertStatement","src":"1750:49:21"}]}},{"expression":{"arguments":[{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6539,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:21","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6524,"id":6543,"nodeType":"Return","src":"1819:21:21"}]},"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"1344:280:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:21","nodeType":"FunctionDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"value","nameLocation":"1656:5:21","nodeType":"VariableDeclaration","scope":6545,"src":"1648:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:21"},"returnParameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6545,"src":"1686:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6522,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:21"},"scope":8255,"src":"1629:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6572,"nodeType":"Block","src":"2204:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6555,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:21","memberName":"max","nodeType":"MemberAccess","src":"2226:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6566,"nodeType":"IfStatement","src":"2214:105:21","trueBody":{"id":6565,"nodeType":"Block","src":"2245:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"2266:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"RevertStatement","src":"2259:49:21"}]}},{"expression":{"arguments":[{"id":6569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6567,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:21","typeDescriptions":{}}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6552,"id":6571,"nodeType":"Return","src":"2328:21:21"}]},"documentation":{"id":6546,"nodeType":"StructuredDocumentation","src":"1853:280:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:21","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"value","nameLocation":"2165:5:21","nodeType":"VariableDeclaration","scope":6573,"src":"2157:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:21"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6573,"src":"2195:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6550,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:21"},"scope":8255,"src":"2138:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6600,"nodeType":"Block","src":"2713:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2727:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6583,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:21","memberName":"max","nodeType":"MemberAccess","src":"2735:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6594,"nodeType":"IfStatement","src":"2723:105:21","trueBody":{"id":6593,"nodeType":"Block","src":"2754:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2811:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"2775:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6592,"nodeType":"RevertStatement","src":"2768:49:21"}]}},{"expression":{"arguments":[{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2852:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6595,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:21","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6580,"id":6599,"nodeType":"Return","src":"2837:21:21"}]},"documentation":{"id":6574,"nodeType":"StructuredDocumentation","src":"2362:280:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:21","nodeType":"FunctionDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"value","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":6601,"src":"2666:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:21"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6601,"src":"2704:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6578,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:21"},"scope":8255,"src":"2647:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6628,"nodeType":"Block","src":"3222:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"3236:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6611,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:21","memberName":"max","nodeType":"MemberAccess","src":"3244:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"3232:105:21","trueBody":{"id":6621,"nodeType":"Block","src":"3263:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"3320:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"3284:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"RevertStatement","src":"3277:49:21"}]}},{"expression":{"arguments":[{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"3361:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6623,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:21","typeDescriptions":{}}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6608,"id":6627,"nodeType":"Return","src":"3346:21:21"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"2871:280:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:21","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"value","nameLocation":"3183:5:21","nodeType":"VariableDeclaration","scope":6629,"src":"3175:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:21"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6629,"src":"3213:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6606,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:21"},"scope":8255,"src":"3156:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6656,"nodeType":"Block","src":"3731:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"3745:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6639,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:21","memberName":"max","nodeType":"MemberAccess","src":"3753:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"IfStatement","src":"3741:105:21","trueBody":{"id":6649,"nodeType":"Block","src":"3772:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"3829:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"3793:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"RevertStatement","src":"3786:49:21"}]}},{"expression":{"arguments":[{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"3870:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6651,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:21","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6636,"id":6655,"nodeType":"Return","src":"3855:21:21"}]},"documentation":{"id":6630,"nodeType":"StructuredDocumentation","src":"3380:280:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:21","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"value","nameLocation":"3692:5:21","nodeType":"VariableDeclaration","scope":6657,"src":"3684:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:21"},"returnParameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6657,"src":"3722:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6634,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:21"},"scope":8255,"src":"3665:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6684,"nodeType":"Block","src":"4240:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6667,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:21","memberName":"max","nodeType":"MemberAccess","src":"4262:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6678,"nodeType":"IfStatement","src":"4250:105:21","trueBody":{"id":6677,"nodeType":"Block","src":"4281:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4338:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"4302:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"RevertStatement","src":"4295:49:21"}]}},{"expression":{"arguments":[{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6679,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:21","typeDescriptions":{}}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6664,"id":6683,"nodeType":"Return","src":"4364:21:21"}]},"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"3889:280:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:21","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"value","nameLocation":"4201:5:21","nodeType":"VariableDeclaration","scope":6685,"src":"4193:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:21"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6685,"src":"4231:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6662,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:21"},"scope":8255,"src":"4174:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6712,"nodeType":"Block","src":"4749:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"4763:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6695,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:21","memberName":"max","nodeType":"MemberAccess","src":"4771:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6706,"nodeType":"IfStatement","src":"4759:105:21","trueBody":{"id":6705,"nodeType":"Block","src":"4790:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"4847:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"4811:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6704,"nodeType":"RevertStatement","src":"4804:49:21"}]}},{"expression":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"4888:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6707,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:21","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6692,"id":6711,"nodeType":"Return","src":"4873:21:21"}]},"documentation":{"id":6686,"nodeType":"StructuredDocumentation","src":"4398:280:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:21","nodeType":"FunctionDefinition","parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"value","nameLocation":"4710:5:21","nodeType":"VariableDeclaration","scope":6713,"src":"4702:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:21"},"returnParameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6713,"src":"4740:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6690,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:21"},"scope":8255,"src":"4683:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6740,"nodeType":"Block","src":"5258:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"5272:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6723,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:21","memberName":"max","nodeType":"MemberAccess","src":"5280:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"IfStatement","src":"5268:105:21","trueBody":{"id":6733,"nodeType":"Block","src":"5299:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"5356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"5320:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6732,"nodeType":"RevertStatement","src":"5313:49:21"}]}},{"expression":{"arguments":[{"id":6737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"5397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6735,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:21","typeDescriptions":{}}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6720,"id":6739,"nodeType":"Return","src":"5382:21:21"}]},"documentation":{"id":6714,"nodeType":"StructuredDocumentation","src":"4907:280:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:21","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"value","nameLocation":"5219:5:21","nodeType":"VariableDeclaration","scope":6741,"src":"5211:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:21"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6741,"src":"5249:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6718,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:21"},"scope":8255,"src":"5192:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6768,"nodeType":"Block","src":"5767:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5781:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6751,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:21","memberName":"max","nodeType":"MemberAccess","src":"5789:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6762,"nodeType":"IfStatement","src":"5777:105:21","trueBody":{"id":6761,"nodeType":"Block","src":"5808:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"5829:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6760,"nodeType":"RevertStatement","src":"5822:49:21"}]}},{"expression":{"arguments":[{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5906:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6763,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:21","typeDescriptions":{}}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6748,"id":6767,"nodeType":"Return","src":"5891:21:21"}]},"documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"5416:280:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:21","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"value","nameLocation":"5728:5:21","nodeType":"VariableDeclaration","scope":6769,"src":"5720:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6743,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:21"},"returnParameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6769,"src":"5758:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6746,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:21"},"scope":8255,"src":"5701:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6796,"nodeType":"Block","src":"6276:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"6290:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6779,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:21","memberName":"max","nodeType":"MemberAccess","src":"6298:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6790,"nodeType":"IfStatement","src":"6286:105:21","trueBody":{"id":6789,"nodeType":"Block","src":"6317:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"6374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"6338:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6788,"nodeType":"RevertStatement","src":"6331:49:21"}]}},{"expression":{"arguments":[{"id":6793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"6415:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6791,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:21","typeDescriptions":{}}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6776,"id":6795,"nodeType":"Return","src":"6400:21:21"}]},"documentation":{"id":6770,"nodeType":"StructuredDocumentation","src":"5925:280:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:21","nodeType":"FunctionDefinition","parameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"value","nameLocation":"6237:5:21","nodeType":"VariableDeclaration","scope":6797,"src":"6229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:21"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6797,"src":"6267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6774,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:21"},"scope":8255,"src":"6210:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6824,"nodeType":"Block","src":"6785:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"6799:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6807,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:21","memberName":"max","nodeType":"MemberAccess","src":"6807:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6818,"nodeType":"IfStatement","src":"6795:105:21","trueBody":{"id":6817,"nodeType":"Block","src":"6826:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"6883:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"6847:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6816,"nodeType":"RevertStatement","src":"6840:49:21"}]}},{"expression":{"arguments":[{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"6924:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6819,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:21","typeDescriptions":{}}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6804,"id":6823,"nodeType":"Return","src":"6909:21:21"}]},"documentation":{"id":6798,"nodeType":"StructuredDocumentation","src":"6434:280:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:21","nodeType":"FunctionDefinition","parameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"value","nameLocation":"6746:5:21","nodeType":"VariableDeclaration","scope":6825,"src":"6738:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6799,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:21"},"returnParameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6825,"src":"6776:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6802,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:21"},"scope":8255,"src":"6719:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6852,"nodeType":"Block","src":"7294:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"7308:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6835,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:21","memberName":"max","nodeType":"MemberAccess","src":"7316:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6846,"nodeType":"IfStatement","src":"7304:105:21","trueBody":{"id":6845,"nodeType":"Block","src":"7335:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"7392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"7356:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6844,"nodeType":"RevertStatement","src":"7349:49:21"}]}},{"expression":{"arguments":[{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"7433:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6847,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:21","typeDescriptions":{}}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6832,"id":6851,"nodeType":"Return","src":"7418:21:21"}]},"documentation":{"id":6826,"nodeType":"StructuredDocumentation","src":"6943:280:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:21","nodeType":"FunctionDefinition","parameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"value","nameLocation":"7255:5:21","nodeType":"VariableDeclaration","scope":6853,"src":"7247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:21"},"returnParameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6853,"src":"7285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6830,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:21"},"scope":8255,"src":"7228:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6880,"nodeType":"Block","src":"7803:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"7817:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6863,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:21","memberName":"max","nodeType":"MemberAccess","src":"7825:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"IfStatement","src":"7813:105:21","trueBody":{"id":6873,"nodeType":"Block","src":"7844:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"7901:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"7865:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"RevertStatement","src":"7858:49:21"}]}},{"expression":{"arguments":[{"id":6877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"7942:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6875,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:21","typeDescriptions":{}}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6860,"id":6879,"nodeType":"Return","src":"7927:21:21"}]},"documentation":{"id":6854,"nodeType":"StructuredDocumentation","src":"7452:280:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:21","nodeType":"FunctionDefinition","parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"value","nameLocation":"7764:5:21","nodeType":"VariableDeclaration","scope":6881,"src":"7756:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:21"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6881,"src":"7794:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6858,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:21"},"scope":8255,"src":"7737:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6908,"nodeType":"Block","src":"8312:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"8326:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6891,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:21","memberName":"max","nodeType":"MemberAccess","src":"8334:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6902,"nodeType":"IfStatement","src":"8322:105:21","trueBody":{"id":6901,"nodeType":"Block","src":"8353:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"8410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"8374:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"RevertStatement","src":"8367:49:21"}]}},{"expression":{"arguments":[{"id":6905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"8451:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6903,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:21","typeDescriptions":{}}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6888,"id":6907,"nodeType":"Return","src":"8436:21:21"}]},"documentation":{"id":6882,"nodeType":"StructuredDocumentation","src":"7961:280:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:21","nodeType":"FunctionDefinition","parameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"value","nameLocation":"8273:5:21","nodeType":"VariableDeclaration","scope":6909,"src":"8265:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:21"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6909,"src":"8303:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6886,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:21"},"scope":8255,"src":"8246:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6936,"nodeType":"Block","src":"8821:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"8835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6919,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:21","memberName":"max","nodeType":"MemberAccess","src":"8843:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6930,"nodeType":"IfStatement","src":"8831:105:21","trueBody":{"id":6929,"nodeType":"Block","src":"8862:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"8919:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"8883:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6928,"nodeType":"RevertStatement","src":"8876:49:21"}]}},{"expression":{"arguments":[{"id":6933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"8960:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6931,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:21","typeDescriptions":{}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6916,"id":6935,"nodeType":"Return","src":"8945:21:21"}]},"documentation":{"id":6910,"nodeType":"StructuredDocumentation","src":"8470:280:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:21","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"value","nameLocation":"8782:5:21","nodeType":"VariableDeclaration","scope":6937,"src":"8774:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:21"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6937,"src":"8812:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6914,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:21"},"scope":8255,"src":"8755:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6964,"nodeType":"Block","src":"9330:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"9344:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6947,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:21","memberName":"max","nodeType":"MemberAccess","src":"9352:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6958,"nodeType":"IfStatement","src":"9340:105:21","trueBody":{"id":6957,"nodeType":"Block","src":"9371:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"9428:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"9392:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6956,"nodeType":"RevertStatement","src":"9385:49:21"}]}},{"expression":{"arguments":[{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"9469:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6959,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:21","typeDescriptions":{}}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6944,"id":6963,"nodeType":"Return","src":"9454:21:21"}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"8979:280:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:21","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"value","nameLocation":"9291:5:21","nodeType":"VariableDeclaration","scope":6965,"src":"9283:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:21"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6965,"src":"9321:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6942,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:21"},"scope":8255,"src":"9264:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6992,"nodeType":"Block","src":"9839:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"9853:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6975,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:21","memberName":"max","nodeType":"MemberAccess","src":"9861:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6986,"nodeType":"IfStatement","src":"9849:105:21","trueBody":{"id":6985,"nodeType":"Block","src":"9880:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"9937:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"9901:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6984,"nodeType":"RevertStatement","src":"9894:49:21"}]}},{"expression":{"arguments":[{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"9978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6987,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:21","typeDescriptions":{}}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6972,"id":6991,"nodeType":"Return","src":"9963:21:21"}]},"documentation":{"id":6966,"nodeType":"StructuredDocumentation","src":"9488:280:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:21","nodeType":"FunctionDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"value","nameLocation":"9800:5:21","nodeType":"VariableDeclaration","scope":6993,"src":"9792:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:21"},"returnParameters":{"id":6972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6993,"src":"9830:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6970,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:21"},"scope":8255,"src":"9773:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7020,"nodeType":"Block","src":"10348:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"10362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7003,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:21","memberName":"max","nodeType":"MemberAccess","src":"10370:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7014,"nodeType":"IfStatement","src":"10358:105:21","trueBody":{"id":7013,"nodeType":"Block","src":"10389:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"10446:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"10410:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7012,"nodeType":"RevertStatement","src":"10403:49:21"}]}},{"expression":{"arguments":[{"id":7017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"10487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7015,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:21","typeDescriptions":{}}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7000,"id":7019,"nodeType":"Return","src":"10472:21:21"}]},"documentation":{"id":6994,"nodeType":"StructuredDocumentation","src":"9997:280:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:21","nodeType":"FunctionDefinition","parameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"value","nameLocation":"10309:5:21","nodeType":"VariableDeclaration","scope":7021,"src":"10301:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:21"},"returnParameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7021,"src":"10339:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6998,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:21"},"scope":8255,"src":"10282:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"10857:152:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"10871:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7031,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:21","memberName":"max","nodeType":"MemberAccess","src":"10879:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7042,"nodeType":"IfStatement","src":"10867:105:21","trueBody":{"id":7041,"nodeType":"Block","src":"10898:74:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"10955:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"10919:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7040,"nodeType":"RevertStatement","src":"10912:49:21"}]}},{"expression":{"arguments":[{"id":7045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"10996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7043,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:21","typeDescriptions":{}}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7028,"id":7047,"nodeType":"Return","src":"10981:21:21"}]},"documentation":{"id":7022,"nodeType":"StructuredDocumentation","src":"10506:280:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:21","nodeType":"FunctionDefinition","parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"value","nameLocation":"10818:5:21","nodeType":"VariableDeclaration","scope":7049,"src":"10810:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:21"},"returnParameters":{"id":7028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7049,"src":"10848:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7026,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:21"},"scope":8255,"src":"10791:218:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7076,"nodeType":"Block","src":"11360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"11374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7059,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:21","memberName":"max","nodeType":"MemberAccess","src":"11382:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"IfStatement","src":"11370:103:21","trueBody":{"id":7069,"nodeType":"Block","src":"11400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"11456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"11421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7068,"nodeType":"RevertStatement","src":"11414:48:21"}]}},{"expression":{"arguments":[{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"11496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7071,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:21","typeDescriptions":{}}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7056,"id":7075,"nodeType":"Return","src":"11482:20:21"}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"11015:276:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:21","nodeType":"FunctionDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"value","nameLocation":"11322:5:21","nodeType":"VariableDeclaration","scope":7077,"src":"11314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7051,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:21"},"returnParameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7077,"src":"11352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7054,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:21"},"scope":8255,"src":"11296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7104,"nodeType":"Block","src":"11860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"11874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7087,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7086,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:21","memberName":"max","nodeType":"MemberAccess","src":"11882:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7098,"nodeType":"IfStatement","src":"11870:103:21","trueBody":{"id":7097,"nodeType":"Block","src":"11900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"11956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7092,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"11921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7096,"nodeType":"RevertStatement","src":"11914:48:21"}]}},{"expression":{"arguments":[{"id":7101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"11996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7099,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:21","typeDescriptions":{}}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7084,"id":7103,"nodeType":"Return","src":"11982:20:21"}]},"documentation":{"id":7078,"nodeType":"StructuredDocumentation","src":"11515:276:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7105,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:21","nodeType":"FunctionDefinition","parameters":{"id":7081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7080,"mutability":"mutable","name":"value","nameLocation":"11822:5:21","nodeType":"VariableDeclaration","scope":7105,"src":"11814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:21"},"returnParameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7105,"src":"11852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7082,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:21"},"scope":8255,"src":"11796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7132,"nodeType":"Block","src":"12360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"12374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7115,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:21","memberName":"max","nodeType":"MemberAccess","src":"12382:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7126,"nodeType":"IfStatement","src":"12370:103:21","trueBody":{"id":7125,"nodeType":"Block","src":"12400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"12456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7120,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"12421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"RevertStatement","src":"12414:48:21"}]}},{"expression":{"arguments":[{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"12496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7127,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:21","typeDescriptions":{}}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7112,"id":7131,"nodeType":"Return","src":"12482:20:21"}]},"documentation":{"id":7106,"nodeType":"StructuredDocumentation","src":"12015:276:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7133,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:21","nodeType":"FunctionDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"value","nameLocation":"12322:5:21","nodeType":"VariableDeclaration","scope":7133,"src":"12314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:21"},"returnParameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7133,"src":"12352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7110,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:21"},"scope":8255,"src":"12296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7160,"nodeType":"Block","src":"12860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"12874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7143,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:21","memberName":"max","nodeType":"MemberAccess","src":"12882:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7154,"nodeType":"IfStatement","src":"12870:103:21","trueBody":{"id":7153,"nodeType":"Block","src":"12900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"12956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7148,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"12921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"RevertStatement","src":"12914:48:21"}]}},{"expression":{"arguments":[{"id":7157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"12996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7155,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:21","typeDescriptions":{}}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7140,"id":7159,"nodeType":"Return","src":"12982:20:21"}]},"documentation":{"id":7134,"nodeType":"StructuredDocumentation","src":"12515:276:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:21","nodeType":"FunctionDefinition","parameters":{"id":7137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7136,"mutability":"mutable","name":"value","nameLocation":"12822:5:21","nodeType":"VariableDeclaration","scope":7161,"src":"12814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7135,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:21"},"returnParameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7161,"src":"12852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7138,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:21"},"scope":8255,"src":"12796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7188,"nodeType":"Block","src":"13360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"13374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7171,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:21","memberName":"max","nodeType":"MemberAccess","src":"13382:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7182,"nodeType":"IfStatement","src":"13370:103:21","trueBody":{"id":7181,"nodeType":"Block","src":"13400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"13456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7176,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"13421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7180,"nodeType":"RevertStatement","src":"13414:48:21"}]}},{"expression":{"arguments":[{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"13496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7183,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:21","typeDescriptions":{}}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7168,"id":7187,"nodeType":"Return","src":"13482:20:21"}]},"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"13015:276:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:21","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"value","nameLocation":"13322:5:21","nodeType":"VariableDeclaration","scope":7189,"src":"13314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7163,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:21"},"returnParameters":{"id":7168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7189,"src":"13352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7166,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:21"},"scope":8255,"src":"13296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7216,"nodeType":"Block","src":"13860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"13874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7199,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:21","memberName":"max","nodeType":"MemberAccess","src":"13882:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7210,"nodeType":"IfStatement","src":"13870:103:21","trueBody":{"id":7209,"nodeType":"Block","src":"13900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"13956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7204,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"13921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7208,"nodeType":"RevertStatement","src":"13914:48:21"}]}},{"expression":{"arguments":[{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"13996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7211,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:21","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7196,"id":7215,"nodeType":"Return","src":"13982:20:21"}]},"documentation":{"id":7190,"nodeType":"StructuredDocumentation","src":"13515:276:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:21","nodeType":"FunctionDefinition","parameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"value","nameLocation":"13822:5:21","nodeType":"VariableDeclaration","scope":7217,"src":"13814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:21"},"returnParameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7217,"src":"13852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7194,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:21"},"scope":8255,"src":"13796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7244,"nodeType":"Block","src":"14360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"14374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7227,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:21","memberName":"max","nodeType":"MemberAccess","src":"14382:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7238,"nodeType":"IfStatement","src":"14370:103:21","trueBody":{"id":7237,"nodeType":"Block","src":"14400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"14456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7232,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"14421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7236,"nodeType":"RevertStatement","src":"14414:48:21"}]}},{"expression":{"arguments":[{"id":7241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"14496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7239,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:21","typeDescriptions":{}}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7224,"id":7243,"nodeType":"Return","src":"14482:20:21"}]},"documentation":{"id":7218,"nodeType":"StructuredDocumentation","src":"14015:276:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:21","nodeType":"FunctionDefinition","parameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"value","nameLocation":"14322:5:21","nodeType":"VariableDeclaration","scope":7245,"src":"14314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7219,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:21"},"returnParameters":{"id":7224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7245,"src":"14352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7222,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:21"},"scope":8255,"src":"14296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7272,"nodeType":"Block","src":"14860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"14874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7255,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:21","memberName":"max","nodeType":"MemberAccess","src":"14882:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7266,"nodeType":"IfStatement","src":"14870:103:21","trueBody":{"id":7265,"nodeType":"Block","src":"14900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"14956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7260,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"14921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7264,"nodeType":"RevertStatement","src":"14914:48:21"}]}},{"expression":{"arguments":[{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"14996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7267,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:21","typeDescriptions":{}}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7252,"id":7271,"nodeType":"Return","src":"14982:20:21"}]},"documentation":{"id":7246,"nodeType":"StructuredDocumentation","src":"14515:276:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:21","nodeType":"FunctionDefinition","parameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"value","nameLocation":"14822:5:21","nodeType":"VariableDeclaration","scope":7273,"src":"14814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:21"},"returnParameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7273,"src":"14852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7250,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:21"},"scope":8255,"src":"14796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7300,"nodeType":"Block","src":"15360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"15374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7283,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:21","memberName":"max","nodeType":"MemberAccess","src":"15382:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7294,"nodeType":"IfStatement","src":"15370:103:21","trueBody":{"id":7293,"nodeType":"Block","src":"15400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"15456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7288,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"15421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7292,"nodeType":"RevertStatement","src":"15414:48:21"}]}},{"expression":{"arguments":[{"id":7297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"15496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7295,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:21","typeDescriptions":{}}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7280,"id":7299,"nodeType":"Return","src":"15482:20:21"}]},"documentation":{"id":7274,"nodeType":"StructuredDocumentation","src":"15015:276:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:21","nodeType":"FunctionDefinition","parameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7276,"mutability":"mutable","name":"value","nameLocation":"15322:5:21","nodeType":"VariableDeclaration","scope":7301,"src":"15314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7275,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:21"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7301,"src":"15352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7278,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:21"},"scope":8255,"src":"15296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7328,"nodeType":"Block","src":"15860:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"15874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7311,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:21","memberName":"max","nodeType":"MemberAccess","src":"15882:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7322,"nodeType":"IfStatement","src":"15870:103:21","trueBody":{"id":7321,"nodeType":"Block","src":"15900:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"15956:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7316,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"15921:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7320,"nodeType":"RevertStatement","src":"15914:48:21"}]}},{"expression":{"arguments":[{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"15996:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7323,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:21","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7308,"id":7327,"nodeType":"Return","src":"15982:20:21"}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"15515:276:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7329,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:21","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"value","nameLocation":"15822:5:21","nodeType":"VariableDeclaration","scope":7329,"src":"15814:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7303,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:21"},"returnParameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7329,"src":"15852:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7306,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:21"},"scope":8255,"src":"15796:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7356,"nodeType":"Block","src":"16360:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"16374:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7339,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7338,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:21","memberName":"max","nodeType":"MemberAccess","src":"16382:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7350,"nodeType":"IfStatement","src":"16370:103:21","trueBody":{"id":7349,"nodeType":"Block","src":"16400:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"16456:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7344,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"16421:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7348,"nodeType":"RevertStatement","src":"16414:48:21"}]}},{"expression":{"arguments":[{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7332,"src":"16496:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7351,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:21","typeDescriptions":{}}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7336,"id":7355,"nodeType":"Return","src":"16482:20:21"}]},"documentation":{"id":7330,"nodeType":"StructuredDocumentation","src":"16015:276:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:21","nodeType":"FunctionDefinition","parameters":{"id":7333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7332,"mutability":"mutable","name":"value","nameLocation":"16322:5:21","nodeType":"VariableDeclaration","scope":7357,"src":"16314:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7331,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:21"},"returnParameters":{"id":7336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7357,"src":"16352:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7334,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:21"},"scope":8255,"src":"16296:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7384,"nodeType":"Block","src":"16854:146:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"16868:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7367,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:21","memberName":"max","nodeType":"MemberAccess","src":"16876:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7378,"nodeType":"IfStatement","src":"16864:101:21","trueBody":{"id":7377,"nodeType":"Block","src":"16893:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"16948:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7372,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"16914:30:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7376,"nodeType":"RevertStatement","src":"16907:47:21"}]}},{"expression":{"arguments":[{"id":7381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"16987:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7379,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:21","typeDescriptions":{}}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7364,"id":7383,"nodeType":"Return","src":"16974:19:21"}]},"documentation":{"id":7358,"nodeType":"StructuredDocumentation","src":"16515:272:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7385,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:21","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7360,"mutability":"mutable","name":"value","nameLocation":"16817:5:21","nodeType":"VariableDeclaration","scope":7385,"src":"16809:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:21"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7385,"src":"16847:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7362,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:21"},"scope":8255,"src":"16792:208:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7407,"nodeType":"Block","src":"17236:128:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"17250:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7401,"nodeType":"IfStatement","src":"17246:81:21","trueBody":{"id":7400,"nodeType":"Block","src":"17261:66:21","statements":[{"errorCall":{"arguments":[{"id":7397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"17310:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7396,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"17282:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7399,"nodeType":"RevertStatement","src":"17275:41:21"}]}},{"expression":{"arguments":[{"id":7404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"17351:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7402,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:21","typeDescriptions":{}}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7392,"id":7406,"nodeType":"Return","src":"17336:21:21"}]},"documentation":{"id":7386,"nodeType":"StructuredDocumentation","src":"17006:160:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7408,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:21","nodeType":"FunctionDefinition","parameters":{"id":7389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7388,"mutability":"mutable","name":"value","nameLocation":"17197:5:21","nodeType":"VariableDeclaration","scope":7408,"src":"17190:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7387,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:21"},"returnParameters":{"id":7392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7408,"src":"17227:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7390,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:21"},"scope":8255,"src":"17171:193:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7433,"nodeType":"Block","src":"17761:150:21","statements":[{"expression":{"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17771:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"17791:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7417,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:21","typeDescriptions":{}}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7422,"nodeType":"ExpressionStatement","src":"17771:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"17811:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"17825:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7432,"nodeType":"IfStatement","src":"17807:98:21","trueBody":{"id":7431,"nodeType":"Block","src":"17832:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"17888:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7426,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"17853:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7430,"nodeType":"RevertStatement","src":"17846:48:21"}]}}]},"documentation":{"id":7409,"nodeType":"StructuredDocumentation","src":"17370:312:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7434,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:21","nodeType":"FunctionDefinition","parameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"value","nameLocation":"17712:5:21","nodeType":"VariableDeclaration","scope":7434,"src":"17705:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7410,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:21"},"returnParameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:21","nodeType":"VariableDeclaration","scope":7434,"src":"17742:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7413,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:21"},"scope":8255,"src":"17687:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7459,"nodeType":"Block","src":"18308:150:21","statements":[{"expression":{"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"18318:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"18338:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7443,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:21","typeDescriptions":{}}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7448,"nodeType":"ExpressionStatement","src":"18318:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"18358:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"18372:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7458,"nodeType":"IfStatement","src":"18354:98:21","trueBody":{"id":7457,"nodeType":"Block","src":"18379:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:21","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"18435:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"18400:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7456,"nodeType":"RevertStatement","src":"18393:48:21"}]}}]},"documentation":{"id":7435,"nodeType":"StructuredDocumentation","src":"17917:312:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:21","nodeType":"FunctionDefinition","parameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"value","nameLocation":"18259:5:21","nodeType":"VariableDeclaration","scope":7460,"src":"18252:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7436,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:21"},"returnParameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7440,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:21","nodeType":"VariableDeclaration","scope":7460,"src":"18289:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7439,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:21"},"scope":8255,"src":"18234:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7485,"nodeType":"Block","src":"18855:150:21","statements":[{"expression":{"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"18865:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18885:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7469,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:21","typeDescriptions":{}}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7474,"nodeType":"ExpressionStatement","src":"18865:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"18905:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18919:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7484,"nodeType":"IfStatement","src":"18901:98:21","trueBody":{"id":7483,"nodeType":"Block","src":"18926:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:21","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"18982:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"18947:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7482,"nodeType":"RevertStatement","src":"18940:48:21"}]}}]},"documentation":{"id":7461,"nodeType":"StructuredDocumentation","src":"18464:312:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:21","nodeType":"FunctionDefinition","parameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"value","nameLocation":"18806:5:21","nodeType":"VariableDeclaration","scope":7486,"src":"18799:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7462,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:21"},"returnParameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:21","nodeType":"VariableDeclaration","scope":7486,"src":"18836:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7465,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:21"},"scope":8255,"src":"18781:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7511,"nodeType":"Block","src":"19402:150:21","statements":[{"expression":{"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"19412:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"19432:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7495,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:21","typeDescriptions":{}}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7500,"nodeType":"ExpressionStatement","src":"19412:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"19452:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"19466:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7510,"nodeType":"IfStatement","src":"19448:98:21","trueBody":{"id":7509,"nodeType":"Block","src":"19473:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:21","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"19529:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"19494:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7508,"nodeType":"RevertStatement","src":"19487:48:21"}]}}]},"documentation":{"id":7487,"nodeType":"StructuredDocumentation","src":"19011:312:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:21","nodeType":"FunctionDefinition","parameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7489,"mutability":"mutable","name":"value","nameLocation":"19353:5:21","nodeType":"VariableDeclaration","scope":7512,"src":"19346:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7488,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:21"},"returnParameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:21","nodeType":"VariableDeclaration","scope":7512,"src":"19383:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7491,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:21"},"scope":8255,"src":"19328:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7537,"nodeType":"Block","src":"19949:150:21","statements":[{"expression":{"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"19959:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"19979:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7521,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:21","typeDescriptions":{}}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7526,"nodeType":"ExpressionStatement","src":"19959:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"19999:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"20013:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7536,"nodeType":"IfStatement","src":"19995:98:21","trueBody":{"id":7535,"nodeType":"Block","src":"20020:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:21","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"20076:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"20041:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7534,"nodeType":"RevertStatement","src":"20034:48:21"}]}}]},"documentation":{"id":7513,"nodeType":"StructuredDocumentation","src":"19558:312:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:21","nodeType":"FunctionDefinition","parameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"value","nameLocation":"19900:5:21","nodeType":"VariableDeclaration","scope":7538,"src":"19893:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7514,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:21"},"returnParameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7518,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:21","nodeType":"VariableDeclaration","scope":7538,"src":"19930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7517,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:21"},"scope":8255,"src":"19875:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7563,"nodeType":"Block","src":"20496:150:21","statements":[{"expression":{"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"20506:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20526:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7547,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:21","typeDescriptions":{}}},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7552,"nodeType":"ExpressionStatement","src":"20506:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"20546:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20560:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7562,"nodeType":"IfStatement","src":"20542:98:21","trueBody":{"id":7561,"nodeType":"Block","src":"20567:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:21","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"20623:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"20588:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7560,"nodeType":"RevertStatement","src":"20581:48:21"}]}}]},"documentation":{"id":7539,"nodeType":"StructuredDocumentation","src":"20105:312:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:21","nodeType":"FunctionDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"value","nameLocation":"20447:5:21","nodeType":"VariableDeclaration","scope":7564,"src":"20440:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7540,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:21"},"returnParameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:21","nodeType":"VariableDeclaration","scope":7564,"src":"20477:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7543,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:21"},"scope":8255,"src":"20422:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7589,"nodeType":"Block","src":"21043:150:21","statements":[{"expression":{"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"21053:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"21073:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7573,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:21","typeDescriptions":{}}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7578,"nodeType":"ExpressionStatement","src":"21053:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"21093:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"21107:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7588,"nodeType":"IfStatement","src":"21089:98:21","trueBody":{"id":7587,"nodeType":"Block","src":"21114:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:21","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"21170:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7582,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"21135:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7586,"nodeType":"RevertStatement","src":"21128:48:21"}]}}]},"documentation":{"id":7565,"nodeType":"StructuredDocumentation","src":"20652:312:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7590,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:21","nodeType":"FunctionDefinition","parameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"value","nameLocation":"20994:5:21","nodeType":"VariableDeclaration","scope":7590,"src":"20987:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7566,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:21"},"returnParameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7570,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:21","nodeType":"VariableDeclaration","scope":7590,"src":"21024:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7569,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:21"},"scope":8255,"src":"20969:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7615,"nodeType":"Block","src":"21590:150:21","statements":[{"expression":{"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"21600:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21620:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7599,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:21","typeDescriptions":{}}},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7604,"nodeType":"ExpressionStatement","src":"21600:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"21640:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21654:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"IfStatement","src":"21636:98:21","trueBody":{"id":7613,"nodeType":"Block","src":"21661:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"21717:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7608,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"21682:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7612,"nodeType":"RevertStatement","src":"21675:48:21"}]}}]},"documentation":{"id":7591,"nodeType":"StructuredDocumentation","src":"21199:312:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7616,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:21","nodeType":"FunctionDefinition","parameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"value","nameLocation":"21541:5:21","nodeType":"VariableDeclaration","scope":7616,"src":"21534:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7592,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:21"},"returnParameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:21","nodeType":"VariableDeclaration","scope":7616,"src":"21571:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7595,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:21"},"scope":8255,"src":"21516:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7641,"nodeType":"Block","src":"22137:150:21","statements":[{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"22147:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"22167:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7625,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:21","typeDescriptions":{}}},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7630,"nodeType":"ExpressionStatement","src":"22147:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"22187:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"22201:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7640,"nodeType":"IfStatement","src":"22183:98:21","trueBody":{"id":7639,"nodeType":"Block","src":"22208:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"22264:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7634,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"22229:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7638,"nodeType":"RevertStatement","src":"22222:48:21"}]}}]},"documentation":{"id":7617,"nodeType":"StructuredDocumentation","src":"21746:312:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7642,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:21","nodeType":"FunctionDefinition","parameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"value","nameLocation":"22088:5:21","nodeType":"VariableDeclaration","scope":7642,"src":"22081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7618,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:21"},"returnParameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:21","nodeType":"VariableDeclaration","scope":7642,"src":"22118:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7621,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:21"},"scope":8255,"src":"22063:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7667,"nodeType":"Block","src":"22684:150:21","statements":[{"expression":{"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"22694:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7651,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:21","typeDescriptions":{}}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7656,"nodeType":"ExpressionStatement","src":"22694:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"22734:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7666,"nodeType":"IfStatement","src":"22730:98:21","trueBody":{"id":7665,"nodeType":"Block","src":"22755:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:21","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"22811:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7660,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"22776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7664,"nodeType":"RevertStatement","src":"22769:48:21"}]}}]},"documentation":{"id":7643,"nodeType":"StructuredDocumentation","src":"22293:312:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7668,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:21","nodeType":"FunctionDefinition","parameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7645,"mutability":"mutable","name":"value","nameLocation":"22635:5:21","nodeType":"VariableDeclaration","scope":7668,"src":"22628:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7644,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:21"},"returnParameters":{"id":7649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7648,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:21","nodeType":"VariableDeclaration","scope":7668,"src":"22665:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7647,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:21"},"scope":8255,"src":"22610:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7693,"nodeType":"Block","src":"23231:150:21","statements":[{"expression":{"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"23241:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"23261:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7677,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:21","typeDescriptions":{}}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7682,"nodeType":"ExpressionStatement","src":"23241:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"23281:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"23295:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7692,"nodeType":"IfStatement","src":"23277:98:21","trueBody":{"id":7691,"nodeType":"Block","src":"23302:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:21","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"23358:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7686,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"23323:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7690,"nodeType":"RevertStatement","src":"23316:48:21"}]}}]},"documentation":{"id":7669,"nodeType":"StructuredDocumentation","src":"22840:312:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7694,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:21","nodeType":"FunctionDefinition","parameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"value","nameLocation":"23182:5:21","nodeType":"VariableDeclaration","scope":7694,"src":"23175:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7670,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:21"},"returnParameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:21","nodeType":"VariableDeclaration","scope":7694,"src":"23212:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7673,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:21"},"scope":8255,"src":"23157:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7719,"nodeType":"Block","src":"23778:150:21","statements":[{"expression":{"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"23788:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23808:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7703,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:21","typeDescriptions":{}}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7708,"nodeType":"ExpressionStatement","src":"23788:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"23828:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23842:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7718,"nodeType":"IfStatement","src":"23824:98:21","trueBody":{"id":7717,"nodeType":"Block","src":"23849:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:21","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"23905:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7712,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"23870:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7716,"nodeType":"RevertStatement","src":"23863:48:21"}]}}]},"documentation":{"id":7695,"nodeType":"StructuredDocumentation","src":"23387:312:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7720,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:21","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"value","nameLocation":"23729:5:21","nodeType":"VariableDeclaration","scope":7720,"src":"23722:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7696,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:21"},"returnParameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:21","nodeType":"VariableDeclaration","scope":7720,"src":"23759:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7699,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:21"},"scope":8255,"src":"23704:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7745,"nodeType":"Block","src":"24325:150:21","statements":[{"expression":{"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"24335:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"24355:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7729,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:21","typeDescriptions":{}}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7734,"nodeType":"ExpressionStatement","src":"24335:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"24375:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"24389:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7744,"nodeType":"IfStatement","src":"24371:98:21","trueBody":{"id":7743,"nodeType":"Block","src":"24396:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:21","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"24452:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7738,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"24417:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7742,"nodeType":"RevertStatement","src":"24410:48:21"}]}}]},"documentation":{"id":7721,"nodeType":"StructuredDocumentation","src":"23934:312:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7746,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:21","nodeType":"FunctionDefinition","parameters":{"id":7724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7723,"mutability":"mutable","name":"value","nameLocation":"24276:5:21","nodeType":"VariableDeclaration","scope":7746,"src":"24269:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7722,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:21"},"returnParameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:21","nodeType":"VariableDeclaration","scope":7746,"src":"24306:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7725,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:21"},"scope":8255,"src":"24251:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7771,"nodeType":"Block","src":"24872:150:21","statements":[{"expression":{"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"24882:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24902:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7755,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:21","typeDescriptions":{}}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7760,"nodeType":"ExpressionStatement","src":"24882:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"24922:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24936:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7770,"nodeType":"IfStatement","src":"24918:98:21","trueBody":{"id":7769,"nodeType":"Block","src":"24943:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:21","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"24999:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7764,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"24964:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7768,"nodeType":"RevertStatement","src":"24957:48:21"}]}}]},"documentation":{"id":7747,"nodeType":"StructuredDocumentation","src":"24481:312:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7772,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:21","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"value","nameLocation":"24823:5:21","nodeType":"VariableDeclaration","scope":7772,"src":"24816:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7748,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:21"},"returnParameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:21","nodeType":"VariableDeclaration","scope":7772,"src":"24853:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7751,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:21"},"scope":8255,"src":"24798:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7797,"nodeType":"Block","src":"25419:150:21","statements":[{"expression":{"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"25429:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"25449:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7781,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:21","typeDescriptions":{}}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7786,"nodeType":"ExpressionStatement","src":"25429:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"25469:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"25483:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7796,"nodeType":"IfStatement","src":"25465:98:21","trueBody":{"id":7795,"nodeType":"Block","src":"25490:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:21","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7775,"src":"25546:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"25511:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7794,"nodeType":"RevertStatement","src":"25504:48:21"}]}}]},"documentation":{"id":7773,"nodeType":"StructuredDocumentation","src":"25028:312:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:21","nodeType":"FunctionDefinition","parameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"value","nameLocation":"25370:5:21","nodeType":"VariableDeclaration","scope":7798,"src":"25363:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7774,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:21"},"returnParameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:21","nodeType":"VariableDeclaration","scope":7798,"src":"25400:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7777,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:21"},"scope":8255,"src":"25345:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7823,"nodeType":"Block","src":"25966:150:21","statements":[{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"25976:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25996:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7807,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:21","typeDescriptions":{}}},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7812,"nodeType":"ExpressionStatement","src":"25976:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"26016:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26030:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7822,"nodeType":"IfStatement","src":"26012:98:21","trueBody":{"id":7821,"nodeType":"Block","src":"26037:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26093:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"26058:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7820,"nodeType":"RevertStatement","src":"26051:48:21"}]}}]},"documentation":{"id":7799,"nodeType":"StructuredDocumentation","src":"25575:312:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:21","nodeType":"FunctionDefinition","parameters":{"id":7802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7801,"mutability":"mutable","name":"value","nameLocation":"25917:5:21","nodeType":"VariableDeclaration","scope":7824,"src":"25910:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7800,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:21"},"returnParameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:21","nodeType":"VariableDeclaration","scope":7824,"src":"25947:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7803,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:21"},"scope":8255,"src":"25892:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7849,"nodeType":"Block","src":"26513:150:21","statements":[{"expression":{"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"26523:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26543:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7833,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:21","typeDescriptions":{}}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7838,"nodeType":"ExpressionStatement","src":"26523:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"26563:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26577:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7848,"nodeType":"IfStatement","src":"26559:98:21","trueBody":{"id":7847,"nodeType":"Block","src":"26584:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:21","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"26640:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"26605:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7846,"nodeType":"RevertStatement","src":"26598:48:21"}]}}]},"documentation":{"id":7825,"nodeType":"StructuredDocumentation","src":"26122:312:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:21","nodeType":"FunctionDefinition","parameters":{"id":7828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7827,"mutability":"mutable","name":"value","nameLocation":"26464:5:21","nodeType":"VariableDeclaration","scope":7850,"src":"26457:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7826,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:21"},"returnParameters":{"id":7831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:21","nodeType":"VariableDeclaration","scope":7850,"src":"26494:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7829,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:21"},"scope":8255,"src":"26439:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7875,"nodeType":"Block","src":"27060:150:21","statements":[{"expression":{"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"27070:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"27090:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7859,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:21","typeDescriptions":{}}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7864,"nodeType":"ExpressionStatement","src":"27070:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7856,"src":"27110:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"27124:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7874,"nodeType":"IfStatement","src":"27106:98:21","trueBody":{"id":7873,"nodeType":"Block","src":"27131:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:21","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7853,"src":"27187:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"27152:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7872,"nodeType":"RevertStatement","src":"27145:48:21"}]}}]},"documentation":{"id":7851,"nodeType":"StructuredDocumentation","src":"26669:312:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:21","nodeType":"FunctionDefinition","parameters":{"id":7854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"value","nameLocation":"27011:5:21","nodeType":"VariableDeclaration","scope":7876,"src":"27004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7852,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:21"},"returnParameters":{"id":7857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7856,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:21","nodeType":"VariableDeclaration","scope":7876,"src":"27041:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7855,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:21"},"scope":8255,"src":"26986:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7901,"nodeType":"Block","src":"27607:150:21","statements":[{"expression":{"id":7889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"27617:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27637:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7885,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:21","typeDescriptions":{}}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7890,"nodeType":"ExpressionStatement","src":"27617:26:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"27657:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7900,"nodeType":"IfStatement","src":"27653:98:21","trueBody":{"id":7899,"nodeType":"Block","src":"27678:73:21","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"27734:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"27699:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7898,"nodeType":"RevertStatement","src":"27692:48:21"}]}}]},"documentation":{"id":7877,"nodeType":"StructuredDocumentation","src":"27216:312:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:21","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"value","nameLocation":"27558:5:21","nodeType":"VariableDeclaration","scope":7902,"src":"27551:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7878,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:21"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:21","nodeType":"VariableDeclaration","scope":7902,"src":"27588:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7881,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:21"},"scope":8255,"src":"27533:224:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7927,"nodeType":"Block","src":"28147:148:21","statements":[{"expression":{"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"28157:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"28176:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7911,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:21","typeDescriptions":{}}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7916,"nodeType":"ExpressionStatement","src":"28157:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"28196:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"28210:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7926,"nodeType":"IfStatement","src":"28192:97:21","trueBody":{"id":7925,"nodeType":"Block","src":"28217:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"28272:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"28238:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7924,"nodeType":"RevertStatement","src":"28231:47:21"}]}}]},"documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"27763:307:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:21","nodeType":"FunctionDefinition","parameters":{"id":7906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"value","nameLocation":"28099:5:21","nodeType":"VariableDeclaration","scope":7928,"src":"28092:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7904,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:21"},"returnParameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:21","nodeType":"VariableDeclaration","scope":7928,"src":"28129:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7907,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:21"},"scope":8255,"src":"28075:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7953,"nodeType":"Block","src":"28685:148:21","statements":[{"expression":{"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"28695:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28714:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7937,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:21","typeDescriptions":{}}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7942,"nodeType":"ExpressionStatement","src":"28695:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"28734:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28748:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7952,"nodeType":"IfStatement","src":"28730:97:21","trueBody":{"id":7951,"nodeType":"Block","src":"28755:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:21","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"28810:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"28776:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7950,"nodeType":"RevertStatement","src":"28769:47:21"}]}}]},"documentation":{"id":7929,"nodeType":"StructuredDocumentation","src":"28301:307:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:21","nodeType":"FunctionDefinition","parameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"value","nameLocation":"28637:5:21","nodeType":"VariableDeclaration","scope":7954,"src":"28630:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7930,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:21"},"returnParameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:21","nodeType":"VariableDeclaration","scope":7954,"src":"28667:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7933,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:21"},"scope":8255,"src":"28613:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7979,"nodeType":"Block","src":"29223:148:21","statements":[{"expression":{"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"29233:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"29252:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7963,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:21","typeDescriptions":{}}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7968,"nodeType":"ExpressionStatement","src":"29233:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"29272:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"29286:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7978,"nodeType":"IfStatement","src":"29268:97:21","trueBody":{"id":7977,"nodeType":"Block","src":"29293:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:21","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"29348:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"29314:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7976,"nodeType":"RevertStatement","src":"29307:47:21"}]}}]},"documentation":{"id":7955,"nodeType":"StructuredDocumentation","src":"28839:307:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:21","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"value","nameLocation":"29175:5:21","nodeType":"VariableDeclaration","scope":7980,"src":"29168:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7956,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:21"},"returnParameters":{"id":7961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7960,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:21","nodeType":"VariableDeclaration","scope":7980,"src":"29205:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7959,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:21"},"scope":8255,"src":"29151:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8005,"nodeType":"Block","src":"29761:148:21","statements":[{"expression":{"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"29771:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29790:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7989,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:21","typeDescriptions":{}}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7994,"nodeType":"ExpressionStatement","src":"29771:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"29810:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29824:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8004,"nodeType":"IfStatement","src":"29806:97:21","trueBody":{"id":8003,"nodeType":"Block","src":"29831:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"29886:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"29852:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8002,"nodeType":"RevertStatement","src":"29845:47:21"}]}}]},"documentation":{"id":7981,"nodeType":"StructuredDocumentation","src":"29377:307:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:21","nodeType":"FunctionDefinition","parameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"value","nameLocation":"29713:5:21","nodeType":"VariableDeclaration","scope":8006,"src":"29706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7982,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:21"},"returnParameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:21","nodeType":"VariableDeclaration","scope":8006,"src":"29743:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7985,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:21"},"scope":8255,"src":"29689:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8031,"nodeType":"Block","src":"30299:148:21","statements":[{"expression":{"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"30309:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"30328:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8015,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:21","typeDescriptions":{}}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8020,"nodeType":"ExpressionStatement","src":"30309:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"30348:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8030,"nodeType":"IfStatement","src":"30344:97:21","trueBody":{"id":8029,"nodeType":"Block","src":"30369:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"30424:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"30390:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8028,"nodeType":"RevertStatement","src":"30383:47:21"}]}}]},"documentation":{"id":8007,"nodeType":"StructuredDocumentation","src":"29915:307:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:21","nodeType":"FunctionDefinition","parameters":{"id":8010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8009,"mutability":"mutable","name":"value","nameLocation":"30251:5:21","nodeType":"VariableDeclaration","scope":8032,"src":"30244:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8008,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:21"},"returnParameters":{"id":8013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8012,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:21","nodeType":"VariableDeclaration","scope":8032,"src":"30281:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8011,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:21"},"scope":8255,"src":"30227:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8057,"nodeType":"Block","src":"30837:148:21","statements":[{"expression":{"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"30847:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30866:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8041,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:21","typeDescriptions":{}}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8046,"nodeType":"ExpressionStatement","src":"30847:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"30886:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8056,"nodeType":"IfStatement","src":"30882:97:21","trueBody":{"id":8055,"nodeType":"Block","src":"30907:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:21","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8035,"src":"30962:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"30928:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8054,"nodeType":"RevertStatement","src":"30921:47:21"}]}}]},"documentation":{"id":8033,"nodeType":"StructuredDocumentation","src":"30453:307:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:21","nodeType":"FunctionDefinition","parameters":{"id":8036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8035,"mutability":"mutable","name":"value","nameLocation":"30789:5:21","nodeType":"VariableDeclaration","scope":8058,"src":"30782:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8034,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:21"},"returnParameters":{"id":8039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8038,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:21","nodeType":"VariableDeclaration","scope":8058,"src":"30819:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8037,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:21"},"scope":8255,"src":"30765:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8083,"nodeType":"Block","src":"31375:148:21","statements":[{"expression":{"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"31385:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"31404:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8067,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:21","typeDescriptions":{}}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8072,"nodeType":"ExpressionStatement","src":"31385:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"31424:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"31438:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8082,"nodeType":"IfStatement","src":"31420:97:21","trueBody":{"id":8081,"nodeType":"Block","src":"31445:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8061,"src":"31500:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"31466:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8080,"nodeType":"RevertStatement","src":"31459:47:21"}]}}]},"documentation":{"id":8059,"nodeType":"StructuredDocumentation","src":"30991:307:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:21","nodeType":"FunctionDefinition","parameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8061,"mutability":"mutable","name":"value","nameLocation":"31327:5:21","nodeType":"VariableDeclaration","scope":8084,"src":"31320:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8060,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:21"},"returnParameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:21","nodeType":"VariableDeclaration","scope":8084,"src":"31357:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8063,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:21"},"scope":8255,"src":"31303:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8109,"nodeType":"Block","src":"31913:148:21","statements":[{"expression":{"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"31923:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31942:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8093,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:21","typeDescriptions":{}}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8098,"nodeType":"ExpressionStatement","src":"31923:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8090,"src":"31962:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8108,"nodeType":"IfStatement","src":"31958:97:21","trueBody":{"id":8107,"nodeType":"Block","src":"31983:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"32038:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"32004:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8106,"nodeType":"RevertStatement","src":"31997:47:21"}]}}]},"documentation":{"id":8085,"nodeType":"StructuredDocumentation","src":"31529:307:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:21","nodeType":"FunctionDefinition","parameters":{"id":8088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8087,"mutability":"mutable","name":"value","nameLocation":"31865:5:21","nodeType":"VariableDeclaration","scope":8110,"src":"31858:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8086,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:21"},"returnParameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8090,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:21","nodeType":"VariableDeclaration","scope":8110,"src":"31895:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8089,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:21"},"scope":8255,"src":"31841:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8135,"nodeType":"Block","src":"32451:148:21","statements":[{"expression":{"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"32461:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"32480:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8119,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:21","typeDescriptions":{}}},"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8124,"nodeType":"ExpressionStatement","src":"32461:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8116,"src":"32500:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"32514:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8134,"nodeType":"IfStatement","src":"32496:97:21","trueBody":{"id":8133,"nodeType":"Block","src":"32521:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8113,"src":"32576:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"32542:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8132,"nodeType":"RevertStatement","src":"32535:47:21"}]}}]},"documentation":{"id":8111,"nodeType":"StructuredDocumentation","src":"32067:307:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:21","nodeType":"FunctionDefinition","parameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"value","nameLocation":"32403:5:21","nodeType":"VariableDeclaration","scope":8136,"src":"32396:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8112,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:21"},"returnParameters":{"id":8117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8116,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:21","nodeType":"VariableDeclaration","scope":8136,"src":"32433:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8115,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:21"},"scope":8255,"src":"32379:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8161,"nodeType":"Block","src":"32989:148:21","statements":[{"expression":{"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"32999:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"33018:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8145,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:21","typeDescriptions":{}}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8150,"nodeType":"ExpressionStatement","src":"32999:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"33038:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"33052:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8160,"nodeType":"IfStatement","src":"33034:97:21","trueBody":{"id":8159,"nodeType":"Block","src":"33059:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:21","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8139,"src":"33114:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"33080:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8158,"nodeType":"RevertStatement","src":"33073:47:21"}]}}]},"documentation":{"id":8137,"nodeType":"StructuredDocumentation","src":"32605:307:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:21","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"mutability":"mutable","name":"value","nameLocation":"32941:5:21","nodeType":"VariableDeclaration","scope":8162,"src":"32934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8138,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:21"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:21","nodeType":"VariableDeclaration","scope":8162,"src":"32971:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8141,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:21"},"scope":8255,"src":"32917:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8187,"nodeType":"Block","src":"33527:148:21","statements":[{"expression":{"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"33537:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33556:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8171,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:21","typeDescriptions":{}}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8176,"nodeType":"ExpressionStatement","src":"33537:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"33576:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33590:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8186,"nodeType":"IfStatement","src":"33572:97:21","trueBody":{"id":8185,"nodeType":"Block","src":"33597:72:21","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"33652:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"33618:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8184,"nodeType":"RevertStatement","src":"33611:47:21"}]}}]},"documentation":{"id":8163,"nodeType":"StructuredDocumentation","src":"33143:307:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:21","nodeType":"FunctionDefinition","parameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"value","nameLocation":"33479:5:21","nodeType":"VariableDeclaration","scope":8188,"src":"33472:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8164,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:21"},"returnParameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8168,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:21","nodeType":"VariableDeclaration","scope":8188,"src":"33509:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8167,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:21"},"scope":8255,"src":"33455:220:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8213,"nodeType":"Block","src":"34058:146:21","statements":[{"expression":{"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"34068:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"34086:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8197,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:21","typeDescriptions":{}}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8202,"nodeType":"ExpressionStatement","src":"34068:24:21"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8194,"src":"34106:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"34120:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8212,"nodeType":"IfStatement","src":"34102:96:21","trueBody":{"id":8211,"nodeType":"Block","src":"34127:71:21","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"34181:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"34148:29:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8210,"nodeType":"RevertStatement","src":"34141:46:21"}]}}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"33681:302:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:21","nodeType":"FunctionDefinition","parameters":{"id":8192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"value","nameLocation":"34011:5:21","nodeType":"VariableDeclaration","scope":8214,"src":"34004:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8190,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:21"},"returnParameters":{"id":8195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8194,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:21","nodeType":"VariableDeclaration","scope":8214,"src":"34041:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8193,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:21"},"scope":8255,"src":"33988:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8243,"nodeType":"Block","src":"34444:250:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34557:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8226,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8225,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:21","memberName":"max","nodeType":"MemberAccess","src":"34573:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8223,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:21","typeDescriptions":{}}},"id":8230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8237,"nodeType":"IfStatement","src":"34553:105:21","trueBody":{"id":8236,"nodeType":"Block","src":"34592:66:21","statements":[{"errorCall":{"arguments":[{"id":8233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34641:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8232,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"34613:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8235,"nodeType":"RevertStatement","src":"34606:41:21"}]}},{"expression":{"arguments":[{"id":8240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8217,"src":"34681:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8238,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:21","typeDescriptions":{}}},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8221,"id":8242,"nodeType":"Return","src":"34667:20:21"}]},"documentation":{"id":8215,"nodeType":"StructuredDocumentation","src":"34210:165:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8244,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:21","nodeType":"FunctionDefinition","parameters":{"id":8218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8217,"mutability":"mutable","name":"value","nameLocation":"34406:5:21","nodeType":"VariableDeclaration","scope":8244,"src":"34398:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8216,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:21"},"returnParameters":{"id":8221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8244,"src":"34436:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8219,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:21"},"scope":8255,"src":"34380:314:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8253,"nodeType":"Block","src":"34853:87:21","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:21","statements":[{"nodeType":"YulAssignment","src":"34902:22:21","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:21"},"nodeType":"YulFunctionCall","src":"34914:9:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:21"},"nodeType":"YulFunctionCall","src":"34907:17:21"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8247,"isOffset":false,"isSlot":false,"src":"34921:1:21","valueSize":1},{"declaration":8250,"isOffset":false,"isSlot":false,"src":"34902:1:21","valueSize":1}],"flags":["memory-safe"],"id":8252,"nodeType":"InlineAssembly","src":"34863:71:21"}]},"documentation":{"id":8245,"nodeType":"StructuredDocumentation","src":"34700:90:21","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8254,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:21","nodeType":"FunctionDefinition","parameters":{"id":8248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8247,"mutability":"mutable","name":"b","nameLocation":"34816:1:21","nodeType":"VariableDeclaration","scope":8254,"src":"34811:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8246,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:21"},"returnParameters":{"id":8251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8250,"mutability":"mutable","name":"u","nameLocation":"34850:1:21","nodeType":"VariableDeclaration","scope":8254,"src":"34842:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8249,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:21"},"scope":8255,"src":"34795:145:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8256,"src":"769:34173:21","usedErrors":[6500,6505,6512,6517],"usedEvents":[]}],"src":"192:34751:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8255],"SignedMath":[8399]},"id":8400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8400,"sourceUnit":8256,"src":"135:40:22","symbolAliases":[{"foreign":{"id":8258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"143:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8260,"nodeType":"StructuredDocumentation","src":"177:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8399,"linearizedBaseContracts":[8399],"name":"SignedMath","nameLocation":"266:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":8289,"nodeType":"Block","src":"746:215:22","statements":[{"id":8288,"nodeType":"UncheckedBlock","src":"756:199:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"894:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"900:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"904:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8281,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"932:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8279,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"916:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8255_$","typeString":"type(library SafeCast)"}},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8254,"src":"916:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8277,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:22","typeDescriptions":{}}},"id":8283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8271,"id":8287,"nodeType":"Return","src":"887:57:22"}]}]},"documentation":{"id":8261,"nodeType":"StructuredDocumentation","src":"283:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8290,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:22","nodeType":"FunctionDefinition","parameters":{"id":8268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8263,"mutability":"mutable","name":"condition","nameLocation":"684:9:22","nodeType":"VariableDeclaration","scope":8290,"src":"679:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8262,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8265,"mutability":"mutable","name":"a","nameLocation":"702:1:22","nodeType":"VariableDeclaration","scope":8290,"src":"695:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8264,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8267,"mutability":"mutable","name":"b","nameLocation":"712:1:22","nodeType":"VariableDeclaration","scope":8290,"src":"705:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8266,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:22"},"returnParameters":{"id":8271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8290,"src":"738:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8269,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:22"},"scope":8399,"src":"662:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8308,"nodeType":"Block","src":"1102:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"1127:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"1131:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"1134:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"1137:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8300,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"1119:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8299,"id":8307,"nodeType":"Return","src":"1112:27:22"}]},"documentation":{"id":8291,"nodeType":"StructuredDocumentation","src":"967:66:22","text":" @dev Returns the largest of two signed numbers."},"id":8309,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:22","nodeType":"FunctionDefinition","parameters":{"id":8296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8293,"mutability":"mutable","name":"a","nameLocation":"1058:1:22","nodeType":"VariableDeclaration","scope":8309,"src":"1051:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8292,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8295,"mutability":"mutable","name":"b","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":8309,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8294,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:22"},"returnParameters":{"id":8299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8309,"src":"1094:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8297,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:22"},"scope":8399,"src":"1038:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8327,"nodeType":"Block","src":"1288:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"1313:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"1317:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"1320:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"1323:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8319,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"1305:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8318,"id":8326,"nodeType":"Return","src":"1298:27:22"}]},"documentation":{"id":8310,"nodeType":"StructuredDocumentation","src":"1152:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":8328,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:22","nodeType":"FunctionDefinition","parameters":{"id":8315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8312,"mutability":"mutable","name":"a","nameLocation":"1244:1:22","nodeType":"VariableDeclaration","scope":8328,"src":"1237:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8311,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8314,"mutability":"mutable","name":"b","nameLocation":"1254:1:22","nodeType":"VariableDeclaration","scope":8328,"src":"1247:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8313,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:22"},"returnParameters":{"id":8318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8328,"src":"1280:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8316,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:22"},"scope":8399,"src":"1224:108:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8371,"nodeType":"Block","src":"1537:162:22","statements":[{"assignments":[8339],"declarations":[{"constant":false,"id":8339,"mutability":"mutable","name":"x","nameLocation":"1606:1:22","nodeType":"VariableDeclaration","scope":8371,"src":"1599:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8338,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8352,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1611:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"1615:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1622:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8345,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"1626:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8353,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"1651:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8358,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"1671:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{}}},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8354,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:22","typeDescriptions":{}}},"id":8362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"1685:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8364,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"1689:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8337,"id":8370,"nodeType":"Return","src":"1644:48:22"}]},"documentation":{"id":8329,"nodeType":"StructuredDocumentation","src":"1338:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8372,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:22","nodeType":"FunctionDefinition","parameters":{"id":8334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8331,"mutability":"mutable","name":"a","nameLocation":"1493:1:22","nodeType":"VariableDeclaration","scope":8372,"src":"1486:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8330,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8333,"mutability":"mutable","name":"b","nameLocation":"1503:1:22","nodeType":"VariableDeclaration","scope":8372,"src":"1496:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8332,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:22"},"returnParameters":{"id":8337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8372,"src":"1529:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8335,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:22"},"scope":8399,"src":"1469:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8397,"nodeType":"Block","src":"1843:767:22","statements":[{"id":8396,"nodeType":"UncheckedBlock","src":"1853:751:22","statements":[{"assignments":[8381],"declarations":[{"constant":false,"id":8381,"mutability":"mutable","name":"mask","nameLocation":"2424:4:22","nodeType":"VariableDeclaration","scope":8396,"src":"2417:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8380,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8385,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8382,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"2431:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8388,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"2576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8389,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"2580:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8392,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8381,"src":"2588:4:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:22","typeDescriptions":{}}},"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8379,"id":8395,"nodeType":"Return","src":"2560:33:22"}]}]},"documentation":{"id":8373,"nodeType":"StructuredDocumentation","src":"1705:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8398,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:22","nodeType":"FunctionDefinition","parameters":{"id":8376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8375,"mutability":"mutable","name":"n","nameLocation":"1808:1:22","nodeType":"VariableDeclaration","scope":8398,"src":"1801:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8374,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:22"},"returnParameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8398,"src":"1834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:22"},"scope":8399,"src":"1788:822:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8400,"src":"258:2354:22","usedErrors":[],"usedEvents":[]}],"src":"109:2504:22"},"id":22},"contracts/UnchainedTickets.sol":{"ast":{"absolutePath":"contracts/UnchainedTickets.sol","exportedSymbols":{"Arrays":[3063],"Context":[3125],"ERC1155":[1221],"ERC1155Burnable":[1466],"ERC1155Supply":[1648],"ERC1155Utils":[1818],"ERC165":[4857],"ERC2981":[2085],"IERC1155":[1344],"IERC1155Errors":[304],"IERC1155MetadataURI":[1664],"IERC165":[4869],"IERC2981":[167],"Math":[6490],"Ownable":[147],"SafeCast":[8255],"SignedMath":[8399],"Strings":[4833],"UnchainedTickets":[9691]},"id":9692,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":8402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9692,"sourceUnit":1222,"src":"58:59:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9692,"sourceUnit":148,"src":"118:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol","id":8404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9692,"sourceUnit":1467,"src":"171:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","id":8405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9692,"sourceUnit":1649,"src":"250:76:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"@openzeppelin/contracts/token/common/ERC2981.sol","id":8406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9692,"sourceUnit":2086,"src":"327:58:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":8407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9692,"sourceUnit":4834,"src":"386:51:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8409,"name":"ERC1155","nameLocations":["990:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"990:7:23"},"id":8410,"nodeType":"InheritanceSpecifier","src":"990:7:23"},{"baseName":{"id":8411,"name":"Ownable","nameLocations":["999:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"999:7:23"},"id":8412,"nodeType":"InheritanceSpecifier","src":"999:7:23"},{"baseName":{"id":8413,"name":"ERC1155Burnable","nameLocations":["1008:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1008:15:23"},"id":8414,"nodeType":"InheritanceSpecifier","src":"1008:15:23"},{"baseName":{"id":8415,"name":"ERC1155Supply","nameLocations":["1025:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"1025:13:23"},"id":8416,"nodeType":"InheritanceSpecifier","src":"1025:13:23"},{"baseName":{"id":8417,"name":"ERC2981","nameLocations":["1040:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":2085,"src":"1040:7:23"},"id":8418,"nodeType":"InheritanceSpecifier","src":"1040:7:23"}],"canonicalName":"UnchainedTickets","contractDependencies":[],"contractKind":"contract","documentation":{"id":8408,"nodeType":"StructuredDocumentation","src":"439:521:23","text":" @title UnchainedTickets\n @dev Advanced ERC1155 NFT contract for event tickets on Base blockchain\n @notice Features:\n - Royalty enforcement (ERC2981) for secondary sales\n - Configurable ticket tiers (VIP, GA, etc.) with access control\n - Perks tracking (meals, drinks, etc.) and consumption status\n - Time-based resale restrictions (no sales during event)\n - Automatic transformation to souvenir NFT after use\n - Section and seat assignments\n - Anti-counterfeiting through blockchain ownership"},"fullyImplemented":true,"id":9691,"linearizedBaseContracts":[9691,2085,1648,1466,147,1221,304,1664,1344,4857,167,4869,3125],"name":"UnchainedTickets","nameLocation":"970:16:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8421,"libraryName":{"id":8419,"name":"Strings","nameLocations":["1060:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":4833,"src":"1060:7:23"},"nodeType":"UsingForDirective","src":"1054:26:23","typeName":{"id":8420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"06fdde03","id":8424,"mutability":"mutable","name":"name","nameLocation":"1125:4:23","nodeType":"VariableDeclaration","scope":9691,"src":"1111:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8422,"name":"string","nodeType":"ElementaryTypeName","src":"1111:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"556e636861696e6564205469636b657473","id":8423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1132:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_100e4b2fb67279a4cfbcdb485aabe320a7e3b7b84bb6efd6104842c25c34f442","typeString":"literal_string \"Unchained Tickets\""},"value":"Unchained Tickets"},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":8427,"mutability":"mutable","name":"symbol","nameLocation":"1171:6:23","nodeType":"VariableDeclaration","scope":9691,"src":"1157:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8425,"name":"string","nodeType":"ElementaryTypeName","src":"1157:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"554e4348","id":8426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1180:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_13306803fa2539dcfe7991f516b694b4cdc26866acae8cc076ff5e82f555c8c7","typeString":"literal_string \"UNCH\""},"value":"UNCH"},"visibility":"public"},{"constant":false,"id":8429,"mutability":"mutable","name":"_baseURI","nameLocation":"1243:8:23","nodeType":"VariableDeclaration","scope":9691,"src":"1228:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8428,"name":"string","nodeType":"ElementaryTypeName","src":"1228:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"canonicalName":"UnchainedTickets.TicketTier","id":8435,"members":[{"id":8430,"name":"GENERAL_ADMISSION","nameLocation":"1309:17:23","nodeType":"EnumValue","src":"1309:17:23"},{"id":8431,"name":"VIP","nameLocation":"1336:3:23","nodeType":"EnumValue","src":"1336:3:23"},{"id":8432,"name":"PREMIUM","nameLocation":"1349:7:23","nodeType":"EnumValue","src":"1349:7:23"},{"id":8433,"name":"BACKSTAGE","nameLocation":"1366:9:23","nodeType":"EnumValue","src":"1366:9:23"},{"id":8434,"name":"CUSTOM","nameLocation":"1385:6:23","nodeType":"EnumValue","src":"1385:6:23"}],"name":"TicketTier","nameLocation":"1288:10:23","nodeType":"EnumDefinition","src":"1283:114:23"},{"canonicalName":"UnchainedTickets.EventInfo","id":8454,"members":[{"constant":false,"id":8437,"mutability":"mutable","name":"maxSupply","nameLocation":"1462:9:23","nodeType":"VariableDeclaration","scope":8454,"src":"1454:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8436,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8439,"mutability":"mutable","name":"eventTimestamp","nameLocation":"1532:14:23","nodeType":"VariableDeclaration","scope":8454,"src":"1524:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1524:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8441,"mutability":"mutable","name":"eventEndTimestamp","nameLocation":"1605:17:23","nodeType":"VariableDeclaration","scope":8454,"src":"1597:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8443,"mutability":"mutable","name":"transferable","nameLocation":"1682:12:23","nodeType":"VariableDeclaration","scope":8454,"src":"1677:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8442,"name":"bool","nodeType":"ElementaryTypeName","src":"1677:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8445,"mutability":"mutable","name":"active","nameLocation":"1762:6:23","nodeType":"VariableDeclaration","scope":8454,"src":"1757:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8444,"name":"bool","nodeType":"ElementaryTypeName","src":"1757:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8447,"mutability":"mutable","name":"metadataURI","nameLocation":"1836:11:23","nodeType":"VariableDeclaration","scope":8454,"src":"1829:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8446,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8449,"mutability":"mutable","name":"souvenirMetadataURI","nameLocation":"1910:19:23","nodeType":"VariableDeclaration","scope":8454,"src":"1903:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8448,"name":"string","nodeType":"ElementaryTypeName","src":"1903:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8451,"mutability":"mutable","name":"royaltyBps","nameLocation":"1990:10:23","nodeType":"VariableDeclaration","scope":8454,"src":"1983:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8450,"name":"uint96","nodeType":"ElementaryTypeName","src":"1983:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":8453,"mutability":"mutable","name":"royaltyRecipient","nameLocation":"2071:16:23","nodeType":"VariableDeclaration","scope":8454,"src":"2063:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8452,"name":"address","nodeType":"ElementaryTypeName","src":"2063:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"EventInfo","nameLocation":"1434:9:23","nodeType":"StructDefinition","scope":9691,"src":"1427:695:23","visibility":"public"},{"canonicalName":"UnchainedTickets.TierConfig","id":8470,"members":[{"constant":false,"id":8457,"mutability":"mutable","name":"tier","nameLocation":"2200:4:23","nodeType":"VariableDeclaration","scope":8470,"src":"2189:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TicketTier_$8435","typeString":"enum UnchainedTickets.TicketTier"},"typeName":{"id":8456,"nodeType":"UserDefinedTypeName","pathNode":{"id":8455,"name":"TicketTier","nameLocations":["2189:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":8435,"src":"2189:10:23"},"referencedDeclaration":8435,"src":"2189:10:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketTier_$8435","typeString":"enum UnchainedTickets.TicketTier"}},"visibility":"internal"},{"constant":false,"id":8459,"mutability":"mutable","name":"tierName","nameLocation":"2221:8:23","nodeType":"VariableDeclaration","scope":8470,"src":"2214:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8458,"name":"string","nodeType":"ElementaryTypeName","src":"2214:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8461,"mutability":"mutable","name":"maxSupply","nameLocation":"2294:9:23","nodeType":"VariableDeclaration","scope":8470,"src":"2286:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2286:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8463,"mutability":"mutable","name":"priceCents","nameLocation":"2359:10:23","nodeType":"VariableDeclaration","scope":8470,"src":"2351:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2351:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8466,"mutability":"mutable","name":"accessAreas","nameLocation":"2430:11:23","nodeType":"VariableDeclaration","scope":8470,"src":"2421:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8464,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8465,"nodeType":"ArrayTypeName","src":"2421:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8469,"mutability":"mutable","name":"includedPerks","nameLocation":"2496:13:23","nodeType":"VariableDeclaration","scope":8470,"src":"2487:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8467,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8468,"nodeType":"ArrayTypeName","src":"2487:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"name":"TierConfig","nameLocation":"2168:10:23","nodeType":"StructDefinition","scope":9691,"src":"2161:387:23","visibility":"public"},{"canonicalName":"UnchainedTickets.SeatAssignment","id":8479,"members":[{"constant":false,"id":8472,"mutability":"mutable","name":"section","nameLocation":"2650:7:23","nodeType":"VariableDeclaration","scope":8479,"src":"2643:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8471,"name":"string","nodeType":"ElementaryTypeName","src":"2643:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8474,"mutability":"mutable","name":"row","nameLocation":"2674:3:23","nodeType":"VariableDeclaration","scope":8479,"src":"2667:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8473,"name":"string","nodeType":"ElementaryTypeName","src":"2667:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8476,"mutability":"mutable","name":"seat","nameLocation":"2694:4:23","nodeType":"VariableDeclaration","scope":8479,"src":"2687:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8475,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8478,"mutability":"mutable","name":"assigned","nameLocation":"2713:8:23","nodeType":"VariableDeclaration","scope":8479,"src":"2708:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8477,"name":"bool","nodeType":"ElementaryTypeName","src":"2708:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SeatAssignment","nameLocation":"2618:14:23","nodeType":"StructDefinition","scope":9691,"src":"2611:117:23","visibility":"public"},{"canonicalName":"UnchainedTickets.PerkConsumption","id":8486,"members":[{"constant":false,"id":8481,"mutability":"mutable","name":"perkName","nameLocation":"2795:8:23","nodeType":"VariableDeclaration","scope":8486,"src":"2788:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8480,"name":"string","nodeType":"ElementaryTypeName","src":"2788:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8483,"mutability":"mutable","name":"maxQuantity","nameLocation":"2821:11:23","nodeType":"VariableDeclaration","scope":8486,"src":"2813:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8485,"mutability":"mutable","name":"consumed","nameLocation":"2891:8:23","nodeType":"VariableDeclaration","scope":8486,"src":"2883:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2883:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PerkConsumption","nameLocation":"2762:15:23","nodeType":"StructDefinition","scope":9691,"src":"2755:188:23","visibility":"public"},{"canonicalName":"UnchainedTickets.TicketState","id":8490,"members":[{"id":8487,"name":"ACTIVE","nameLocation":"3015:6:23","nodeType":"EnumValue","src":"3015:6:23"},{"id":8488,"name":"USED","nameLocation":"3066:4:23","nodeType":"EnumValue","src":"3066:4:23"},{"id":8489,"name":"SOUVENIR","nameLocation":"3124:8:23","nodeType":"EnumValue","src":"3124:8:23"}],"name":"TicketState","nameLocation":"2993:11:23","nodeType":"EnumDefinition","src":"2988:197:23"},{"constant":false,"functionSelector":"0b791430","id":8495,"mutability":"mutable","name":"events","nameLocation":"3244:6:23","nodeType":"VariableDeclaration","scope":9691,"src":"3207:43:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo)"},"typeName":{"id":8494,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3215:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3207:29:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8493,"nodeType":"UserDefinedTypeName","pathNode":{"id":8492,"name":"EventInfo","nameLocations":["3226:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"3226:9:23"},"referencedDeclaration":8454,"src":"3226:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage_ptr","typeString":"struct UnchainedTickets.EventInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"a8cb2f37","id":8501,"mutability":"mutable","name":"usedTickets","nameLocation":"3308:11:23","nodeType":"VariableDeclaration","scope":9691,"src":"3256:63:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":8500,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3264:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3256:44:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8499,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8497,"name":"address","nodeType":"ElementaryTypeName","src":"3283:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3275:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8498,"name":"bool","nodeType":"ElementaryTypeName","src":"3294:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"5bcd5dfb","id":8508,"mutability":"mutable","name":"ticketStates","nameLocation":"3384:12:23","nodeType":"VariableDeclaration","scope":9691,"src":"3325:71:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"},"typeName":{"id":8507,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8502,"name":"uint256","nodeType":"ElementaryTypeName","src":"3333:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3325:51:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8506,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8503,"name":"address","nodeType":"ElementaryTypeName","src":"3352:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3344:31:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8505,"nodeType":"UserDefinedTypeName","pathNode":{"id":8504,"name":"TicketState","nameLocations":["3363:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8490,"src":"3363:11:23"},"referencedDeclaration":8490,"src":"3363:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}}}},"visibility":"public"},{"constant":false,"functionSelector":"8920dd14","id":8515,"mutability":"mutable","name":"eventTiers","nameLocation":"3517:10:23","nodeType":"VariableDeclaration","scope":9691,"src":"3459:68:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.TierConfig))"},"typeName":{"id":8514,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3459:50:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.TierConfig))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8513,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3478:30:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.TierConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8512,"nodeType":"UserDefinedTypeName","pathNode":{"id":8511,"name":"TierConfig","nameLocations":["3497:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":8470,"src":"3497:10:23"},"referencedDeclaration":8470,"src":"3497:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage_ptr","typeString":"struct UnchainedTickets.TierConfig"}}}},"visibility":"public"},{"constant":false,"functionSelector":"166cc944","id":8519,"mutability":"mutable","name":"eventTierCount","nameLocation":"3568:14:23","nodeType":"VariableDeclaration","scope":9691,"src":"3533:49:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8518,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8516,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3533:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8517,"name":"uint256","nodeType":"ElementaryTypeName","src":"3552:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"bc2336e2","id":8526,"mutability":"mutable","name":"seatAssignments","nameLocation":"3742:15:23","nodeType":"VariableDeclaration","scope":9691,"src":"3680:77:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.SeatAssignment))"},"typeName":{"id":8525,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3688:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3680:54:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.SeatAssignment))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8524,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8521,"name":"uint256","nodeType":"ElementaryTypeName","src":"3707:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3699:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.SeatAssignment)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8523,"nodeType":"UserDefinedTypeName","pathNode":{"id":8522,"name":"SeatAssignment","nameLocations":["3718:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":8479,"src":"3718:14:23"},"referencedDeclaration":8479,"src":"3718:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_storage_ptr","typeString":"struct UnchainedTickets.SeatAssignment"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c33c66fa","id":8535,"mutability":"mutable","name":"perkTracking","nameLocation":"3913:12:23","nodeType":"VariableDeclaration","scope":9691,"src":"3831:94:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(string => struct UnchainedTickets.PerkConsumption)))"},"typeName":{"id":8534,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8527,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3831:74:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(string => struct UnchainedTickets.PerkConsumption)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8533,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8528,"name":"address","nodeType":"ElementaryTypeName","src":"3858:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3850:54:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$","typeString":"mapping(address => mapping(string => struct UnchainedTickets.PerkConsumption))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8532,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8529,"name":"string","nodeType":"ElementaryTypeName","src":"3877:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3869:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$","typeString":"mapping(string => struct UnchainedTickets.PerkConsumption)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8531,"nodeType":"UserDefinedTypeName","pathNode":{"id":8530,"name":"PerkConsumption","nameLocations":["3887:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":8486,"src":"3887:15:23"},"referencedDeclaration":8486,"src":"3887:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption"}}}}},"visibility":"public"},{"constant":false,"functionSelector":"34bcadb6","id":8539,"mutability":"mutable","name":"tokenToTier","nameLocation":"3999:11:23","nodeType":"VariableDeclaration","scope":9691,"src":"3964:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8538,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3972:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3964:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8537,"name":"uint256","nodeType":"ElementaryTypeName","src":"3983:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"2432ada5","id":8543,"mutability":"mutable","name":"eventTokenCounter","nameLocation":"4102:17:23","nodeType":"VariableDeclaration","scope":9691,"src":"4067:52:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":8542,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8540,"name":"uint256","nodeType":"ElementaryTypeName","src":"4075:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4067:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8541,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"06168e40fac2576e22d73ab2e9efa79b4e7530dd3dd411ab7d8862d04be798a2","id":8551,"name":"EventCreated","nameLocation":"4146:12:23","nodeType":"EventDefinition","parameters":{"id":8550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8545,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4175:7:23","nodeType":"VariableDeclaration","scope":8551,"src":"4159:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8544,"name":"uint256","nodeType":"ElementaryTypeName","src":"4159:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8547,"indexed":false,"mutability":"mutable","name":"maxSupply","nameLocation":"4192:9:23","nodeType":"VariableDeclaration","scope":8551,"src":"4184:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4184:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8549,"indexed":false,"mutability":"mutable","name":"eventTimestamp","nameLocation":"4211:14:23","nodeType":"VariableDeclaration","scope":8551,"src":"4203:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8548,"name":"uint256","nodeType":"ElementaryTypeName","src":"4203:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4158:68:23"},"src":"4140:87:23"},{"anonymous":false,"eventSelector":"73f2c5150dd3bafcdfcfd66cdd6938bc381635e48cebe16c6d424dfcf68fe854","id":8559,"name":"TierCreated","nameLocation":"4238:11:23","nodeType":"EventDefinition","parameters":{"id":8558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8553,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4266:7:23","nodeType":"VariableDeclaration","scope":8559,"src":"4250:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8552,"name":"uint256","nodeType":"ElementaryTypeName","src":"4250:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8555,"indexed":true,"mutability":"mutable","name":"tierId","nameLocation":"4291:6:23","nodeType":"VariableDeclaration","scope":8559,"src":"4275:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4275:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8557,"indexed":false,"mutability":"mutable","name":"tierName","nameLocation":"4306:8:23","nodeType":"VariableDeclaration","scope":8559,"src":"4299:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8556,"name":"string","nodeType":"ElementaryTypeName","src":"4299:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4249:66:23"},"src":"4232:84:23"},{"anonymous":false,"eventSelector":"4fe0f5bb11eb6ab81c428fb83261719e5b22f84b3e1942cd491c3777504bb851","id":8569,"name":"TicketMinted","nameLocation":"4327:12:23","nodeType":"EventDefinition","parameters":{"id":8568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8561,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4356:7:23","nodeType":"VariableDeclaration","scope":8569,"src":"4340:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4340:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8563,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4381:7:23","nodeType":"VariableDeclaration","scope":8569,"src":"4365:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8562,"name":"uint256","nodeType":"ElementaryTypeName","src":"4365:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8565,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4406:9:23","nodeType":"VariableDeclaration","scope":8569,"src":"4390:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8564,"name":"address","nodeType":"ElementaryTypeName","src":"4390:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8567,"indexed":false,"mutability":"mutable","name":"tierId","nameLocation":"4425:6:23","nodeType":"VariableDeclaration","scope":8569,"src":"4417:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8566,"name":"uint256","nodeType":"ElementaryTypeName","src":"4417:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4339:93:23"},"src":"4321:112:23"},{"anonymous":false,"eventSelector":"07c2221c844690cb15e32907258d38446cd4a17bc9b84e2069cd955615d547fd","id":8575,"name":"TicketUsed","nameLocation":"4444:10:23","nodeType":"EventDefinition","parameters":{"id":8574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8571,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4471:7:23","nodeType":"VariableDeclaration","scope":8575,"src":"4455:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4455:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8573,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4496:5:23","nodeType":"VariableDeclaration","scope":8575,"src":"4480:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8572,"name":"address","nodeType":"ElementaryTypeName","src":"4480:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4454:48:23"},"src":"4438:65:23"},{"anonymous":false,"eventSelector":"f4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d","id":8584,"name":"TicketTransformed","nameLocation":"4514:17:23","nodeType":"EventDefinition","parameters":{"id":8583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8577,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4548:7:23","nodeType":"VariableDeclaration","scope":8584,"src":"4532:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8576,"name":"uint256","nodeType":"ElementaryTypeName","src":"4532:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8579,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4573:7:23","nodeType":"VariableDeclaration","scope":8584,"src":"4557:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8578,"name":"uint256","nodeType":"ElementaryTypeName","src":"4557:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8582,"indexed":false,"mutability":"mutable","name":"newState","nameLocation":"4594:8:23","nodeType":"VariableDeclaration","scope":8584,"src":"4582:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"},"typeName":{"id":8581,"nodeType":"UserDefinedTypeName","pathNode":{"id":8580,"name":"TicketState","nameLocations":["4582:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8490,"src":"4582:11:23"},"referencedDeclaration":8490,"src":"4582:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"visibility":"internal"}],"src":"4531:72:23"},"src":"4508:96:23"},{"anonymous":false,"eventSelector":"4e3e5d9908b5bd9975f87efcebca93c1b24a2b205aa71fc34300ab7bf7e16b90","id":8594,"name":"PerkConsumed","nameLocation":"4615:12:23","nodeType":"EventDefinition","parameters":{"id":8593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8586,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4644:7:23","nodeType":"VariableDeclaration","scope":8594,"src":"4628:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8585,"name":"uint256","nodeType":"ElementaryTypeName","src":"4628:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8588,"indexed":true,"mutability":"mutable","name":"holder","nameLocation":"4669:6:23","nodeType":"VariableDeclaration","scope":8594,"src":"4653:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8587,"name":"address","nodeType":"ElementaryTypeName","src":"4653:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8590,"indexed":false,"mutability":"mutable","name":"perkName","nameLocation":"4684:8:23","nodeType":"VariableDeclaration","scope":8594,"src":"4677:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8589,"name":"string","nodeType":"ElementaryTypeName","src":"4677:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8592,"indexed":false,"mutability":"mutable","name":"quantity","nameLocation":"4702:8:23","nodeType":"VariableDeclaration","scope":8594,"src":"4694:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8591,"name":"uint256","nodeType":"ElementaryTypeName","src":"4694:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4627:84:23"},"src":"4609:103:23"},{"anonymous":false,"eventSelector":"88257bb4915cfaf23ff1f49a4d5278601267800249071a71f74369a6f35b72b4","id":8606,"name":"SeatAssigned","nameLocation":"4723:12:23","nodeType":"EventDefinition","parameters":{"id":8605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8596,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4752:7:23","nodeType":"VariableDeclaration","scope":8606,"src":"4736:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8595,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8598,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4777:7:23","nodeType":"VariableDeclaration","scope":8606,"src":"4761:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4761:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8600,"indexed":false,"mutability":"mutable","name":"section","nameLocation":"4793:7:23","nodeType":"VariableDeclaration","scope":8606,"src":"4786:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8599,"name":"string","nodeType":"ElementaryTypeName","src":"4786:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8602,"indexed":false,"mutability":"mutable","name":"row","nameLocation":"4809:3:23","nodeType":"VariableDeclaration","scope":8606,"src":"4802:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8601,"name":"string","nodeType":"ElementaryTypeName","src":"4802:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8604,"indexed":false,"mutability":"mutable","name":"seat","nameLocation":"4821:4:23","nodeType":"VariableDeclaration","scope":8606,"src":"4814:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8603,"name":"string","nodeType":"ElementaryTypeName","src":"4814:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4735:91:23"},"src":"4717:110:23"},{"anonymous":false,"eventSelector":"befc93e7daa33253e132c907f20544f15e5e331b7f4e917cabee1d6097a1f1f8","id":8614,"name":"RoyaltyConfigured","nameLocation":"4838:17:23","nodeType":"EventDefinition","parameters":{"id":8613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8608,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"4872:7:23","nodeType":"VariableDeclaration","scope":8614,"src":"4856:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4856:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8610,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"4889:9:23","nodeType":"VariableDeclaration","scope":8614,"src":"4881:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8609,"name":"address","nodeType":"ElementaryTypeName","src":"4881:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8612,"indexed":false,"mutability":"mutable","name":"royaltyBps","nameLocation":"4907:10:23","nodeType":"VariableDeclaration","scope":8614,"src":"4900:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8611,"name":"uint96","nodeType":"ElementaryTypeName","src":"4900:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4855:63:23"},"src":"4832:87:23"},{"body":{"id":8630,"nodeType":"Block","src":"4993:36:23","statements":[{"expression":{"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8626,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"5003:8:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8627,"name":"baseURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8616,"src":"5014:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5003:19:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8629,"nodeType":"ExpressionStatement","src":"5003:19:23"}]},"id":8631,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":8619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4969:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":8620,"kind":"baseConstructorSpecifier","modifierName":{"id":8618,"name":"ERC1155","nameLocations":["4961:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"4961:7:23"},"nodeType":"ModifierInvocation","src":"4961:11:23"},{"arguments":[{"expression":{"id":8622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4981:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:6:23","memberName":"sender","nodeType":"MemberAccess","src":"4981:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8624,"kind":"baseConstructorSpecifier","modifierName":{"id":8621,"name":"Ownable","nameLocations":["4973:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4973:7:23"},"nodeType":"ModifierInvocation","src":"4973:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8616,"mutability":"mutable","name":"baseURI_","nameLocation":"4951:8:23","nodeType":"VariableDeclaration","scope":8631,"src":"4937:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8615,"name":"string","nodeType":"ElementaryTypeName","src":"4937:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4936:24:23"},"returnParameters":{"id":8625,"nodeType":"ParameterList","parameters":[],"src":"4993:0:23"},"scope":9691,"src":"4925:104:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8738,"nodeType":"Block","src":"5431:1127:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8654,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"5449:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":8656,"indexExpression":{"id":8655,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8634,"src":"5456:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5449:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":8657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:9:23","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8437,"src":"5449:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5478:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5449:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420616c726561647920657869737473","id":8660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5481:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_94d24e8ef4feb5369bd619a1aeb605e75b1632e448d9dc25268fd6f86ecffbe7","typeString":"literal_string \"Event already exists\""},"value":"Event already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94d24e8ef4feb5369bd619a1aeb605e75b1632e448d9dc25268fd6f86ecffbe7","typeString":"literal_string \"Event already exists\""}],"id":8653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5441:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5441:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8662,"nodeType":"ExpressionStatement","src":"5441:63:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8664,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"5522:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5534:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5522:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e2030","id":8667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5537:35:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f","typeString":"literal_string \"Max supply must be greater than 0\""},"value":"Max supply must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f","typeString":"literal_string \"Max supply must be greater than 0\""}],"id":8663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5514:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8669,"nodeType":"ExpressionStatement","src":"5514:59:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8671,"name":"eventTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"5591:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8672,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5608:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5614:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"5608:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5591:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e74206d75737420626520696e2074686520667574757265","id":8675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5625:29:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b89d7f475b6259f538f5efec95307e131b8de0863046a31d443f665a7a5a9016","typeString":"literal_string \"Event must be in the future\""},"value":"Event must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b89d7f475b6259f538f5efec95307e131b8de0863046a31d443f665a7a5a9016","typeString":"literal_string \"Event must be in the future\""}],"id":8670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5583:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5583:72:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8677,"nodeType":"ExpressionStatement","src":"5583:72:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8679,"name":"eventEndTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8640,"src":"5673:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8680,"name":"eventTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"5693:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5673:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420656e64206d757374206265206166746572207374617274","id":8682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5709:31:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_277fb50e54ed9d01cadc455116af5a5662da4bcddac8a1d14e88750cf8f09a21","typeString":"literal_string \"Event end must be after start\""},"value":"Event end must be after start"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277fb50e54ed9d01cadc455116af5a5662da4bcddac8a1d14e88750cf8f09a21","typeString":"literal_string \"Event end must be after start\""}],"id":8678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5665:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5665:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8684,"nodeType":"ExpressionStatement","src":"5665:76:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8686,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"5759:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":8687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5773:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5759:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c74792063616e6e6f74206578636565642031303025","id":8689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5780:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815","typeString":"literal_string \"Royalty cannot exceed 100%\""},"value":"Royalty cannot exceed 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815","typeString":"literal_string \"Royalty cannot exceed 100%\""}],"id":8685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5751:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5751:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8691,"nodeType":"ExpressionStatement","src":"5751:58:23"},{"expression":{"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8692,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"5820:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":8694,"indexExpression":{"id":8693,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8634,"src":"5827:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5820:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8696,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"5873:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8697,"name":"eventTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"5912:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8698,"name":"eventEndTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8640,"src":"5959:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":8699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6004:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"74727565","id":8700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6031:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":8701,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8642,"src":"6062:11:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8702,"name":"souvenirMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8644,"src":"6108:19:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8703,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"6153:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":8704,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"6195:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8695,"name":"EventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"5838:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EventInfo_$8454_storage_ptr_$","typeString":"type(struct UnchainedTickets.EventInfo storage pointer)"}},"id":8705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5862:9:23","5896:14:23","5940:17:23","5990:12:23","6023:6:23","6049:11:23","6087:19:23","6141:10:23","6177:16:23"],"names":["maxSupply","eventTimestamp","eventEndTimestamp","transferable","active","metadataURI","souvenirMetadataURI","royaltyBps","royaltyRecipient"],"nodeType":"FunctionCall","src":"5838:384:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"src":"5820:402:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":8707,"nodeType":"ExpressionStatement","src":"5820:402:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":8710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8708,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"6283:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6296:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6283:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8711,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"6301:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6329:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8712,"name":"address","nodeType":"ElementaryTypeName","src":"6321:7:23","typeDescriptions":{}}},"id":8715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6321:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6301:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6283:48:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8731,"nodeType":"IfStatement","src":"6279:209:23","trueBody":{"id":8730,"nodeType":"Block","src":"6333:155:23","statements":[{"expression":{"arguments":[{"id":8719,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8634,"src":"6364:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8720,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"6373:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8721,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"6391:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":8718,"name":"_setTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6347:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint96_$returns$__$","typeString":"function (uint256,address,uint96)"}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8723,"nodeType":"ExpressionStatement","src":"6347:55:23"},{"eventCall":{"arguments":[{"id":8725,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8634,"src":"6439:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8726,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8646,"src":"6448:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8727,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8648,"src":"6466:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":8724,"name":"RoyaltyConfigured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"6421:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint96_$returns$__$","typeString":"function (uint256,address,uint96)"}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6421:56:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8729,"nodeType":"EmitStatement","src":"6416:61:23"}]}},{"eventCall":{"arguments":[{"id":8733,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8634,"src":"6516:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8734,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8636,"src":"6525:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8735,"name":"eventTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"6536:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8732,"name":"EventCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8551,"src":"6503:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6503:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8737,"nodeType":"EmitStatement","src":"6498:53:23"}]},"documentation":{"id":8632,"nodeType":"StructuredDocumentation","src":"5035:87:23","text":" @dev Create a new event with ticket supply and royalty configuration"},"functionSelector":"85af5762","id":8739,"implemented":true,"kind":"function","modifiers":[{"id":8651,"kind":"modifierInvocation","modifierName":{"id":8650,"name":"onlyOwner","nameLocations":["5421:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5421:9:23"},"nodeType":"ModifierInvocation","src":"5421:9:23"}],"name":"createEvent","nameLocation":"5136:11:23","nodeType":"FunctionDefinition","parameters":{"id":8649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8634,"mutability":"mutable","name":"eventId","nameLocation":"5165:7:23","nodeType":"VariableDeclaration","scope":8739,"src":"5157:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8633,"name":"uint256","nodeType":"ElementaryTypeName","src":"5157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8636,"mutability":"mutable","name":"maxSupply","nameLocation":"5190:9:23","nodeType":"VariableDeclaration","scope":8739,"src":"5182:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8635,"name":"uint256","nodeType":"ElementaryTypeName","src":"5182:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8638,"mutability":"mutable","name":"eventTimestamp","nameLocation":"5217:14:23","nodeType":"VariableDeclaration","scope":8739,"src":"5209:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8637,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8640,"mutability":"mutable","name":"eventEndTimestamp","nameLocation":"5249:17:23","nodeType":"VariableDeclaration","scope":8739,"src":"5241:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8639,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8642,"mutability":"mutable","name":"metadataURI","nameLocation":"5290:11:23","nodeType":"VariableDeclaration","scope":8739,"src":"5276:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8641,"name":"string","nodeType":"ElementaryTypeName","src":"5276:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8644,"mutability":"mutable","name":"souvenirMetadataURI","nameLocation":"5325:19:23","nodeType":"VariableDeclaration","scope":8739,"src":"5311:33:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8643,"name":"string","nodeType":"ElementaryTypeName","src":"5311:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8646,"mutability":"mutable","name":"royaltyRecipient","nameLocation":"5362:16:23","nodeType":"VariableDeclaration","scope":8739,"src":"5354:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8645,"name":"address","nodeType":"ElementaryTypeName","src":"5354:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8648,"mutability":"mutable","name":"royaltyBps","nameLocation":"5395:10:23","nodeType":"VariableDeclaration","scope":8739,"src":"5388:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8647,"name":"uint96","nodeType":"ElementaryTypeName","src":"5388:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"5147:264:23"},"returnParameters":{"id":8652,"nodeType":"ParameterList","parameters":[],"src":"5431:0:23"},"scope":9691,"src":"5127:1431:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8804,"nodeType":"Block","src":"6884:489:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8763,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"6902:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":8765,"indexExpression":{"id":8764,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"6909:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6902:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":8766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6918:9:23","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8437,"src":"6902:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6930:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6902:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420646f6573206e6f74206578697374","id":8769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6933:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""},"value":"Event does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""}],"id":8762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6894:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6894:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8771,"nodeType":"ExpressionStatement","src":"6894:62:23"},{"assignments":[8773],"declarations":[{"constant":false,"id":8773,"mutability":"mutable","name":"tierId","nameLocation":"6975:6:23","nodeType":"VariableDeclaration","scope":8804,"src":"6967:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8772,"name":"uint256","nodeType":"ElementaryTypeName","src":"6967:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8777,"initialValue":{"baseExpression":{"id":8774,"name":"eventTierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"6984:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8776,"indexExpression":{"id":8775,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"6999:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6984:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6967:40:23"},{"expression":{"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8778,"name":"eventTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"7018:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.TierConfig storage ref))"}},"id":8781,"indexExpression":{"id":8779,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"7029:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7018:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.TierConfig storage ref)"}},"id":8782,"indexExpression":{"id":8780,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"7038:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7018:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage","typeString":"struct UnchainedTickets.TierConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8784,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8747,"src":"7079:4:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketTier_$8435","typeString":"enum UnchainedTickets.TicketTier"}},{"id":8785,"name":"tierName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"7107:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8786,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8749,"src":"7140:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8787,"name":"priceCents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"7175:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8788,"name":"accessAreas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"7212:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":8789,"name":"includedPerks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"7252:13:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TicketTier_$8435","typeString":"enum UnchainedTickets.TicketTier"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":8783,"name":"TierConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"7048:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TierConfig_$8470_storage_ptr_$","typeString":"type(struct UnchainedTickets.TierConfig storage pointer)"}},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7073:4:23","7097:8:23","7129:9:23","7163:10:23","7199:11:23","7237:13:23"],"names":["tier","tierName","maxSupply","priceCents","accessAreas","includedPerks"],"nodeType":"FunctionCall","src":"7048:228:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig memory"}},"src":"7018:258:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage","typeString":"struct UnchainedTickets.TierConfig storage ref"}},"id":8792,"nodeType":"ExpressionStatement","src":"7018:258:23"},{"expression":{"id":8796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7287:25:23","subExpression":{"baseExpression":{"id":8793,"name":"eventTierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"7287:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8795,"indexExpression":{"id":8794,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"7302:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7287:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8797,"nodeType":"ExpressionStatement","src":"7287:25:23"},{"eventCall":{"arguments":[{"id":8799,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"7340:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8800,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8773,"src":"7349:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8801,"name":"tierName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8744,"src":"7357:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8798,"name":"TierCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"7328:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7328:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8803,"nodeType":"EmitStatement","src":"7323:43:23"}]},"documentation":{"id":8740,"nodeType":"StructuredDocumentation","src":"6564:57:23","text":" @dev Create a ticket tier for an event"},"functionSelector":"edb2b214","id":8805,"implemented":true,"kind":"function","modifiers":[{"id":8760,"kind":"modifierInvocation","modifierName":{"id":8759,"name":"onlyOwner","nameLocations":["6874:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6874:9:23"},"nodeType":"ModifierInvocation","src":"6874:9:23"}],"name":"createTier","nameLocation":"6635:10:23","nodeType":"FunctionDefinition","parameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"eventId","nameLocation":"6663:7:23","nodeType":"VariableDeclaration","scope":8805,"src":"6655:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"6655:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8744,"mutability":"mutable","name":"tierName","nameLocation":"6694:8:23","nodeType":"VariableDeclaration","scope":8805,"src":"6680:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8743,"name":"string","nodeType":"ElementaryTypeName","src":"6680:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8747,"mutability":"mutable","name":"tier","nameLocation":"6723:4:23","nodeType":"VariableDeclaration","scope":8805,"src":"6712:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TicketTier_$8435","typeString":"enum UnchainedTickets.TicketTier"},"typeName":{"id":8746,"nodeType":"UserDefinedTypeName","pathNode":{"id":8745,"name":"TicketTier","nameLocations":["6712:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":8435,"src":"6712:10:23"},"referencedDeclaration":8435,"src":"6712:10:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketTier_$8435","typeString":"enum UnchainedTickets.TicketTier"}},"visibility":"internal"},{"constant":false,"id":8749,"mutability":"mutable","name":"maxSupply","nameLocation":"6745:9:23","nodeType":"VariableDeclaration","scope":8805,"src":"6737:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6737:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8751,"mutability":"mutable","name":"priceCents","nameLocation":"6772:10:23","nodeType":"VariableDeclaration","scope":8805,"src":"6764:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8750,"name":"uint256","nodeType":"ElementaryTypeName","src":"6764:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8754,"mutability":"mutable","name":"accessAreas","nameLocation":"6808:11:23","nodeType":"VariableDeclaration","scope":8805,"src":"6792:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8752,"name":"string","nodeType":"ElementaryTypeName","src":"6792:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8753,"nodeType":"ArrayTypeName","src":"6792:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":8757,"mutability":"mutable","name":"includedPerks","nameLocation":"6845:13:23","nodeType":"VariableDeclaration","scope":8805,"src":"6829:29:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8755,"name":"string","nodeType":"ElementaryTypeName","src":"6829:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8756,"nodeType":"ArrayTypeName","src":"6829:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6645:219:23"},"returnParameters":{"id":8761,"nodeType":"ParameterList","parameters":[],"src":"6884:0:23"},"scope":9691,"src":"6626:747:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8985,"nodeType":"Block","src":"7704:1624:23","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8826,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"7722:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":8828,"indexExpression":{"id":8827,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"7729:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7722:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":8829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7738:6:23","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":8445,"src":"7722:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e74206973206e6f7420616374697665","id":8830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc","typeString":"literal_string \"Event is not active\""},"value":"Event is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc","typeString":"literal_string \"Event is not active\""}],"id":8825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7714:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7714:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8832,"nodeType":"ExpressionStatement","src":"7714:54:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8834,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"7786:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":8835,"name":"eventTierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"7795:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8837,"indexExpression":{"id":8836,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"7810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7795:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7786:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696572","id":8839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7820:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe","typeString":"literal_string \"Invalid tier\""},"value":"Invalid tier"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe","typeString":"literal_string \"Invalid tier\""}],"id":8833,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7778:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7778:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8841,"nodeType":"ExpressionStatement","src":"7778:57:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8843,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"7853:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7874:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8844,"name":"address","nodeType":"ElementaryTypeName","src":"7866:7:23","typeDescriptions":{}}},"id":8847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7866:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7853:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":8849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7878:27:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":8842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7845:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7845:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8851,"nodeType":"ExpressionStatement","src":"7845:61:23"},{"assignments":[8854],"declarations":[{"constant":false,"id":8854,"mutability":"mutable","name":"tierConfig","nameLocation":"7935:10:23","nodeType":"VariableDeclaration","scope":8985,"src":"7917:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig"},"typeName":{"id":8853,"nodeType":"UserDefinedTypeName","pathNode":{"id":8852,"name":"TierConfig","nameLocations":["7917:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":8470,"src":"7917:10:23"},"referencedDeclaration":8470,"src":"7917:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage_ptr","typeString":"struct UnchainedTickets.TierConfig"}},"visibility":"internal"}],"id":8860,"initialValue":{"baseExpression":{"baseExpression":{"id":8855,"name":"eventTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"7948:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.TierConfig storage ref))"}},"id":8857,"indexExpression":{"id":8856,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"7959:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7948:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.TierConfig storage ref)"}},"id":8859,"indexExpression":{"id":8858,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"7968:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7948:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage","typeString":"struct UnchainedTickets.TierConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7917:58:23"},{"assignments":[8862],"declarations":[{"constant":false,"id":8862,"mutability":"mutable","name":"tokenId","nameLocation":"8057:7:23","nodeType":"VariableDeclaration","scope":8985,"src":"8049:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8049:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8871,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8863,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030303030","id":8864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8078:7:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"src":"8068:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8067:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":8867,"name":"eventTokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"8089:17:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8869,"indexExpression":{"id":8868,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8107:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8089:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8067:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8049:66:23"},{"expression":{"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8125:28:23","subExpression":{"baseExpression":{"id":8872,"name":"eventTokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"8125:17:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8874,"indexExpression":{"id":8873,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8143:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8125:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8876,"nodeType":"ExpressionStatement","src":"8125:28:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8879,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8228:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8878,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1498,1507],"referencedDeclaration":1498,"src":"8216:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8216:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":8881,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"8239:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":8883,"indexExpression":{"id":8882,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8246:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8239:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":8884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8255:9:23","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8437,"src":"8239:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8216:48:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420736f6c64206f7574","id":8886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8278:16:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_eea54bd5ed93eb5544084db3cff6dfa8db8c4c0cbb06865979ee2d3aa8301a5f","typeString":"literal_string \"Event sold out\""},"value":"Event sold out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eea54bd5ed93eb5544084db3cff6dfa8db8c4c0cbb06865979ee2d3aa8301a5f","typeString":"literal_string \"Event sold out\""}],"id":8877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8195:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:109:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8888,"nodeType":"ExpressionStatement","src":"8195:109:23"},{"expression":{"arguments":[{"id":8890,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"8348:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8891,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"8359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":8892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8368:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":8893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8371:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":8889,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8342:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":8894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8342:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8895,"nodeType":"ExpressionStatement","src":"8342:32:23"},{"expression":{"id":8900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8896,"name":"tokenToTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8539,"src":"8384:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8898,"indexExpression":{"id":8897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"8396:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8384:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8899,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"8407:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8384:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8901,"nodeType":"ExpressionStatement","src":"8384:29:23"},{"expression":{"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8902,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"8423:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":8905,"indexExpression":{"id":8903,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8436:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8423:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":8906,"indexExpression":{"id":8904,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"8445:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8423:32:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8907,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"8458:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":8908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8470:6:23","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":8487,"src":"8458:18:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"src":"8423:53:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"id":8910,"nodeType":"ExpressionStatement","src":"8423:53:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8913,"name":"section","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"8532:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8526:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8911,"name":"bytes","nodeType":"ElementaryTypeName","src":"8526:5:23","typeDescriptions":{}}},"id":8914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8526:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8541:6:23","memberName":"length","nodeType":"MemberAccess","src":"8526:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8550:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8526:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8940,"nodeType":"IfStatement","src":"8522:311:23","trueBody":{"id":8939,"nodeType":"Block","src":"8553:280:23","statements":[{"expression":{"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8918,"name":"seatAssignments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"8567:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.SeatAssignment storage ref))"}},"id":8921,"indexExpression":{"id":8919,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8583:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8567:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.SeatAssignment storage ref)"}},"id":8922,"indexExpression":{"id":8920,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"8592:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8567:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_storage","typeString":"struct UnchainedTickets.SeatAssignment storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8924,"name":"section","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"8645:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8925,"name":"row","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"8675:3:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8926,"name":"seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"8702:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":8927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8734:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8923,"name":"SeatAssignment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"8603:14:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SeatAssignment_$8479_storage_ptr_$","typeString":"type(struct UnchainedTickets.SeatAssignment storage pointer)"}},"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8636:7:23","8670:3:23","8696:4:23","8724:8:23"],"names":["section","row","seat","assigned"],"nodeType":"FunctionCall","src":"8603:150:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_memory_ptr","typeString":"struct UnchainedTickets.SeatAssignment memory"}},"src":"8567:186:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_storage","typeString":"struct UnchainedTickets.SeatAssignment storage ref"}},"id":8930,"nodeType":"ExpressionStatement","src":"8567:186:23"},{"eventCall":{"arguments":[{"id":8932,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"8785:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"8794:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8934,"name":"section","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"8803:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8935,"name":"row","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8816,"src":"8812:3:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8936,"name":"seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"8817:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8931,"name":"SeatAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8606,"src":"8772:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory,string memory,string memory)"}},"id":8937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8772:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8938,"nodeType":"EmitStatement","src":"8767:55:23"}]}},{"body":{"id":8974,"nodeType":"Block","src":"8933:299:23","statements":[{"assignments":[8954],"declarations":[{"constant":false,"id":8954,"mutability":"mutable","name":"perkName","nameLocation":"8961:8:23","nodeType":"VariableDeclaration","scope":8974,"src":"8947:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8953,"name":"string","nodeType":"ElementaryTypeName","src":"8947:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8959,"initialValue":{"baseExpression":{"expression":{"id":8955,"name":"tierConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"8972:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig memory"}},"id":8956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8983:13:23","memberName":"includedPerks","nodeType":"MemberAccess","referencedDeclaration":8469,"src":"8972:24:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8958,"indexExpression":{"id":8957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"8997:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8972:27:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8947:52:23"},{"expression":{"id":8972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":8960,"name":"perkTracking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8535,"src":"9013:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref)))"}},"id":8964,"indexExpression":{"id":8961,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9026:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9013:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$","typeString":"mapping(address => mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref))"}},"id":8965,"indexExpression":{"id":8962,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"9035:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9013:32:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$","typeString":"mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref)"}},"id":8966,"indexExpression":{"id":8963,"name":"perkName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"9046:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9013:42:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage","typeString":"struct UnchainedTickets.PerkConsumption storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8968,"name":"perkName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"9102:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":8969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9141:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"30","id":8970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8967,"name":"PerkConsumption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8486,"src":"9058:15:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PerkConsumption_$8486_storage_ptr_$","typeString":"type(struct UnchainedTickets.PerkConsumption storage pointer)"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9092:8:23","9128:11:23","9195:8:23"],"names":["perkName","maxQuantity","consumed"],"nodeType":"FunctionCall","src":"9058:163:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_memory_ptr","typeString":"struct UnchainedTickets.PerkConsumption memory"}},"src":"9013:208:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage","typeString":"struct UnchainedTickets.PerkConsumption storage ref"}},"id":8973,"nodeType":"ExpressionStatement","src":"9013:208:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"8891:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":8946,"name":"tierConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"8895:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig memory"}},"id":8947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8906:13:23","memberName":"includedPerks","nodeType":"MemberAccess","referencedDeclaration":8469,"src":"8895:24:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8920:6:23","memberName":"length","nodeType":"MemberAccess","src":"8895:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8891:35:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8975,"initializationExpression":{"assignments":[8942],"declarations":[{"constant":false,"id":8942,"mutability":"mutable","name":"i","nameLocation":"8884:1:23","nodeType":"VariableDeclaration","scope":8975,"src":"8876:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8941,"name":"uint256","nodeType":"ElementaryTypeName","src":"8876:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8944,"initialValue":{"hexValue":"30","id":8943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8888:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8876:13:23"},"loopExpression":{"expression":{"id":8951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8928:3:23","subExpression":{"id":8950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8942,"src":"8928:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8952,"nodeType":"ExpressionStatement","src":"8928:3:23"},"nodeType":"ForStatement","src":"8871:361:23"},{"eventCall":{"arguments":[{"id":8977,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8978,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"9269:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8979,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8812,"src":"9278:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8980,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"9289:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8976,"name":"TicketMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"9247:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,uint256)"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9247:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8982,"nodeType":"EmitStatement","src":"9242:54:23"},{"expression":{"id":8983,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"9314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8824,"id":8984,"nodeType":"Return","src":"9307:14:23"}]},"documentation":{"id":8806,"nodeType":"StructuredDocumentation","src":"7379:87:23","text":" @dev Mint a ticket for a specific tier with optional seat assignment"},"functionSelector":"47fb430f","id":8986,"implemented":true,"kind":"function","modifiers":[{"id":8821,"kind":"modifierInvocation","modifierName":{"id":8820,"name":"onlyOwner","nameLocations":["7676:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7676:9:23"},"nodeType":"ModifierInvocation","src":"7676:9:23"}],"name":"mintTicketWithTier","nameLocation":"7480:18:23","nodeType":"FunctionDefinition","parameters":{"id":8819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8808,"mutability":"mutable","name":"eventId","nameLocation":"7516:7:23","nodeType":"VariableDeclaration","scope":8986,"src":"7508:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7508:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8810,"mutability":"mutable","name":"tierId","nameLocation":"7541:6:23","nodeType":"VariableDeclaration","scope":8986,"src":"7533:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8809,"name":"uint256","nodeType":"ElementaryTypeName","src":"7533:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8812,"mutability":"mutable","name":"recipient","nameLocation":"7565:9:23","nodeType":"VariableDeclaration","scope":8986,"src":"7557:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8811,"name":"address","nodeType":"ElementaryTypeName","src":"7557:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8814,"mutability":"mutable","name":"section","nameLocation":"7598:7:23","nodeType":"VariableDeclaration","scope":8986,"src":"7584:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8813,"name":"string","nodeType":"ElementaryTypeName","src":"7584:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8816,"mutability":"mutable","name":"row","nameLocation":"7629:3:23","nodeType":"VariableDeclaration","scope":8986,"src":"7615:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8815,"name":"string","nodeType":"ElementaryTypeName","src":"7615:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8818,"mutability":"mutable","name":"seat","nameLocation":"7656:4:23","nodeType":"VariableDeclaration","scope":8986,"src":"7642:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8817,"name":"string","nodeType":"ElementaryTypeName","src":"7642:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7498:168:23"},"returnParameters":{"id":8824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8986,"src":"7695:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8822,"name":"uint256","nodeType":"ElementaryTypeName","src":"7695:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7694:9:23"},"scope":9691,"src":"7471:1857:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9079,"nodeType":"Block","src":"9526:707:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9000,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"9554:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9001,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9568:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8999,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"9544:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9544:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9579:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9544:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207469636b6574206f776e6564","id":9005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9582:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_96dc51fde1aea3385dd20fd5aff15a7676fd42909b5789936f6c8ebd7c8beba6","typeString":"literal_string \"No ticket owned\""},"value":"No ticket owned"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96dc51fde1aea3385dd20fd5aff15a7676fd42909b5789936f6c8ebd7c8beba6","typeString":"literal_string \"No ticket owned\""}],"id":8998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9536:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9536:64:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9007,"nodeType":"ExpressionStatement","src":"9536:64:23"},{"expression":{"arguments":[{"id":9014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9618:35:23","subExpression":{"baseExpression":{"baseExpression":{"id":9009,"name":"usedTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"9619:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9011,"indexExpression":{"id":9010,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9631:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9619:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9013,"indexExpression":{"id":9012,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"9640:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9619:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b657420616c72656164792075736564","id":9015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9655:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""},"value":"Ticket already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""}],"id":9008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9610:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9610:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9017,"nodeType":"ExpressionStatement","src":"9610:67:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"},"id":9026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":9019,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"9695:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":9021,"indexExpression":{"id":9020,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9708:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9695:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":9023,"indexExpression":{"id":9022,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"9717:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9695:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9024,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9734:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9746:6:23","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":8487,"src":"9734:18:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"src":"9695:57:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b6574206e6f7420616374697665","id":9027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9754:19:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef3dc43bf8d0f6dc82cb7bc4c20234046cd1d83ed1f1ab830247dcd1def48bd5","typeString":"literal_string \"Ticket not active\""},"value":"Ticket not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef3dc43bf8d0f6dc82cb7bc4c20234046cd1d83ed1f1ab830247dcd1def48bd5","typeString":"literal_string \"Ticket not active\""}],"id":9018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9687:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9029,"nodeType":"ExpressionStatement","src":"9687:87:23"},{"expression":{"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9030,"name":"usedTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8501,"src":"9785:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9033,"indexExpression":{"id":9031,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9797:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9785:20:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9034,"indexExpression":{"id":9032,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"9806:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9822:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9785:41:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9037,"nodeType":"ExpressionStatement","src":"9785:41:23"},{"condition":{"id":9038,"name":"transformToSouvenir","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8993,"src":"9841:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9072,"nodeType":"Block","src":"10027:151:23","statements":[{"expression":{"id":9063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9056,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"10041:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":9059,"indexExpression":{"id":9057,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"10054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10041:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":9060,"indexExpression":{"id":9058,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"10063:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10041:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9061,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"10079:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10091:4:23","memberName":"USED","nodeType":"MemberAccess","referencedDeclaration":8488,"src":"10079:16:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"src":"10041:54:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"id":9064,"nodeType":"ExpressionStatement","src":"10041:54:23"},{"eventCall":{"arguments":[{"id":9066,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"10132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9067,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"10141:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9068,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"10150:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10162:4:23","memberName":"USED","nodeType":"MemberAccess","referencedDeclaration":8488,"src":"10150:16:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}],"id":9065,"name":"TicketTransformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"10114:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_TicketState_$8490_$returns$__$","typeString":"function (uint256,uint256,enum UnchainedTickets.TicketState)"}},"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10114:53:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9071,"nodeType":"EmitStatement","src":"10109:58:23"}]},"id":9073,"nodeType":"IfStatement","src":"9837:341:23","trueBody":{"id":9055,"nodeType":"Block","src":"9862:159:23","statements":[{"expression":{"id":9046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9039,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"9876:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":9042,"indexExpression":{"id":9040,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9889:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9876:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":9043,"indexExpression":{"id":9041,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"9898:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:35:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9044,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9914:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9926:8:23","memberName":"SOUVENIR","nodeType":"MemberAccess","referencedDeclaration":8489,"src":"9914:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"src":"9876:58:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"id":9047,"nodeType":"ExpressionStatement","src":"9876:58:23"},{"eventCall":{"arguments":[{"id":9049,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9971:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9050,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"9980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9051,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"9989:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10001:8:23","memberName":"SOUVENIR","nodeType":"MemberAccess","referencedDeclaration":8489,"src":"9989:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}],"id":9048,"name":"TicketTransformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"9953:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_TicketState_$8490_$returns$__$","typeString":"function (uint256,uint256,enum UnchainedTickets.TicketState)"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9953:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9054,"nodeType":"EmitStatement","src":"9948:62:23"}]}},{"eventCall":{"arguments":[{"id":9075,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8989,"src":"10204:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9076,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"10213:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9074,"name":"TicketUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8575,"src":"10193:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10193:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9078,"nodeType":"EmitStatement","src":"10188:38:23"}]},"documentation":{"id":8987,"nodeType":"StructuredDocumentation","src":"9334:84:23","text":" @dev Use a ticket (check-in) and optionally transform to souvenir"},"functionSelector":"e4139493","id":9080,"implemented":true,"kind":"function","modifiers":[{"id":8996,"kind":"modifierInvocation","modifierName":{"id":8995,"name":"onlyOwner","nameLocations":["9516:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9516:9:23"},"nodeType":"ModifierInvocation","src":"9516:9:23"}],"name":"useTicket","nameLocation":"9432:9:23","nodeType":"FunctionDefinition","parameters":{"id":8994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8989,"mutability":"mutable","name":"eventId","nameLocation":"9450:7:23","nodeType":"VariableDeclaration","scope":9080,"src":"9442:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8988,"name":"uint256","nodeType":"ElementaryTypeName","src":"9442:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8991,"mutability":"mutable","name":"ticketHolder","nameLocation":"9467:12:23","nodeType":"VariableDeclaration","scope":9080,"src":"9459:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8990,"name":"address","nodeType":"ElementaryTypeName","src":"9459:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8993,"mutability":"mutable","name":"transformToSouvenir","nameLocation":"9486:19:23","nodeType":"VariableDeclaration","scope":9080,"src":"9481:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8992,"name":"bool","nodeType":"ElementaryTypeName","src":"9481:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9441:65:23"},"returnParameters":{"id":8997,"nodeType":"ParameterList","parameters":[],"src":"9526:0:23"},"scope":9691,"src":"9423:810:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9137,"nodeType":"Block","src":"10468:347:23","statements":[{"assignments":[9096],"declarations":[{"constant":false,"id":9096,"mutability":"mutable","name":"perk","nameLocation":"10502:4:23","nodeType":"VariableDeclaration","scope":9137,"src":"10478:28:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption"},"typeName":{"id":9095,"nodeType":"UserDefinedTypeName","pathNode":{"id":9094,"name":"PerkConsumption","nameLocations":["10478:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":8486,"src":"10478:15:23"},"referencedDeclaration":8486,"src":"10478:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption"}},"visibility":"internal"}],"id":9104,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":9097,"name":"perkTracking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8535,"src":"10509:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref)))"}},"id":9099,"indexExpression":{"id":9098,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9083,"src":"10522:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10509:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$","typeString":"mapping(address => mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref))"}},"id":9101,"indexExpression":{"id":9100,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"10531:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10509:35:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$","typeString":"mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref)"}},"id":9103,"indexExpression":{"id":9102,"name":"perkName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"10545:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10509:45:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage","typeString":"struct UnchainedTickets.PerkConsumption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10478:76:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9106,"name":"perk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"10572:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption storage pointer"}},"id":9107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10577:11:23","memberName":"maxQuantity","nodeType":"MemberAccess","referencedDeclaration":8483,"src":"10572:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10591:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10572:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5065726b206e6f7420617661696c61626c65","id":9110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10594:20:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_35b870a42c7282702350db66df7d437f6522a5b93bebe0a17639729c86081e43","typeString":"literal_string \"Perk not available\""},"value":"Perk not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35b870a42c7282702350db66df7d437f6522a5b93bebe0a17639729c86081e43","typeString":"literal_string \"Perk not available\""}],"id":9105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10564:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10564:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9112,"nodeType":"ExpressionStatement","src":"10564:51:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9114,"name":"perk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"10633:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption storage pointer"}},"id":9115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10638:8:23","memberName":"consumed","nodeType":"MemberAccess","referencedDeclaration":8485,"src":"10633:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9116,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"10649:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10633:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9118,"name":"perk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"10661:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption storage pointer"}},"id":9119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10666:11:23","memberName":"maxQuantity","nodeType":"MemberAccess","referencedDeclaration":8483,"src":"10661:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10633:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5065726b206c696d6974206578636565646564","id":9121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10679:21:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_bac3770b00a955a75ca30eb19187adc5a87c84fb30c146cf6e4e40500f3a0763","typeString":"literal_string \"Perk limit exceeded\""},"value":"Perk limit exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bac3770b00a955a75ca30eb19187adc5a87c84fb30c146cf6e4e40500f3a0763","typeString":"literal_string \"Perk limit exceeded\""}],"id":9113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10625:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10625:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9123,"nodeType":"ExpressionStatement","src":"10625:76:23"},{"expression":{"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9124,"name":"perk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"10712:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption storage pointer"}},"id":9126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10717:8:23","memberName":"consumed","nodeType":"MemberAccess","referencedDeclaration":8485,"src":"10712:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9127,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"10729:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10712:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9129,"nodeType":"ExpressionStatement","src":"10712:25:23"},{"eventCall":{"arguments":[{"id":9131,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9083,"src":"10766:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9132,"name":"ticketHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"10775:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9133,"name":"perkName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"10789:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9134,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"10799:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9130,"name":"PerkConsumed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"10753:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256)"}},"id":9135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10753:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9136,"nodeType":"EmitStatement","src":"10748:60:23"}]},"documentation":{"id":9081,"nodeType":"StructuredDocumentation","src":"10239:65:23","text":" @dev Consume a perk (e.g., redeem a free beer)"},"functionSelector":"73f20eb6","id":9138,"implemented":true,"kind":"function","modifiers":[{"id":9092,"kind":"modifierInvocation","modifierName":{"id":9091,"name":"onlyOwner","nameLocations":["10458:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10458:9:23"},"nodeType":"ModifierInvocation","src":"10458:9:23"}],"name":"consumePerk","nameLocation":"10318:11:23","nodeType":"FunctionDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9083,"mutability":"mutable","name":"eventId","nameLocation":"10347:7:23","nodeType":"VariableDeclaration","scope":9138,"src":"10339:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9082,"name":"uint256","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9085,"mutability":"mutable","name":"ticketHolder","nameLocation":"10372:12:23","nodeType":"VariableDeclaration","scope":9138,"src":"10364:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9084,"name":"address","nodeType":"ElementaryTypeName","src":"10364:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9087,"mutability":"mutable","name":"perkName","nameLocation":"10408:8:23","nodeType":"VariableDeclaration","scope":9138,"src":"10394:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9086,"name":"string","nodeType":"ElementaryTypeName","src":"10394:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9089,"mutability":"mutable","name":"quantity","nameLocation":"10434:8:23","nodeType":"VariableDeclaration","scope":9138,"src":"10426:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9088,"name":"uint256","nodeType":"ElementaryTypeName","src":"10426:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10329:119:23"},"returnParameters":{"id":9093,"nodeType":"ParameterList","parameters":[],"src":"10468:0:23"},"scope":9691,"src":"10309:506:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9208,"nodeType":"Block","src":"10998:417:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":9152,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"11023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9151,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[9648],"referencedDeclaration":9648,"src":"11016:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11016:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":9154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11033:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":9150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11008:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11008:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9156,"nodeType":"ExpressionStatement","src":"11008:48:23"},{"assignments":[9158],"declarations":[{"constant":false,"id":9158,"mutability":"mutable","name":"tierId","nameLocation":"11075:6:23","nodeType":"VariableDeclaration","scope":9208,"src":"11067:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9157,"name":"uint256","nodeType":"ElementaryTypeName","src":"11067:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9162,"initialValue":{"baseExpression":{"id":9159,"name":"tokenToTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8539,"src":"11084:11:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9161,"indexExpression":{"id":9160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"11096:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11084:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11067:37:23"},{"assignments":[9165],"declarations":[{"constant":false,"id":9165,"mutability":"mutable","name":"tierConfig","nameLocation":"11132:10:23","nodeType":"VariableDeclaration","scope":9208,"src":"11114:28:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig"},"typeName":{"id":9164,"nodeType":"UserDefinedTypeName","pathNode":{"id":9163,"name":"TierConfig","nameLocations":["11114:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":8470,"src":"11114:10:23"},"referencedDeclaration":8470,"src":"11114:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage_ptr","typeString":"struct UnchainedTickets.TierConfig"}},"visibility":"internal"}],"id":9171,"initialValue":{"baseExpression":{"baseExpression":{"id":9166,"name":"eventTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"11145:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.TierConfig storage ref))"}},"id":9168,"indexExpression":{"id":9167,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9141,"src":"11156:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11145:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.TierConfig storage ref)"}},"id":9170,"indexExpression":{"id":9169,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9158,"src":"11165:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11145:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage","typeString":"struct UnchainedTickets.TierConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11114:58:23"},{"body":{"id":9204,"nodeType":"Block","src":"11243:143:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":9187,"name":"tierConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9165,"src":"11277:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig memory"}},"id":9188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11288:11:23","memberName":"accessAreas","nodeType":"MemberAccess","referencedDeclaration":8466,"src":"11277:22:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":9190,"indexExpression":{"id":9189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"11300:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11277:25:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11271:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9185,"name":"bytes","nodeType":"ElementaryTypeName","src":"11271:5:23","typeDescriptions":{}}},"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11271:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9184,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11261:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11261:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":9196,"name":"area","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9145,"src":"11324:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11318:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9194,"name":"bytes","nodeType":"ElementaryTypeName","src":"11318:5:23","typeDescriptions":{}}},"id":9197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11318:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9193,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11308:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11308:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11261:69:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9203,"nodeType":"IfStatement","src":"11257:119:23","trueBody":{"id":9202,"nodeType":"Block","src":"11332:44:23","statements":[{"expression":{"hexValue":"74727565","id":9200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11357:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":9149,"id":9201,"nodeType":"Return","src":"11350:11:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9176,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"11203:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":9177,"name":"tierConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9165,"src":"11207:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig memory"}},"id":9178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11218:11:23","memberName":"accessAreas","nodeType":"MemberAccess","referencedDeclaration":8466,"src":"11207:22:23","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11230:6:23","memberName":"length","nodeType":"MemberAccess","src":"11207:29:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11203:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9205,"initializationExpression":{"assignments":[9173],"declarations":[{"constant":false,"id":9173,"mutability":"mutable","name":"i","nameLocation":"11196:1:23","nodeType":"VariableDeclaration","scope":9205,"src":"11188:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9172,"name":"uint256","nodeType":"ElementaryTypeName","src":"11188:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9175,"initialValue":{"hexValue":"30","id":9174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11200:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11188:13:23"},"loopExpression":{"expression":{"id":9182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11238:3:23","subExpression":{"id":9181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"11238:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9183,"nodeType":"ExpressionStatement","src":"11238:3:23"},"nodeType":"ForStatement","src":"11183:203:23"},{"expression":{"hexValue":"66616c7365","id":9206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11403:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":9149,"id":9207,"nodeType":"Return","src":"11396:12:23"}]},"documentation":{"id":9139,"nodeType":"StructuredDocumentation","src":"10821:66:23","text":" @dev Check if holder can access a specific area"},"functionSelector":"aa7c4df5","id":9209,"implemented":true,"kind":"function","modifiers":[],"name":"canAccessArea","nameLocation":"10901:13:23","nodeType":"FunctionDefinition","parameters":{"id":9146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9141,"mutability":"mutable","name":"eventId","nameLocation":"10923:7:23","nodeType":"VariableDeclaration","scope":9209,"src":"10915:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9140,"name":"uint256","nodeType":"ElementaryTypeName","src":"10915:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9143,"mutability":"mutable","name":"tokenId","nameLocation":"10940:7:23","nodeType":"VariableDeclaration","scope":9209,"src":"10932:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9142,"name":"uint256","nodeType":"ElementaryTypeName","src":"10932:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9145,"mutability":"mutable","name":"area","nameLocation":"10963:4:23","nodeType":"VariableDeclaration","scope":9209,"src":"10949:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9144,"name":"string","nodeType":"ElementaryTypeName","src":"10949:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10914:54:23"},"returnParameters":{"id":9149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9209,"src":"10992:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9147,"name":"bool","nodeType":"ElementaryTypeName","src":"10992:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10991:6:23"},"scope":9691,"src":"10892:523:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[571],"body":{"id":9305,"nodeType":"Block","src":"11828:847:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9224,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"11879:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9225,"name":"address","nodeType":"ElementaryTypeName","src":"11887:7:23","typeDescriptions":{}}},"id":9228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11887:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11879:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9230,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"11901:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11915:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11907:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9231,"name":"address","nodeType":"ElementaryTypeName","src":"11907:7:23","typeDescriptions":{}}},"id":9234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11907:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11901:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11879:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"11921:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9238,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"11929:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11921:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11879:57:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9254,"nodeType":"IfStatement","src":"11875:157:23","trueBody":{"id":9253,"nodeType":"Block","src":"11938:94:23","statements":[{"expression":{"arguments":[{"id":9245,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"11975:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"11981:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9247,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"11985:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9218,"src":"11989:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9249,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"11996:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9242,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"11952:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UnchainedTickets_$9691_$","typeString":"type(contract super UnchainedTickets)"}},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11958:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":571,"src":"11952:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":9250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11952:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9251,"nodeType":"ExpressionStatement","src":"11952:49:23"},{"functionReturnParameters":9223,"id":9252,"nodeType":"Return","src":"12015:7:23"}]}},{"assignments":[9256],"declarations":[{"constant":false,"id":9256,"mutability":"mutable","name":"eventId","nameLocation":"12050:7:23","nodeType":"VariableDeclaration","scope":9305,"src":"12042:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9255,"name":"uint256","nodeType":"ElementaryTypeName","src":"12042:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9260,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9257,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"12060:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030303030","id":9258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:7:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"src":"12060:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12042:30:23"},{"assignments":[9263],"declarations":[{"constant":false,"id":9263,"mutability":"mutable","name":"eventInfo","nameLocation":"12133:9:23","nodeType":"VariableDeclaration","scope":9305,"src":"12116:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo"},"typeName":{"id":9262,"nodeType":"UserDefinedTypeName","pathNode":{"id":9261,"name":"EventInfo","nameLocations":["12116:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"12116:9:23"},"referencedDeclaration":8454,"src":"12116:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage_ptr","typeString":"struct UnchainedTickets.EventInfo"}},"visibility":"internal"}],"id":9267,"initialValue":{"baseExpression":{"id":9264,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"12145:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9266,"indexExpression":{"id":9265,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9256,"src":"12152:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12145:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12116:44:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9269,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12236:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12242:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"12236:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9271,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"12254:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12264:14:23","memberName":"eventTimestamp","nodeType":"MemberAccess","referencedDeclaration":8439,"src":"12254:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12236:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9274,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12282:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12288:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"12282:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9276,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"12300:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12310:17:23","memberName":"eventEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"12300:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12282:45:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12236:91:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e73666572207469636b65747320647572696e67206576656e74","id":9280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12341:38:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_11756de43fa7685fed37905e74a1fd80a9141a5ccfbd4f69833397108a05a757","typeString":"literal_string \"Cannot transfer tickets during event\""},"value":"Cannot transfer tickets during event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11756de43fa7685fed37905e74a1fd80a9141a5ccfbd4f69833397108a05a757","typeString":"literal_string \"Cannot transfer tickets during event\""}],"id":9268,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12215:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12215:174:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9282,"nodeType":"ExpressionStatement","src":"12215:174:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9284,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"12464:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12474:12:23","memberName":"transferable","nodeType":"MemberAccess","referencedDeclaration":8443,"src":"12464:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9286,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12490:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12496:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"12490:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9288,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9263,"src":"12509:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12519:17:23","memberName":"eventEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"12509:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12490:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12464:72:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b65747320617265206e6f6e2d7472616e7366657261626c65206265666f7265206576656e7420656e6473","id":9292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12550:48:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b3e10b14e83cb448e48e5d59a66437b07e9993475024a2c7e3baebc3a2f0789","typeString":"literal_string \"Tickets are non-transferable before event ends\""},"value":"Tickets are non-transferable before event ends"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b3e10b14e83cb448e48e5d59a66437b07e9993475024a2c7e3baebc3a2f0789","typeString":"literal_string \"Tickets are non-transferable before event ends\""}],"id":9283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12443:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12443:165:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9294,"nodeType":"ExpressionStatement","src":"12443:165:23"},{"expression":{"arguments":[{"id":9298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9212,"src":"12642:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"12648:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9300,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"12652:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9218,"src":"12656:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9302,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"12663:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9295,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12619:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UnchainedTickets_$9691_$","typeString":"type(contract super UnchainedTickets)"}},"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12625:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":571,"src":"12619:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12619:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9304,"nodeType":"ExpressionStatement","src":"12619:49:23"}]},"documentation":{"id":9210,"nodeType":"StructuredDocumentation","src":"11421:242:23","text":" @dev Override transfer to enforce resale restrictions\n - Cannot transfer during event (between start and end time)\n - Can transfer before or after event\n - Royalties enforced on secondary sales via ERC2981"},"functionSelector":"f242432a","id":9306,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"11677:16:23","nodeType":"FunctionDefinition","overrides":{"id":9222,"nodeType":"OverrideSpecifier","overrides":[],"src":"11819:8:23"},"parameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9212,"mutability":"mutable","name":"from","nameLocation":"11711:4:23","nodeType":"VariableDeclaration","scope":9306,"src":"11703:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9211,"name":"address","nodeType":"ElementaryTypeName","src":"11703:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9214,"mutability":"mutable","name":"to","nameLocation":"11733:2:23","nodeType":"VariableDeclaration","scope":9306,"src":"11725:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9213,"name":"address","nodeType":"ElementaryTypeName","src":"11725:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9216,"mutability":"mutable","name":"id","nameLocation":"11753:2:23","nodeType":"VariableDeclaration","scope":9306,"src":"11745:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9215,"name":"uint256","nodeType":"ElementaryTypeName","src":"11745:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9218,"mutability":"mutable","name":"value","nameLocation":"11773:5:23","nodeType":"VariableDeclaration","scope":9306,"src":"11765:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9217,"name":"uint256","nodeType":"ElementaryTypeName","src":"11765:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9220,"mutability":"mutable","name":"data","nameLocation":"11801:4:23","nodeType":"VariableDeclaration","scope":9306,"src":"11788:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9219,"name":"bytes","nodeType":"ElementaryTypeName","src":"11788:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11693:118:23"},"returnParameters":{"id":9223,"nodeType":"ParameterList","parameters":[],"src":"11828:0:23"},"scope":9691,"src":"11668:1007:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9371,"nodeType":"Block","src":"12883:403:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9318,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12901:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12907:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"12901:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":9320,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"12919:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9322,"indexExpression":{"id":9321,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9309,"src":"12926:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12919:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":9323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12935:17:23","memberName":"eventEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"12919:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12901:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e74206e6f7420656e646564","id":9325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12954:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f6471c55bb451e9909d9c64e8a4242fd18c5ad3c453d5c942294e6f65a14139","typeString":"literal_string \"Event not ended\""},"value":"Event not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f6471c55bb451e9909d9c64e8a4242fd18c5ad3c453d5c942294e6f65a14139","typeString":"literal_string \"Event not ended\""}],"id":9317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12893:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12893:79:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9327,"nodeType":"ExpressionStatement","src":"12893:79:23"},{"body":{"id":9369,"nodeType":"Block","src":"13028:252:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"},"id":9348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":9339,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"13046:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":9341,"indexExpression":{"id":9340,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9309,"src":"13059:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13046:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":9345,"indexExpression":{"baseExpression":{"id":9342,"name":"holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"13068:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9344,"indexExpression":{"id":9343,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9329,"src":"13076:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13068:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13046:33:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9346,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"13083:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13095:4:23","memberName":"USED","nodeType":"MemberAccess","referencedDeclaration":8488,"src":"13083:16:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"src":"13046:53:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9368,"nodeType":"IfStatement","src":"13042:228:23","trueBody":{"id":9367,"nodeType":"Block","src":"13101:169:23","statements":[{"expression":{"id":9358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9349,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"13119:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":9354,"indexExpression":{"id":9350,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9309,"src":"13132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13119:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":9355,"indexExpression":{"baseExpression":{"id":9351,"name":"holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"13141:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9353,"indexExpression":{"id":9352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9329,"src":"13149:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13141:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13119:33:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9356,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"13155:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13167:8:23","memberName":"SOUVENIR","nodeType":"MemberAccess","referencedDeclaration":8489,"src":"13155:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"src":"13119:56:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"id":9359,"nodeType":"ExpressionStatement","src":"13119:56:23"},{"eventCall":{"arguments":[{"id":9361,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9309,"src":"13216:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9362,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9309,"src":"13225:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9363,"name":"TicketState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"13234:11:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TicketState_$8490_$","typeString":"type(enum UnchainedTickets.TicketState)"}},"id":9364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13246:8:23","memberName":"SOUVENIR","nodeType":"MemberAccess","referencedDeclaration":8489,"src":"13234:20:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}],"id":9360,"name":"TicketTransformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8584,"src":"13198:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_TicketState_$8490_$returns$__$","typeString":"function (uint256,uint256,enum UnchainedTickets.TicketState)"}},"id":9365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13198:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9366,"nodeType":"EmitStatement","src":"13193:62:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9329,"src":"13003:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9333,"name":"holders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9312,"src":"13007:7:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13015:6:23","memberName":"length","nodeType":"MemberAccess","src":"13007:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13003:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9370,"initializationExpression":{"assignments":[9329],"declarations":[{"constant":false,"id":9329,"mutability":"mutable","name":"i","nameLocation":"12996:1:23","nodeType":"VariableDeclaration","scope":9370,"src":"12988:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9328,"name":"uint256","nodeType":"ElementaryTypeName","src":"12988:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9331,"initialValue":{"hexValue":"30","id":9330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13000:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12988:13:23"},"loopExpression":{"expression":{"id":9337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13023:3:23","subExpression":{"id":9336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9329,"src":"13023:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9338,"nodeType":"ExpressionStatement","src":"13023:3:23"},"nodeType":"ForStatement","src":"12983:297:23"}]},"documentation":{"id":9307,"nodeType":"StructuredDocumentation","src":"12681:100:23","text":" @dev Transform all tickets for an event to souvenirs (batch operation post-event)"},"functionSelector":"b4611fa8","id":9372,"implemented":true,"kind":"function","modifiers":[{"id":9315,"kind":"modifierInvocation","modifierName":{"id":9314,"name":"onlyOwner","nameLocations":["12873:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12873:9:23"},"nodeType":"ModifierInvocation","src":"12873:9:23"}],"name":"batchTransformToSouvenirs","nameLocation":"12795:25:23","nodeType":"FunctionDefinition","parameters":{"id":9313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9309,"mutability":"mutable","name":"eventId","nameLocation":"12829:7:23","nodeType":"VariableDeclaration","scope":9372,"src":"12821:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9308,"name":"uint256","nodeType":"ElementaryTypeName","src":"12821:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9312,"mutability":"mutable","name":"holders","nameLocation":"12855:7:23","nodeType":"VariableDeclaration","scope":9372,"src":"12838:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9310,"name":"address","nodeType":"ElementaryTypeName","src":"12838:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9311,"nodeType":"ArrayTypeName","src":"12838:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12820:43:23"},"returnParameters":{"id":9316,"nodeType":"ParameterList","parameters":[],"src":"12883:0:23"},"scope":9691,"src":"12786:500:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9389,"nodeType":"Block","src":"13455:53:23","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9383,"name":"ticketStates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"13472:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_TicketState_$8490_$_$","typeString":"mapping(uint256 => mapping(address => enum UnchainedTickets.TicketState))"}},"id":9385,"indexExpression":{"id":9384,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"13485:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13472:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_enum$_TicketState_$8490_$","typeString":"mapping(address => enum UnchainedTickets.TicketState)"}},"id":9387,"indexExpression":{"id":9386,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"13494:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13472:29:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"functionReturnParameters":9382,"id":9388,"nodeType":"Return","src":"13465:36:23"}]},"documentation":{"id":9373,"nodeType":"StructuredDocumentation","src":"13292:65:23","text":" @dev Get ticket state (ACTIVE, USED, SOUVENIR)"},"functionSelector":"e1313346","id":9390,"implemented":true,"kind":"function","modifiers":[],"name":"getTicketState","nameLocation":"13371:14:23","nodeType":"FunctionDefinition","parameters":{"id":9378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9375,"mutability":"mutable","name":"eventId","nameLocation":"13394:7:23","nodeType":"VariableDeclaration","scope":9390,"src":"13386:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9374,"name":"uint256","nodeType":"ElementaryTypeName","src":"13386:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9377,"mutability":"mutable","name":"holder","nameLocation":"13411:6:23","nodeType":"VariableDeclaration","scope":9390,"src":"13403:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9376,"name":"address","nodeType":"ElementaryTypeName","src":"13403:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13385:33:23"},"returnParameters":{"id":9382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9390,"src":"13442:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"},"typeName":{"id":9380,"nodeType":"UserDefinedTypeName","pathNode":{"id":9379,"name":"TicketState","nameLocations":["13442:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":8490,"src":"13442:11:23"},"referencedDeclaration":8490,"src":"13442:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_TicketState_$8490","typeString":"enum UnchainedTickets.TicketState"}},"visibility":"internal"}],"src":"13441:13:23"},"scope":9691,"src":"13362:146:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9421,"nodeType":"Block","src":"13742:136:23","statements":[{"assignments":[9406],"declarations":[{"constant":false,"id":9406,"mutability":"mutable","name":"perk","nameLocation":"13775:4:23","nodeType":"VariableDeclaration","scope":9421,"src":"13752:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_memory_ptr","typeString":"struct UnchainedTickets.PerkConsumption"},"typeName":{"id":9405,"nodeType":"UserDefinedTypeName","pathNode":{"id":9404,"name":"PerkConsumption","nameLocations":["13752:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":8486,"src":"13752:15:23"},"referencedDeclaration":8486,"src":"13752:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage_ptr","typeString":"struct UnchainedTickets.PerkConsumption"}},"visibility":"internal"}],"id":9414,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":9407,"name":"perkTracking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8535,"src":"13782:12:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$_$","typeString":"mapping(uint256 => mapping(address => mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref)))"}},"id":9409,"indexExpression":{"id":9408,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"13795:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13782:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$_$","typeString":"mapping(address => mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref))"}},"id":9411,"indexExpression":{"id":9410,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9395,"src":"13804:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13782:29:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_PerkConsumption_$8486_storage_$","typeString":"mapping(string memory => struct UnchainedTickets.PerkConsumption storage ref)"}},"id":9413,"indexExpression":{"id":9412,"name":"perkName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9397,"src":"13812:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13782:39:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_storage","typeString":"struct UnchainedTickets.PerkConsumption storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13752:69:23"},{"expression":{"components":[{"expression":{"id":9415,"name":"perk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"13839:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_memory_ptr","typeString":"struct UnchainedTickets.PerkConsumption memory"}},"id":9416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13844:11:23","memberName":"maxQuantity","nodeType":"MemberAccess","referencedDeclaration":8483,"src":"13839:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9417,"name":"perk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9406,"src":"13857:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PerkConsumption_$8486_memory_ptr","typeString":"struct UnchainedTickets.PerkConsumption memory"}},"id":9418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13862:8:23","memberName":"consumed","nodeType":"MemberAccess","referencedDeclaration":8485,"src":"13857:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13838:33:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":9403,"id":9420,"nodeType":"Return","src":"13831:40:23"}]},"documentation":{"id":9391,"nodeType":"StructuredDocumentation","src":"13514:51:23","text":" @dev Get perk consumption status"},"functionSelector":"103f770f","id":9422,"implemented":true,"kind":"function","modifiers":[],"name":"getPerkStatus","nameLocation":"13579:13:23","nodeType":"FunctionDefinition","parameters":{"id":9398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9393,"mutability":"mutable","name":"eventId","nameLocation":"13610:7:23","nodeType":"VariableDeclaration","scope":9422,"src":"13602:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9392,"name":"uint256","nodeType":"ElementaryTypeName","src":"13602:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9395,"mutability":"mutable","name":"holder","nameLocation":"13635:6:23","nodeType":"VariableDeclaration","scope":9422,"src":"13627:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9394,"name":"address","nodeType":"ElementaryTypeName","src":"13627:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9397,"mutability":"mutable","name":"perkName","nameLocation":"13665:8:23","nodeType":"VariableDeclaration","scope":9422,"src":"13651:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9396,"name":"string","nodeType":"ElementaryTypeName","src":"13651:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13592:87:23"},"returnParameters":{"id":9403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9400,"mutability":"mutable","name":"maxQuantity","nameLocation":"13711:11:23","nodeType":"VariableDeclaration","scope":9422,"src":"13703:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9399,"name":"uint256","nodeType":"ElementaryTypeName","src":"13703:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9402,"mutability":"mutable","name":"consumed","nameLocation":"13732:8:23","nodeType":"VariableDeclaration","scope":9422,"src":"13724:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9401,"name":"uint256","nodeType":"ElementaryTypeName","src":"13724:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13702:39:23"},"scope":9691,"src":"13570:308:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9459,"nodeType":"Block","src":"14118:213:23","statements":[{"assignments":[9438],"declarations":[{"constant":false,"id":9438,"mutability":"mutable","name":"assignment","nameLocation":"14150:10:23","nodeType":"VariableDeclaration","scope":9459,"src":"14128:32:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_memory_ptr","typeString":"struct UnchainedTickets.SeatAssignment"},"typeName":{"id":9437,"nodeType":"UserDefinedTypeName","pathNode":{"id":9436,"name":"SeatAssignment","nameLocations":["14128:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":8479,"src":"14128:14:23"},"referencedDeclaration":8479,"src":"14128:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_storage_ptr","typeString":"struct UnchainedTickets.SeatAssignment"}},"visibility":"internal"}],"id":9444,"initialValue":{"baseExpression":{"baseExpression":{"id":9439,"name":"seatAssignments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8526,"src":"14163:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.SeatAssignment storage ref))"}},"id":9441,"indexExpression":{"id":9440,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9425,"src":"14179:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14163:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SeatAssignment_$8479_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.SeatAssignment storage ref)"}},"id":9443,"indexExpression":{"id":9442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9427,"src":"14188:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14163:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_storage","typeString":"struct UnchainedTickets.SeatAssignment storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14128:68:23"},{"expression":{"arguments":[{"expression":{"id":9446,"name":"assignment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"14214:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_memory_ptr","typeString":"struct UnchainedTickets.SeatAssignment memory"}},"id":9447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14225:8:23","memberName":"assigned","nodeType":"MemberAccess","referencedDeclaration":8478,"src":"14214:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20736561742061737369676e6564","id":9448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14235:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e20c9da962f777b0551d44751bf068d7e59b2701da404259aa62c226527bbee","typeString":"literal_string \"No seat assigned\""},"value":"No seat assigned"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e20c9da962f777b0551d44751bf068d7e59b2701da404259aa62c226527bbee","typeString":"literal_string \"No seat assigned\""}],"id":9445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14206:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14206:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9450,"nodeType":"ExpressionStatement","src":"14206:48:23"},{"expression":{"components":[{"expression":{"id":9451,"name":"assignment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"14272:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_memory_ptr","typeString":"struct UnchainedTickets.SeatAssignment memory"}},"id":9452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14283:7:23","memberName":"section","nodeType":"MemberAccess","referencedDeclaration":8472,"src":"14272:18:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":9453,"name":"assignment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"14292:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_memory_ptr","typeString":"struct UnchainedTickets.SeatAssignment memory"}},"id":9454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14303:3:23","memberName":"row","nodeType":"MemberAccess","referencedDeclaration":8474,"src":"14292:14:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":9455,"name":"assignment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"14308:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_SeatAssignment_$8479_memory_ptr","typeString":"struct UnchainedTickets.SeatAssignment memory"}},"id":9456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14319:4:23","memberName":"seat","nodeType":"MemberAccess","referencedDeclaration":8476,"src":"14308:15:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14271:53:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(string memory,string memory,string memory)"}},"functionReturnParameters":9435,"id":9458,"nodeType":"Return","src":"14264:60:23"}]},"documentation":{"id":9423,"nodeType":"StructuredDocumentation","src":"13884:55:23","text":" @dev Get seat assignment for a token"},"functionSelector":"268bad9b","id":9460,"implemented":true,"kind":"function","modifiers":[],"name":"getSeatAssignment","nameLocation":"13953:17:23","nodeType":"FunctionDefinition","parameters":{"id":9428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9425,"mutability":"mutable","name":"eventId","nameLocation":"13979:7:23","nodeType":"VariableDeclaration","scope":9460,"src":"13971:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9424,"name":"uint256","nodeType":"ElementaryTypeName","src":"13971:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9427,"mutability":"mutable","name":"tokenId","nameLocation":"13996:7:23","nodeType":"VariableDeclaration","scope":9460,"src":"13988:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9426,"name":"uint256","nodeType":"ElementaryTypeName","src":"13988:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13970:34:23"},"returnParameters":{"id":9435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9430,"mutability":"mutable","name":"section","nameLocation":"14066:7:23","nodeType":"VariableDeclaration","scope":9460,"src":"14052:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9429,"name":"string","nodeType":"ElementaryTypeName","src":"14052:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9432,"mutability":"mutable","name":"row","nameLocation":"14089:3:23","nodeType":"VariableDeclaration","scope":9460,"src":"14075:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9431,"name":"string","nodeType":"ElementaryTypeName","src":"14075:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9434,"mutability":"mutable","name":"seat","nameLocation":"14108:4:23","nodeType":"VariableDeclaration","scope":9460,"src":"14094:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9433,"name":"string","nodeType":"ElementaryTypeName","src":"14094:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14051:62:23"},"scope":9691,"src":"13944:387:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9486,"nodeType":"Block","src":"14482:118:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9472,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9465,"src":"14500:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":9473,"name":"eventTierCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"14509:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9475,"indexExpression":{"id":9474,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"14524:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14509:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14500:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696572","id":9477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14534:14:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe","typeString":"literal_string \"Invalid tier\""},"value":"Invalid tier"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe","typeString":"literal_string \"Invalid tier\""}],"id":9471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14492:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14492:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9479,"nodeType":"ExpressionStatement","src":"14492:57:23"},{"expression":{"baseExpression":{"baseExpression":{"id":9480,"name":"eventTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"14566:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct UnchainedTickets.TierConfig storage ref))"}},"id":9482,"indexExpression":{"id":9481,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"14577:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14566:19:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TierConfig_$8470_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.TierConfig storage ref)"}},"id":9484,"indexExpression":{"id":9483,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9465,"src":"14586:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14566:27:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage","typeString":"struct UnchainedTickets.TierConfig storage ref"}},"functionReturnParameters":9470,"id":9485,"nodeType":"Return","src":"14559:34:23"}]},"documentation":{"id":9461,"nodeType":"StructuredDocumentation","src":"14337:44:23","text":" @dev Get tier information"},"functionSelector":"fe6ad9d5","id":9487,"implemented":true,"kind":"function","modifiers":[],"name":"getTierInfo","nameLocation":"14395:11:23","nodeType":"FunctionDefinition","parameters":{"id":9466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9463,"mutability":"mutable","name":"eventId","nameLocation":"14415:7:23","nodeType":"VariableDeclaration","scope":9487,"src":"14407:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9462,"name":"uint256","nodeType":"ElementaryTypeName","src":"14407:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9465,"mutability":"mutable","name":"tierId","nameLocation":"14432:6:23","nodeType":"VariableDeclaration","scope":9487,"src":"14424:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9464,"name":"uint256","nodeType":"ElementaryTypeName","src":"14424:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14406:33:23"},"returnParameters":{"id":9470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9487,"src":"14463:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_memory_ptr","typeString":"struct UnchainedTickets.TierConfig"},"typeName":{"id":9468,"nodeType":"UserDefinedTypeName","pathNode":{"id":9467,"name":"TierConfig","nameLocations":["14463:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":8470,"src":"14463:10:23"},"referencedDeclaration":8470,"src":"14463:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_TierConfig_$8470_storage_ptr","typeString":"struct UnchainedTickets.TierConfig"}},"visibility":"internal"}],"src":"14462:19:23"},"scope":9691,"src":"14386:214:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9542,"nodeType":"Block","src":"14773:375:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9500,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"14791:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9502,"indexExpression":{"id":9501,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"14798:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14791:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":9503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14807:9:23","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8437,"src":"14791:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14791:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420646f6573206e6f74206578697374","id":9506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14822:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""},"value":"Event does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""}],"id":9499,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14783:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14783:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9508,"nodeType":"ExpressionStatement","src":"14783:62:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9510,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"14863:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":9511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14877:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14863:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c74792063616e6e6f74206578636565642031303025","id":9513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14884:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815","typeString":"literal_string \"Royalty cannot exceed 100%\""},"value":"Royalty cannot exceed 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815","typeString":"literal_string \"Royalty cannot exceed 100%\""}],"id":9509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14855:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14855:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9515,"nodeType":"ExpressionStatement","src":"14855:58:23"},{"expression":{"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9516,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"14924:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9518,"indexExpression":{"id":9517,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"14931:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14924:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":9519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14940:16:23","memberName":"royaltyRecipient","nodeType":"MemberAccess","referencedDeclaration":8453,"src":"14924:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9520,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9492,"src":"14959:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14924:44:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9522,"nodeType":"ExpressionStatement","src":"14924:44:23"},{"expression":{"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":9523,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"14978:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9525,"indexExpression":{"id":9524,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"14985:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14978:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":9526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14994:10:23","memberName":"royaltyBps","nodeType":"MemberAccess","referencedDeclaration":8451,"src":"14978:26:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9527,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"15007:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"14978:39:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":9529,"nodeType":"ExpressionStatement","src":"14978:39:23"},{"expression":{"arguments":[{"id":9531,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"15045:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9532,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9492,"src":"15054:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9533,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"15065:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":9530,"name":"_setTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"15028:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint96_$returns$__$","typeString":"function (uint256,address,uint96)"}},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15028:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9535,"nodeType":"ExpressionStatement","src":"15028:48:23"},{"eventCall":{"arguments":[{"id":9537,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9490,"src":"15110:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9538,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9492,"src":"15119:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9539,"name":"royaltyBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9494,"src":"15130:10:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":9536,"name":"RoyaltyConfigured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"15092:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint96_$returns$__$","typeString":"function (uint256,address,uint96)"}},"id":9540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15092:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9541,"nodeType":"EmitStatement","src":"15087:54:23"}]},"documentation":{"id":9488,"nodeType":"StructuredDocumentation","src":"14606:65:23","text":" @dev Update royalty configuration for an event"},"functionSelector":"417ac869","id":9543,"implemented":true,"kind":"function","modifiers":[{"id":9497,"kind":"modifierInvocation","modifierName":{"id":9496,"name":"onlyOwner","nameLocations":["14763:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14763:9:23"},"nodeType":"ModifierInvocation","src":"14763:9:23"}],"name":"updateRoyalty","nameLocation":"14685:13:23","nodeType":"FunctionDefinition","parameters":{"id":9495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"mutability":"mutable","name":"eventId","nameLocation":"14707:7:23","nodeType":"VariableDeclaration","scope":9543,"src":"14699:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9489,"name":"uint256","nodeType":"ElementaryTypeName","src":"14699:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9492,"mutability":"mutable","name":"recipient","nameLocation":"14724:9:23","nodeType":"VariableDeclaration","scope":9543,"src":"14716:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9491,"name":"address","nodeType":"ElementaryTypeName","src":"14716:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9494,"mutability":"mutable","name":"royaltyBps","nameLocation":"14742:10:23","nodeType":"VariableDeclaration","scope":9543,"src":"14735:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9493,"name":"uint96","nodeType":"ElementaryTypeName","src":"14735:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"14698:55:23"},"returnParameters":{"id":9498,"nodeType":"ParameterList","parameters":[],"src":"14773:0:23"},"scope":9691,"src":"14676:472:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[407],"body":{"id":9618,"nodeType":"Block","src":"15314:691:23","statements":[{"assignments":[9553],"declarations":[{"constant":false,"id":9553,"mutability":"mutable","name":"eventId","nameLocation":"15332:7:23","nodeType":"VariableDeclaration","scope":9618,"src":"15324:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9552,"name":"uint256","nodeType":"ElementaryTypeName","src":"15324:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9557,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9546,"src":"15342:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030303030","id":9555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15352:7:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"src":"15342:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15324:35:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9559,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"15377:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9561,"indexExpression":{"id":9560,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"15384:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15377:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"id":9562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15393:9:23","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8437,"src":"15377:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15405:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15377:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420646f6573206e6f74206578697374","id":9565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15408:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""},"value":"Event does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""}],"id":9558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15369:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15369:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9567,"nodeType":"ExpressionStatement","src":"15369:62:23"},{"assignments":[9570],"declarations":[{"constant":false,"id":9570,"mutability":"mutable","name":"eventInfo","nameLocation":"15459:9:23","nodeType":"VariableDeclaration","scope":9618,"src":"15442:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo"},"typeName":{"id":9569,"nodeType":"UserDefinedTypeName","pathNode":{"id":9568,"name":"EventInfo","nameLocations":["15442:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":8454,"src":"15442:9:23"},"referencedDeclaration":8454,"src":"15442:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage_ptr","typeString":"struct UnchainedTickets.EventInfo"}},"visibility":"internal"}],"id":9574,"initialValue":{"baseExpression":{"id":9571,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"15471:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_EventInfo_$8454_storage_$","typeString":"mapping(uint256 => struct UnchainedTickets.EventInfo storage ref)"}},"id":9573,"indexExpression":{"id":9572,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9553,"src":"15478:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15471:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_storage","typeString":"struct UnchainedTickets.EventInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15442:44:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":9577,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"15654:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15664:19:23","memberName":"souvenirMetadataURI","nodeType":"MemberAccess","referencedDeclaration":8449,"src":"15654:29:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15648:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9575,"name":"bytes","nodeType":"ElementaryTypeName","src":"15648:5:23","typeDescriptions":{}}},"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15648:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15685:6:23","memberName":"length","nodeType":"MemberAccess","src":"15648:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15694:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15648:47:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9583,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15711:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15717:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"15711:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9585,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"15729:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15739:17:23","memberName":"eventEndTimestamp","nodeType":"MemberAccess","referencedDeclaration":8441,"src":"15729:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:45:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15648:108:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9593,"nodeType":"IfStatement","src":"15644:175:23","trueBody":{"id":9592,"nodeType":"Block","src":"15758:61:23","statements":[{"expression":{"expression":{"id":9589,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"15779:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15789:19:23","memberName":"souvenirMetadataURI","nodeType":"MemberAccess","referencedDeclaration":8449,"src":"15779:29:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9551,"id":9591,"nodeType":"Return","src":"15772:36:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":9596,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"15839:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15849:11:23","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":8447,"src":"15839:21:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15833:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9594,"name":"bytes","nodeType":"ElementaryTypeName","src":"15833:5:23","typeDescriptions":{}}},"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15833:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15862:6:23","memberName":"length","nodeType":"MemberAccess","src":"15833:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15871:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15833:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9606,"nodeType":"IfStatement","src":"15829:98:23","trueBody":{"id":9605,"nodeType":"Block","src":"15874:53:23","statements":[{"expression":{"expression":{"id":9602,"name":"eventInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9570,"src":"15895:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_EventInfo_$8454_memory_ptr","typeString":"struct UnchainedTickets.EventInfo memory"}},"id":9603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15905:11:23","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":8447,"src":"15895:21:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9551,"id":9604,"nodeType":"Return","src":"15888:28:23"}]}},{"expression":{"arguments":[{"arguments":[{"id":9611,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"15968:8:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9546,"src":"15978:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15986:8:23","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3545,"src":"15978:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15978:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":9609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15951:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15955:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"15951:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15951:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15944:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9607,"name":"string","nodeType":"ElementaryTypeName","src":"15944:6:23","typeDescriptions":{}}},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15944:54:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9551,"id":9617,"nodeType":"Return","src":"15937:61:23"}]},"documentation":{"id":9544,"nodeType":"StructuredDocumentation","src":"15154:80:23","text":" @dev Get token URI - returns souvenir metadata if transformed"},"functionSelector":"0e89341c","id":9619,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"15248:3:23","nodeType":"FunctionDefinition","overrides":{"id":9548,"nodeType":"OverrideSpecifier","overrides":[],"src":"15281:8:23"},"parameters":{"id":9547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9546,"mutability":"mutable","name":"tokenId","nameLocation":"15260:7:23","nodeType":"VariableDeclaration","scope":9619,"src":"15252:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9545,"name":"uint256","nodeType":"ElementaryTypeName","src":"15252:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15251:17:23"},"returnParameters":{"id":9551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9619,"src":"15299:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9549,"name":"string","nodeType":"ElementaryTypeName","src":"15299:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15298:15:23"},"scope":9691,"src":"15239:766:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9631,"nodeType":"Block","src":"16115:36:23","statements":[{"expression":{"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9627,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"16125:8:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9628,"name":"baseURI_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"16136:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"16125:19:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9630,"nodeType":"ExpressionStatement","src":"16125:19:23"}]},"documentation":{"id":9620,"nodeType":"StructuredDocumentation","src":"16011:36:23","text":" @dev Set base URI"},"functionSelector":"55f804b3","id":9632,"implemented":true,"kind":"function","modifiers":[{"id":9625,"kind":"modifierInvocation","modifierName":{"id":9624,"name":"onlyOwner","nameLocations":["16105:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"16105:9:23"},"nodeType":"ModifierInvocation","src":"16105:9:23"}],"name":"setBaseURI","nameLocation":"16061:10:23","nodeType":"FunctionDefinition","parameters":{"id":9623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9622,"mutability":"mutable","name":"baseURI_","nameLocation":"16086:8:23","nodeType":"VariableDeclaration","scope":9632,"src":"16072:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9621,"name":"string","nodeType":"ElementaryTypeName","src":"16072:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16071:24:23"},"returnParameters":{"id":9626,"nodeType":"ParameterList","parameters":[],"src":"16115:0:23"},"scope":9691,"src":"16052:99:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1522],"body":{"id":9647,"nodeType":"Block","src":"16276:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9642,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9635,"src":"16305:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9641,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1498,1507],"referencedDeclaration":1498,"src":"16293:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16293:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16316:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16293:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9640,"id":9646,"nodeType":"Return","src":"16286:31:23"}]},"documentation":{"id":9633,"nodeType":"StructuredDocumentation","src":"16157:45:23","text":" @dev Check if token exists"},"functionSelector":"4f558e79","id":9648,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"16216:6:23","nodeType":"FunctionDefinition","overrides":{"id":9637,"nodeType":"OverrideSpecifier","overrides":[],"src":"16252:8:23"},"parameters":{"id":9636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9635,"mutability":"mutable","name":"tokenId","nameLocation":"16231:7:23","nodeType":"VariableDeclaration","scope":9648,"src":"16223:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9634,"name":"uint256","nodeType":"ElementaryTypeName","src":"16223:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16222:17:23"},"returnParameters":{"id":9640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9648,"src":"16270:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9638,"name":"bool","nodeType":"ElementaryTypeName","src":"16270:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16269:6:23"},"scope":9691,"src":"16207:117:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[396,1895],"body":{"id":9663,"nodeType":"Block","src":"16518:60:23","statements":[{"expression":{"arguments":[{"id":9660,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9650,"src":"16559:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9658,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"16535:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UnchainedTickets_$9691_$","typeString":"type(contract super UnchainedTickets)"}},"id":9659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16541:17:23","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1895,"src":"16535:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16535:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9657,"id":9662,"nodeType":"Return","src":"16528:43:23"}]},"functionSelector":"01ffc9a7","id":9664,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"16390:17:23","nodeType":"FunctionDefinition","overrides":{"id":9654,"nodeType":"OverrideSpecifier","overrides":[{"id":9652,"name":"ERC1155","nameLocations":["16473:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"16473:7:23"},{"id":9653,"name":"ERC2981","nameLocations":["16482:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":2085,"src":"16482:7:23"}],"src":"16464:26:23"},"parameters":{"id":9651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9650,"mutability":"mutable","name":"interfaceId","nameLocation":"16415:11:23","nodeType":"VariableDeclaration","scope":9664,"src":"16408:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9649,"name":"bytes4","nodeType":"ElementaryTypeName","src":"16408:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"16407:20:23"},"returnParameters":{"id":9657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9664,"src":"16508:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9655,"name":"bool","nodeType":"ElementaryTypeName","src":"16508:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16507:6:23"},"scope":9691,"src":"16381:197:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[770,1647],"body":{"id":9689,"nodeType":"Block","src":"16754:53:23","statements":[{"expression":{"arguments":[{"id":9683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9666,"src":"16778:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9684,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9668,"src":"16784:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9685,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"16788:3:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9686,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"16793:6:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":9680,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"16764:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_UnchainedTickets_$9691_$","typeString":"type(contract super UnchainedTickets)"}},"id":9682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16770:7:23","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1647,"src":"16764:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":9687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16764:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9688,"nodeType":"ExpressionStatement","src":"16764:36:23"}]},"id":9690,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"16593:7:23","nodeType":"FunctionDefinition","overrides":{"id":9678,"nodeType":"OverrideSpecifier","overrides":[{"id":9676,"name":"ERC1155","nameLocations":["16730:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"16730:7:23"},{"id":9677,"name":"ERC1155Supply","nameLocations":["16739:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"16739:13:23"}],"src":"16721:32:23"},"parameters":{"id":9675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9666,"mutability":"mutable","name":"from","nameLocation":"16618:4:23","nodeType":"VariableDeclaration","scope":9690,"src":"16610:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9665,"name":"address","nodeType":"ElementaryTypeName","src":"16610:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9668,"mutability":"mutable","name":"to","nameLocation":"16640:2:23","nodeType":"VariableDeclaration","scope":9690,"src":"16632:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9667,"name":"address","nodeType":"ElementaryTypeName","src":"16632:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9671,"mutability":"mutable","name":"ids","nameLocation":"16669:3:23","nodeType":"VariableDeclaration","scope":9690,"src":"16652:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9669,"name":"uint256","nodeType":"ElementaryTypeName","src":"16652:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9670,"nodeType":"ArrayTypeName","src":"16652:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9674,"mutability":"mutable","name":"values","nameLocation":"16699:6:23","nodeType":"VariableDeclaration","scope":9690,"src":"16682:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9672,"name":"uint256","nodeType":"ElementaryTypeName","src":"16682:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9673,"nodeType":"ArrayTypeName","src":"16682:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16600:111:23"},"returnParameters":{"id":9679,"nodeType":"ParameterList","parameters":[],"src":"16754:0:23"},"scope":9691,"src":"16584:223:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":9692,"src":"961:15848:23","usedErrors":[13,18,269,274,279,286,291,296,303,1850,1855,1864,1871],"usedEvents":[24,1241,1256,1265,1272,8551,8559,8569,8575,8584,8594,8606,8614]}],"src":"32:16778:23"},"id":23}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol":{"ERC1155Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ERC1155Supply":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xfb3846932e2bcdc16d400502e89a452551eaf522e3db3e4de634d6bc167500c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc3b4ca11ea0e46816996b888042dd400217596fbfe53c54a0a41c51979c35c4\",\"dweb:/ipfs/QmanCqi8fhxUi2KfL5pnkqFnYacPNRV8gEXrfB6nozEPjV\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220036a723b91e9e2683afe0e1e270f1840f340c2f240082104f4016e3d0178825b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH11 0x723B91E9E2683AFE0E1E27 0xF XOR BLOCKHASH RETURN BLOCKHASH 0xC2 CALLCODE BLOCKHASH ADDMOD 0x21 DIV DELEGATECALL ADD PUSH15 0x3D0178825B64736F6C634300081400 CALLER ","sourceMap":"439:3114:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3114:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220036a723b91e9e2683afe0e1e270f1840f340c2f240082104f4016e3d0178825b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH11 0x723B91E9E2683AFE0E1E27 0xF XOR BLOCKHASH RETURN BLOCKHASH 0xC2 CALLCODE BLOCKHASH ADDMOD 0x21 DIV DELEGATECALL ADD PUSH15 0x3D0178825B64736F6C634300081400 CALLER ","sourceMap":"439:3114:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the ERC. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777543d88013fdd0ee7f47ac619fb13a1993bb667675d8816fde024f73cfbf2d\",\"dweb:/ipfs/QmfDS9uL1XZ2oUe1PH8eRCRyu3Hf98cK8ksGf4Ww7kg5zv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f13f14261fd0436ff397fbb334c27d09f8165049065d7aef490978d2fb1eb7b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x13F14261FD0436FF397FBB334C27D09F8165049065D7AEF490978D2FB1EB7B64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"459:20446:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:20446:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f13f14261fd0436ff397fbb334c27d09f8165049065d7aef490978d2fb1eb7b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x13F14261FD0436FF397FBB334C27D09F8165049065D7AEF490978D2FB1EB7B64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"459:20446:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abb763542953af10db248c3664564a3dd4f2a1613e2a7e6601919580a7f3f8e464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xB7 PUSH4 0x542953AF LT 0xDB 0x24 DUP13 CALLDATASIZE PUSH5 0x564A3DD4F2 LOG1 PUSH2 0x3E2A PUSH31 0x6601919580A7F3F8E464736F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abb763542953af10db248c3664564a3dd4f2a1613e2a7e6601919580a7f3f8e464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xB7 PUSH4 0x542953AF LT 0xDB 0x24 DUP13 CALLDATASIZE PUSH5 0x564A3DD4F2 LOG1 PUSH2 0x3E2A PUSH31 0x6601919580A7F3F8E464736F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/UnchainedTickets.sol":{"UnchainedTickets":{"abi":[{"inputs":[{"internalType":"string","name":"baseURI_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidDefaultRoyalty","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidDefaultRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"numerator","type":"uint256"},{"internalType":"uint256","name":"denominator","type":"uint256"}],"name":"ERC2981InvalidTokenRoyalty","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC2981InvalidTokenRoyaltyReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxSupply","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"eventTimestamp","type":"uint256"}],"name":"EventCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"address","name":"holder","type":"address"},{"indexed":false,"internalType":"string","name":"perkName","type":"string"},{"indexed":false,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"PerkConsumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint96","name":"royaltyBps","type":"uint96"}],"name":"RoyaltyConfigured","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"section","type":"string"},{"indexed":false,"internalType":"string","name":"row","type":"string"},{"indexed":false,"internalType":"string","name":"seat","type":"string"}],"name":"SeatAssigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"TicketMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"enum UnchainedTickets.TicketState","name":"newState","type":"uint8"}],"name":"TicketTransformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"TicketUsed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tierId","type":"uint256"},{"indexed":false,"internalType":"string","name":"tierName","type":"string"}],"name":"TierCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"address[]","name":"holders","type":"address[]"}],"name":"batchTransformToSouvenirs","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"area","type":"string"}],"name":"canAccessArea","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"address","name":"ticketHolder","type":"address"},{"internalType":"string","name":"perkName","type":"string"},{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"consumePerk","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"eventTimestamp","type":"uint256"},{"internalType":"uint256","name":"eventEndTimestamp","type":"uint256"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"string","name":"souvenirMetadataURI","type":"string"},{"internalType":"address","name":"royaltyRecipient","type":"address"},{"internalType":"uint96","name":"royaltyBps","type":"uint96"}],"name":"createEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"string","name":"tierName","type":"string"},{"internalType":"enum UnchainedTickets.TicketTier","name":"tier","type":"uint8"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"priceCents","type":"uint256"},{"internalType":"string[]","name":"accessAreas","type":"string[]"},{"internalType":"string[]","name":"includedPerks","type":"string[]"}],"name":"createTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"eventTierCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"eventTiers","outputs":[{"internalType":"enum UnchainedTickets.TicketTier","name":"tier","type":"uint8"},{"internalType":"string","name":"tierName","type":"string"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"priceCents","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"eventTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"events","outputs":[{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"eventTimestamp","type":"uint256"},{"internalType":"uint256","name":"eventEndTimestamp","type":"uint256"},{"internalType":"bool","name":"transferable","type":"bool"},{"internalType":"bool","name":"active","type":"bool"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"string","name":"souvenirMetadataURI","type":"string"},{"internalType":"uint96","name":"royaltyBps","type":"uint96"},{"internalType":"address","name":"royaltyRecipient","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"address","name":"holder","type":"address"},{"internalType":"string","name":"perkName","type":"string"}],"name":"getPerkStatus","outputs":[{"internalType":"uint256","name":"maxQuantity","type":"uint256"},{"internalType":"uint256","name":"consumed","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSeatAssignment","outputs":[{"internalType":"string","name":"section","type":"string"},{"internalType":"string","name":"row","type":"string"},{"internalType":"string","name":"seat","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"address","name":"holder","type":"address"}],"name":"getTicketState","outputs":[{"internalType":"enum UnchainedTickets.TicketState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"getTierInfo","outputs":[{"components":[{"internalType":"enum UnchainedTickets.TicketTier","name":"tier","type":"uint8"},{"internalType":"string","name":"tierName","type":"string"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"priceCents","type":"uint256"},{"internalType":"string[]","name":"accessAreas","type":"string[]"},{"internalType":"string[]","name":"includedPerks","type":"string[]"}],"internalType":"struct UnchainedTickets.TierConfig","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"section","type":"string"},{"internalType":"string","name":"row","type":"string"},{"internalType":"string","name":"seat","type":"string"}],"name":"mintTicketWithTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"string","name":"","type":"string"}],"name":"perkTracking","outputs":[{"internalType":"string","name":"perkName","type":"string"},{"internalType":"uint256","name":"maxQuantity","type":"uint256"},{"internalType":"uint256","name":"consumed","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"seatAssignments","outputs":[{"internalType":"string","name":"section","type":"string"},{"internalType":"string","name":"row","type":"string"},{"internalType":"string","name":"seat","type":"string"},{"internalType":"bool","name":"assigned","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI_","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"ticketStates","outputs":[{"internalType":"enum UnchainedTickets.TicketState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenToTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint96","name":"royaltyBps","type":"uint96"}],"name":"updateRoyalty","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"},{"internalType":"address","name":"ticketHolder","type":"address"},{"internalType":"bool","name":"transformToSouvenir","type":"bool"}],"name":"useTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"usedTickets","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_365":{"entryPoint":null,"id":365,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8631":{"entryPoint":null,"id":8631,"parameterSlots":1,"returnSlots":0},"@_setURI_982":{"entryPoint":252,"id":982,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":270,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":721,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":434,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":517,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":374,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":352,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3987:24","statements":[{"nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:24"},"nodeType":"YulFunctionCall","src":"66:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:24"},"nodeType":"YulFunctionCall","src":"56:31:24"},"nodeType":"YulExpressionStatement","src":"56:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:24"},"nodeType":"YulFunctionCall","src":"96:15:24"},"nodeType":"YulExpressionStatement","src":"96:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:24"},"nodeType":"YulFunctionCall","src":"120:15:24"},"nodeType":"YulExpressionStatement","src":"120:15:24"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:24"},{"body":{"nodeType":"YulBlock","src":"201:325:24","statements":[{"nodeType":"YulAssignment","src":"211:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:24","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:24"},"nodeType":"YulFunctionCall","src":"221:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:24","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:24"},"nodeType":"YulFunctionCall","src":"268:12:24"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:24","statements":[{"nodeType":"YulAssignment","src":"321:27:24","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:24"},"nodeType":"YulFunctionCall","src":"331:17:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:24"},"nodeType":"YulFunctionCall","src":"292:26:24"},"nodeType":"YulIf","src":"289:61:24"},{"body":{"nodeType":"YulBlock","src":"409:111:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:24"},"nodeType":"YulFunctionCall","src":"433:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:24"},"nodeType":"YulFunctionCall","src":"423:31:24"},"nodeType":"YulExpressionStatement","src":"423:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:24"},"nodeType":"YulFunctionCall","src":"467:15:24"},"nodeType":"YulExpressionStatement","src":"467:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:24"},"nodeType":"YulFunctionCall","src":"495:15:24"},"nodeType":"YulExpressionStatement","src":"495:15:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:24"},"nodeType":"YulFunctionCall","src":"385:14:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:24"},"nodeType":"YulFunctionCall","src":"362:38:24"},"nodeType":"YulIf","src":"359:161:24"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:24","type":""}],"src":"146:380:24"},{"body":{"nodeType":"YulBlock","src":"587:65:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:24","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:24"},"nodeType":"YulFunctionCall","src":"597:14:24"},"nodeType":"YulExpressionStatement","src":"597:14:24"},{"nodeType":"YulAssignment","src":"620:26:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:24"},"nodeType":"YulFunctionCall","src":"628:18:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:24"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:24","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:24","type":""}],"src":"531:121:24"},{"body":{"nodeType":"YulBlock","src":"738:464:24","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:24","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:24","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:24","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:24","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:24"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:24"},"nodeType":"YulFunctionCall","src":"809:17:24"},"nodeType":"YulExpressionStatement","src":"809:17:24"},{"nodeType":"YulVariableDeclaration","src":"839:31:24","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:24"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:24"},"nodeType":"YulFunctionCall","src":"851:19:24"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:24","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:24"},"nodeType":"YulFunctionCall","src":"919:19:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:24"},"nodeType":"YulFunctionCall","src":"912:27:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:24"},"nodeType":"YulFunctionCall","src":"902:38:24"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:24","statements":[{"nodeType":"YulAssignment","src":"979:19:24","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:24"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:24"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:24","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:24"},"nodeType":"YulFunctionCall","src":"956:20:24"},"nodeType":"YulIf","src":"953:47:24"},{"nodeType":"YulVariableDeclaration","src":"1013:41:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:24","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:24"},"nodeType":"YulFunctionCall","src":"1040:12:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:24"},"nodeType":"YulFunctionCall","src":"1033:20:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:24"},"nodeType":"YulFunctionCall","src":"1023:31:24"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:24","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:24"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:24","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:24"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:24"},"nodeType":"YulFunctionCall","src":"1167:17:24"},"nodeType":"YulExpressionStatement","src":"1167:17:24"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:24"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:24"},"nodeType":"YulFunctionCall","src":"1112:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:24","statements":[{"nodeType":"YulAssignment","src":"1128:22:24","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:24"},"nodeType":"YulFunctionCall","src":"1137:13:24"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:24"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:24","statements":[]},"src":"1104:82:24"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:24"},"nodeType":"YulFunctionCall","src":"751:11:24"},"nodeType":"YulIf","src":"748:448:24"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:24","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:24","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:24","type":""}],"src":"657:545:24"},{"body":{"nodeType":"YulBlock","src":"1292:81:24","statements":[{"nodeType":"YulAssignment","src":"1302:65:24","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:24"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:24","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:24"},"nodeType":"YulFunctionCall","src":"1331:11:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:24"},"nodeType":"YulFunctionCall","src":"1344:6:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:24"},"nodeType":"YulFunctionCall","src":"1327:24:24"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:24"},"nodeType":"YulFunctionCall","src":"1323:29:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:24"},"nodeType":"YulFunctionCall","src":"1313:40:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:24","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:24"},"nodeType":"YulFunctionCall","src":"1355:11:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:24"},"nodeType":"YulFunctionCall","src":"1310:57:24"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:24"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:24","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:24","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:24","type":""}],"src":"1207:166:24"},{"body":{"nodeType":"YulBlock","src":"1474:1256:24","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:24"},"nodeType":"YulFunctionCall","src":"1498:10:24"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:24"},"nodeType":"YulFunctionCall","src":"1553:18:24"},"nodeType":"YulExpressionStatement","src":"1553:18:24"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:24","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:24"},"nodeType":"YulFunctionCall","src":"1535:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:24"},"nodeType":"YulFunctionCall","src":"1531:18:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:24"},"nodeType":"YulFunctionCall","src":"1520:30:24"},"nodeType":"YulIf","src":"1517:56:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:24"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:24"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:24"},"nodeType":"YulFunctionCall","src":"1658:11:24"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:24"},"nodeType":"YulFunctionCall","src":"1632:38:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:24"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:24"},"nodeType":"YulFunctionCall","src":"1582:97:24"},"nodeType":"YulExpressionStatement","src":"1582:97:24"},{"nodeType":"YulVariableDeclaration","src":"1688:18:24","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:24","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:24","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:24","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:24","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:24","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:24"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:24"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:24","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:24","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:24"},"nodeType":"YulFunctionCall","src":"1858:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:24"},"nodeType":"YulFunctionCall","src":"1846:20:24"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:24","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:24"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:24"},"nodeType":"YulFunctionCall","src":"1893:35:24"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:24","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:24"},"nodeType":"YulFunctionCall","src":"2067:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:24"},"nodeType":"YulFunctionCall","src":"2061:26:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:24"},"nodeType":"YulFunctionCall","src":"2046:42:24"},"nodeType":"YulExpressionStatement","src":"2046:42:24"},{"nodeType":"YulAssignment","src":"2105:24:24","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:24"},"nodeType":"YulFunctionCall","src":"2115:14:24"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:24"}]},{"nodeType":"YulAssignment","src":"2146:40:24","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:24"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:24"},"nodeType":"YulFunctionCall","src":"2159:27:24"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:24"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:24"},"nodeType":"YulFunctionCall","src":"1972:14:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:24","statements":[{"nodeType":"YulAssignment","src":"1989:24:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:24"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:24"},"nodeType":"YulFunctionCall","src":"1994:19:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:24","statements":[]},"src":"1964:236:24"},{"body":{"nodeType":"YulBlock","src":"2248:166:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:24","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:24"},"nodeType":"YulFunctionCall","src":"2289:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:24"},"nodeType":"YulFunctionCall","src":"2283:26:24"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:24","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:24"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:24"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:24","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:24"},"nodeType":"YulFunctionCall","src":"2368:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:24","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:24"},"nodeType":"YulFunctionCall","src":"2364:24:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:24"},"nodeType":"YulFunctionCall","src":"2390:6:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:24"},"nodeType":"YulFunctionCall","src":"2360:37:24"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:24"},"nodeType":"YulFunctionCall","src":"2356:42:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:24"},"nodeType":"YulFunctionCall","src":"2341:58:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:24"},"nodeType":"YulFunctionCall","src":"2326:74:24"},"nodeType":"YulExpressionStatement","src":"2326:74:24"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:24"},"nodeType":"YulFunctionCall","src":"2216:19:24"},"nodeType":"YulIf","src":"2213:201:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:24","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:24"},"nodeType":"YulFunctionCall","src":"2444:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:24"},"nodeType":"YulFunctionCall","src":"2440:22:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:24"},"nodeType":"YulFunctionCall","src":"2427:36:24"},"nodeType":"YulExpressionStatement","src":"2427:36:24"}]},"nodeType":"YulCase","src":"1810:663:24","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:24","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:24","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:24","statements":[{"nodeType":"YulAssignment","src":"2571:35:24","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:24"},"nodeType":"YulFunctionCall","src":"2586:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:24"},"nodeType":"YulFunctionCall","src":"2580:26:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:24"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:24"},"nodeType":"YulIf","src":"2531:89:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:24"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:24"},"nodeType":"YulFunctionCall","src":"2646:67:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:24"},"nodeType":"YulFunctionCall","src":"2633:81:24"},"nodeType":"YulExpressionStatement","src":"2633:81:24"}]},"nodeType":"YulCase","src":"2482:242:24","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:24"},"nodeType":"YulFunctionCall","src":"1787:14:24"},"nodeType":"YulSwitch","src":"1780:944:24"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:24","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:24","type":""}],"src":"1378:1352:24"},{"body":{"nodeType":"YulBlock","src":"2826:951:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2836:12:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2846:2:24","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2840:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"2893:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2902:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2905:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2895:6:24"},"nodeType":"YulFunctionCall","src":"2895:12:24"},"nodeType":"YulExpressionStatement","src":"2895:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2868:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"2877:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2864:3:24"},"nodeType":"YulFunctionCall","src":"2864:23:24"},{"name":"_1","nodeType":"YulIdentifier","src":"2889:2:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2860:3:24"},"nodeType":"YulFunctionCall","src":"2860:32:24"},"nodeType":"YulIf","src":"2857:52:24"},{"nodeType":"YulVariableDeclaration","src":"2918:30:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2938:9:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2932:5:24"},"nodeType":"YulFunctionCall","src":"2932:16:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2922:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2957:28:24","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2975:2:24","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2979:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2971:3:24"},"nodeType":"YulFunctionCall","src":"2971:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"2983:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2967:3:24"},"nodeType":"YulFunctionCall","src":"2967:18:24"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2961:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3012:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3021:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3024:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3014:6:24"},"nodeType":"YulFunctionCall","src":"3014:12:24"},"nodeType":"YulExpressionStatement","src":"3014:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3000:6:24"},{"name":"_2","nodeType":"YulIdentifier","src":"3008:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2997:2:24"},"nodeType":"YulFunctionCall","src":"2997:14:24"},"nodeType":"YulIf","src":"2994:34:24"},{"nodeType":"YulVariableDeclaration","src":"3037:32:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3051:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"3062:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3047:3:24"},"nodeType":"YulFunctionCall","src":"3047:22:24"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3041:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3117:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3126:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3129:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3119:6:24"},"nodeType":"YulFunctionCall","src":"3119:12:24"},"nodeType":"YulExpressionStatement","src":"3119:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3096:2:24"},{"kind":"number","nodeType":"YulLiteral","src":"3100:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3092:3:24"},"nodeType":"YulFunctionCall","src":"3092:13:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3107:7:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3088:3:24"},"nodeType":"YulFunctionCall","src":"3088:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3081:6:24"},"nodeType":"YulFunctionCall","src":"3081:35:24"},"nodeType":"YulIf","src":"3078:55:24"},{"nodeType":"YulVariableDeclaration","src":"3142:19:24","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3158:2:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3152:5:24"},"nodeType":"YulFunctionCall","src":"3152:9:24"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3146:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3184:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3186:16:24"},"nodeType":"YulFunctionCall","src":"3186:18:24"},"nodeType":"YulExpressionStatement","src":"3186:18:24"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"3176:2:24"},{"name":"_2","nodeType":"YulIdentifier","src":"3180:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3173:2:24"},"nodeType":"YulFunctionCall","src":"3173:10:24"},"nodeType":"YulIf","src":"3170:36:24"},{"nodeType":"YulVariableDeclaration","src":"3215:17:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3229:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3225:3:24"},"nodeType":"YulFunctionCall","src":"3225:7:24"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"3219:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3241:23:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3261:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3255:5:24"},"nodeType":"YulFunctionCall","src":"3255:9:24"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3245:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3273:71:24","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3295:6:24"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"3319:2:24"},{"kind":"number","nodeType":"YulLiteral","src":"3323:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:24"},"nodeType":"YulFunctionCall","src":"3315:13:24"},{"name":"_5","nodeType":"YulIdentifier","src":"3330:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3311:3:24"},"nodeType":"YulFunctionCall","src":"3311:22:24"},{"kind":"number","nodeType":"YulLiteral","src":"3335:2:24","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3307:3:24"},"nodeType":"YulFunctionCall","src":"3307:31:24"},{"name":"_5","nodeType":"YulIdentifier","src":"3340:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3303:3:24"},"nodeType":"YulFunctionCall","src":"3303:40:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3291:3:24"},"nodeType":"YulFunctionCall","src":"3291:53:24"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3277:10:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3403:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3405:16:24"},"nodeType":"YulFunctionCall","src":"3405:18:24"},"nodeType":"YulExpressionStatement","src":"3405:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3362:10:24"},{"name":"_2","nodeType":"YulIdentifier","src":"3374:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3359:2:24"},"nodeType":"YulFunctionCall","src":"3359:18:24"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3382:10:24"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3394:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3379:2:24"},"nodeType":"YulFunctionCall","src":"3379:22:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3356:2:24"},"nodeType":"YulFunctionCall","src":"3356:46:24"},"nodeType":"YulIf","src":"3353:72:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3441:2:24","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3445:10:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3434:6:24"},"nodeType":"YulFunctionCall","src":"3434:22:24"},"nodeType":"YulExpressionStatement","src":"3434:22:24"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3472:6:24"},{"name":"_4","nodeType":"YulIdentifier","src":"3480:2:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3465:6:24"},"nodeType":"YulFunctionCall","src":"3465:18:24"},"nodeType":"YulExpressionStatement","src":"3465:18:24"},{"body":{"nodeType":"YulBlock","src":"3529:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3538:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3541:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3531:6:24"},"nodeType":"YulFunctionCall","src":"3531:12:24"},"nodeType":"YulExpressionStatement","src":"3531:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3506:2:24"},{"name":"_4","nodeType":"YulIdentifier","src":"3510:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3502:3:24"},"nodeType":"YulFunctionCall","src":"3502:11:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3515:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:24"},"nodeType":"YulFunctionCall","src":"3498:20:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3495:2:24"},"nodeType":"YulFunctionCall","src":"3495:33:24"},"nodeType":"YulIf","src":"3492:53:24"},{"nodeType":"YulVariableDeclaration","src":"3554:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"3563:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3558:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3619:83:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3648:6:24"},{"name":"i","nodeType":"YulIdentifier","src":"3656:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3644:3:24"},"nodeType":"YulFunctionCall","src":"3644:14:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3660:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:24"},"nodeType":"YulFunctionCall","src":"3640:23:24"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3679:2:24"},{"name":"i","nodeType":"YulIdentifier","src":"3683:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3675:3:24"},"nodeType":"YulFunctionCall","src":"3675:10:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3687:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3671:3:24"},"nodeType":"YulFunctionCall","src":"3671:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3665:5:24"},"nodeType":"YulFunctionCall","src":"3665:26:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3633:6:24"},"nodeType":"YulFunctionCall","src":"3633:59:24"},"nodeType":"YulExpressionStatement","src":"3633:59:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3584:1:24"},{"name":"_4","nodeType":"YulIdentifier","src":"3587:2:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3581:2:24"},"nodeType":"YulFunctionCall","src":"3581:9:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3591:19:24","statements":[{"nodeType":"YulAssignment","src":"3593:15:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3602:1:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3605:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3598:3:24"},"nodeType":"YulFunctionCall","src":"3598:10:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3593:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"3577:3:24","statements":[]},"src":"3573:129:24"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3726:6:24"},{"name":"_4","nodeType":"YulIdentifier","src":"3734:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3722:3:24"},"nodeType":"YulFunctionCall","src":"3722:15:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3739:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3718:3:24"},"nodeType":"YulFunctionCall","src":"3718:24:24"},{"kind":"number","nodeType":"YulLiteral","src":"3744:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3711:6:24"},"nodeType":"YulFunctionCall","src":"3711:35:24"},"nodeType":"YulExpressionStatement","src":"3711:35:24"},{"nodeType":"YulAssignment","src":"3755:16:24","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3765:6:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3755:6:24"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2792:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2803:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2815:6:24","type":""}],"src":"2735:1042:24"},{"body":{"nodeType":"YulBlock","src":"3883:102:24","statements":[{"nodeType":"YulAssignment","src":"3893:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3905:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3916:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3901:3:24"},"nodeType":"YulFunctionCall","src":"3901:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3893:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3935:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3950:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3966:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3971:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3962:3:24"},"nodeType":"YulFunctionCall","src":"3962:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"3975:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3958:3:24"},"nodeType":"YulFunctionCall","src":"3958:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3946:3:24"},"nodeType":"YulFunctionCall","src":"3946:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3928:6:24"},"nodeType":"YulFunctionCall","src":"3928:51:24"},"nodeType":"YulExpressionStatement","src":"3928:51:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3863:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3874:4:24","type":""}],"src":"3782:203:24"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040526011608090815270556e636861696e6564205469636b65747360781b60a05260089062000032908262000205565b506040805180820190915260048152630aa9c86960e31b60208201526009906200005d908262000205565b503480156200006b57600080fd5b50604051620051a5380380620051a58339810160408190526200008e91620002d1565b6040805160208101909152600081523390620000aa81620000fc565b506001600160a01b038116620000da57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000e5816200010e565b50600a620000f4828262000205565b5050620003a6565b60026200010a828262000205565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018b57607f821691505b602082108103620001ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020057600081815260208120601f850160051c81016020861015620001db5750805b601f850160051c820191505b81811015620001fc57828155600101620001e7565b5050505b505050565b81516001600160401b0381111562000221576200022162000160565b620002398162000232845462000176565b84620001b2565b602080601f831160018114620002715760008415620002585750858301515b600019600386901b1c1916600185901b178555620001fc565b600085815260208120601f198616915b82811015620002a25788860151825594840194600190910190840162000281565b5085821015620002c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808385031215620002e557600080fd5b82516001600160401b0380821115620002fd57600080fd5b818501915085601f8301126200031257600080fd5b81518181111562000327576200032762000160565b604051601f8201601f19908116603f0116810190838211818310171562000352576200035262000160565b8160405282815288868487010111156200036b57600080fd5b600093505b828410156200038f578484018601518185018701529285019262000370565b600086848301015280965050505050505092915050565b614def80620003b66000396000f3fe608060405234801561001057600080fd5b50600436106102525760003560e01c8063715018a611610146578063bc2336e2116100c3578063e985e9c511610087578063e985e9c51461063e578063edb2b21414610651578063f242432a14610664578063f2fde38b14610677578063f5298aca1461068a578063fe6ad9d51461069d57600080fd5b8063bc2336e21461058d578063bd85b039146105b0578063c33c66fa146105d0578063e1313346146105f2578063e41394931461062b57600080fd5b806395d89b411161010a57806395d89b411461051e578063a22cb46514610526578063a8cb2f3714610539578063aa7c4df514610567578063b4611fa81461057a57600080fd5b8063715018a6146104b257806373f20eb6146104ba57806385af5762146104cd5780638920dd14146104e05780638da5cb5b1461050357600080fd5b80632a55205a116101d45780634e1273f4116101985780634e1273f41461040f5780634f558e791461042f57806355f804b3146104515780635bcd5dfb146104645780636b20c4541461049f57600080fd5b80632a55205a146103825780632eb2c2d6146103b457806334bcadb6146103c9578063417ac869146103e957806347fb430f146103fc57600080fd5b8063103f770f1161021b578063103f770f146102f0578063166cc9441461031857806318160ddd146103385780632432ada514610340578063268bad9b1461036057600080fd5b8062fdd58e1461025757806301ffc9a71461027d57806306fdde03146102a05780630b791430146102b55780630e89341c146102dd575b600080fd5b61026a610265366004613d6e565b6106bd565b6040519081526020015b60405180910390f35b61029061028b366004613dae565b6106e5565b6040519015158152602001610274565b6102a86106f0565b6040516102749190613e1b565b6102c86102c3366004613e2e565b61077e565b60405161027499989796959493929190613e47565b6102a86102eb366004613e2e565b6108f6565b6103036102fe366004613f77565b610b5b565b60408051928352602083019190915201610274565b61026a610326366004613e2e565b600f6020526000908152604090205481565b60055461026a565b61026a61034e366004613e2e565b60136020526000908152604090205481565b61037361036e366004613fcd565b610c67565b60405161027493929190613fef565b610395610390366004613fcd565b610ec5565b604080516001600160a01b039093168352602083019190915201610274565b6103c76103c23660046140c0565b610f4a565b005b61026a6103d7366004613e2e565b60126020526000908152604090205481565b6103c76103f7366004614180565b610fb1565b61026a61040a3660046141bc565b6110d9565b61042261041d3660046142c8565b61176a565b6040516102749190614366565b61029061043d366004613e2e565b600090815260046020526040902054151590565b6103c761045f366004614379565b61183e565b6104926104723660046143b5565b600d60209081526000928352604080842090915290825290205460ff1681565b60405161027491906143f7565b6103c76104ad366004614411565b611856565b6103c76118ba565b6103c76104c836600461447a565b6118ce565b6103c76104db3660046144d8565b611a1e565b6104f36104ee366004613fcd565b611da7565b6040516102749493929190614597565b6003546040516001600160a01b039091168152602001610274565b6102a8611e67565b6103c76105343660046145da565b611e74565b6102906105473660046143b5565b600c60209081526000928352604080842090915290825290205460ff1681565b610290610575366004614604565b611e7f565b6103c761058836600461463d565b6121f8565b6105a061059b366004613fcd565b612376565b6040516102749493929190614679565b61026a6105be366004613e2e565b60009081526004602052604090205490565b6105e36105de366004613f77565b612544565b604051610274939291906146c6565b6104926106003660046143b5565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6103c76106393660046146eb565b612614565b61029061064c36600461471e565b612897565b6103c761065f3660046147c7565b6128c5565b6103c7610672366004614884565b612a49565b6103c76106853660046148e8565b612d5a565b6103c7610698366004614903565b612d98565b6106b06106ab366004613fcd565b612dce565b604051610274919061498b565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006106df82613104565b600880546106fd90614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461072990614a11565b80156107765780601f1061074b57610100808354040283529160200191610776565b820191906000526020600020905b81548152906001019060200180831161075957829003601f168201915b505050505081565b600b602052600090815260409020805460018201546002830154600384015460048501805494959394929360ff8084169461010090940416929091906107c390614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef90614a11565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b50505050509080600501805461085190614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461087d90614a11565b80156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b505050600690930154919250506001600160601b038116906001600160a01b03600160601b9091041689565b60606000610907620f424084614a61565b6000818152600b602052604090205490915061093e5760405162461bcd60e51b815260040161093590614a83565b60405180910390fd5b6000818152600b6020908152604080832081516101208101835281548152600182015493810193909352600281015491830191909152600381015460ff80821615156060850152610100909104161515608083015260048101805460a0840191906109a890614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546109d490614a11565b8015610a215780601f106109f657610100808354040283529160200191610a21565b820191906000526020600020905b815481529060010190602001808311610a0457829003601f168201915b50505050508152602001600582018054610a3a90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6690614a11565b8015610ab35780601f10610a8857610100808354040283529160200191610ab3565b820191906000526020600020905b815481529060010190602001808311610a9657829003601f168201915b5050509183525050600691909101546001600160601b0381166020830152600160601b90046001600160a01b031660409091015260c08101515190915015801590610b015750806040015142115b15610b115760c001519392505050565b60a08101515115610b275760a001519392505050565b600a610b3285613129565b604051602001610b43929190614ab1565b60405160208183030381529060405292505050919050565b60008381526011602090815260408083206001600160a01b0386168452909152808220905182918291610b8f908690614b38565b9081526020016040518091039020604051806060016040529081600082018054610bb890614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610be490614a11565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b50505050508152602001600182015481526020016002820154815250509050806020015181604001519250925050935093915050565b60608060606000601060008781526020019081526020016000206000868152602001908152602001600020604051806080016040529081600082018054610cad90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd990614a11565b8015610d265780601f10610cfb57610100808354040283529160200191610d26565b820191906000526020600020905b815481529060010190602001808311610d0957829003601f168201915b50505050508152602001600182018054610d3f90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6b90614a11565b8015610db85780601f10610d8d57610100808354040283529160200191610db8565b820191906000526020600020905b815481529060010190602001808311610d9b57829003601f168201915b50505050508152602001600282018054610dd190614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfd90614a11565b8015610e4a5780601f10610e1f57610100808354040283529160200191610e4a565b820191906000526020600020905b815481529060010190602001808311610e2d57829003601f168201915b50505091835250506003919091015460ff1615156020909101526060810151909150610eab5760405162461bcd60e51b815260206004820152601060248201526f139bc81cd9585d08185cdcda59db995960821b6044820152606401610935565b805160208201516040909201519097919650945092505050565b600082815260076020526040812080548291906001600160a01b03811690600160a01b90046001600160601b031681610f195750506006546001600160a01b03811690600160a01b90046001600160601b03165b6000612710610f316001600160601b03841689614b54565b610f3b9190614a61565b92989297509195505050505050565b336001600160a01b0386168114801590610f6b5750610f698682612897565b155b15610f9c5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610935565b610fa986868686866131bb565b505050505050565b610fb961321b565b6000838152600b6020526040902054610fe45760405162461bcd60e51b815260040161093590614a83565b612710816001600160601b0316111561103f5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c74792063616e6e6f742065786365656420313030250000000000006044820152606401610935565b6000838152600b602052604090206001600160601b0382166001600160a01b038416600160601b026bffffffffffffffffffffffff191617600690910155611088838383613248565b604080516001600160a01b03841681526001600160601b038316602082015284917fbefc93e7daa33253e132c907f20544f15e5e331b7f4e917cabee1d6097a1f1f8910160405180910390a2505050565b60006110e361321b565b6000878152600b6020526040902060030154610100900460ff1661113f5760405162461bcd60e51b81526020600482015260136024820152724576656e74206973206e6f742061637469766560681b6044820152606401610935565b6000878152600f6020526040902054861061118b5760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103a34b2b960a11b6044820152606401610935565b6001600160a01b0385166111e15760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606401610935565b6000878152600e60209081526040808320898452909152808220815160c081019092528054829060ff16600481111561121c5761121c6143e1565b600481111561122d5761122d6143e1565b815260200160018201805461124190614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461126d90614a11565b80156112ba5780601f1061128f576101008083540402835291602001916112ba565b820191906000526020600020905b81548152906001019060200180831161129d57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113a857838290600052602060002001805461131b90614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461134790614a11565b80156113945780601f1061136957610100808354040283529160200191611394565b820191906000526020600020905b81548152906001019060200180831161137757829003601f168201915b5050505050815260200190600101906112fc565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156114815783829060005260206000200180546113f490614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461142090614a11565b801561146d5780601f106114425761010080835404028352916020019161146d565b820191906000526020600020905b81548152906001019060200180831161145057829003601f168201915b5050505050815260200190600101906113d5565b50505091525050600089815260136020526040812054919250906114a88a620f4240614b54565b6114b29190614b6b565b60008a81526013602052604081208054929350906114cf83614b7e565b90915550506000898152600b60209081526040808320546004909252909120541061152d5760405162461bcd60e51b815260206004820152600e60248201526d115d995b9d081cdbdb19081bdd5d60921b6044820152606401610935565b611549878260016040518060200160405280600081525061330a565b60008181526012602090815260408083208b90558b8352600d82528083206001600160a01b038b1684529091529020805460ff19169055855115611654576040805160808101825287815260208082018890528183018790526001606083015260008c81526010825283812085825290915291909120815181906115cd9082614bdd565b50602082015160018201906115e29082614bdd565b50604082015160028201906115f79082614bdd565b50606091909101516003909101805460ff191691151591909117905560405181908a907f88257bb4915cfaf23ff1f49a4d5278601267800249071a71f74369a6f35b72b49061164b908a908a908a90613fef565b60405180910390a35b60005b8260a00151518110156117185760008360a00151828151811061167c5761167c614c9c565b6020908102919091018101516040805160608101825282815260018185015260008183018190528f8152601185528281206001600160a01b038f168252909452928190209051919350906116d1908490614b38565b908152604051908190036020019020815181906116ee9082614bdd565b5060208201516001820155604090910151600290910155508061171081614b7e565b915050611657565b50866001600160a01b0316818a7f4fe0f5bb11eb6ab81c428fb83261719e5b22f84b3e1942cd491c3777504bb8518b60405161175691815260200190565b60405180910390a498975050505050505050565b6060815183511461179b5781518351604051635b05999160e01b815260048101929092526024820152604401610935565b600083516001600160401b038111156117b6576117b6613ec2565b6040519080825280602002602001820160405280156117df578160200160208202803683370190505b50905060005b845181101561183657602080820286010151611809906020808402870101516106bd565b82828151811061181b5761181b614c9c565b602090810291909101015261182f81614b7e565b90506117e5565b509392505050565b61184661321b565b600a6118528282614bdd565b5050565b6001600160a01b038316331480159061187657506118748333612897565b155b156118aa57335b60405163711bec9160e11b81526001600160a01b0391821660048201529084166024820152604401610935565b6118b5838383613367565b505050565b6118c261321b565b6118cc60006133ad565b565b6118d661321b565b60008481526011602090815260408083206001600160a01b03871684529091528082209051611906908590614b38565b90815260200160405180910390209050600081600101541161195f5760405162461bcd60e51b81526020600482015260126024820152715065726b206e6f7420617661696c61626c6560701b6044820152606401610935565b80600101548282600201546119749190614b6b565b11156119b85760405162461bcd60e51b815260206004820152601360248201527214195c9ac81b1a5b5a5d08195e18d959591959606a1b6044820152606401610935565b818160020160008282546119cc9190614b6b565b92505081905550836001600160a01b0316857f4e3e5d9908b5bd9975f87efcebca93c1b24a2b205aa71fc34300ab7bf7e16b908585604051611a0f929190614cb2565b60405180910390a35050505050565b611a2661321b565b6000888152600b602052604090205415611a795760405162461bcd60e51b81526020600482015260146024820152734576656e7420616c72656164792065786973747360601b6044820152606401610935565b60008711611ad35760405162461bcd60e51b815260206004820152602160248201527f4d617820737570706c79206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610935565b428611611b225760405162461bcd60e51b815260206004820152601b60248201527f4576656e74206d75737420626520696e207468652066757475726500000000006044820152606401610935565b858511611b715760405162461bcd60e51b815260206004820152601d60248201527f4576656e7420656e64206d7573742062652061667465722073746172740000006044820152606401610935565b612710816001600160601b03161115611bcc5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c74792063616e6e6f742065786365656420313030250000000000006044820152606401610935565b604051806101200160405280888152602001878152602001868152602001600015158152602001600115158152602001858152602001848152602001826001600160601b03168152602001836001600160a01b0316815250600b60008a815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a0820151816004019081611caa9190614bdd565b5060c08201516005820190611cbf9082614bdd565b5060e0820151610100909201516001600160a01b0316600160601b026001600160601b0392831617600690910155811615801590611d0557506001600160a01b03821615155b15611d6257611d15888383613248565b604080516001600160a01b03841681526001600160601b038316602082015289917fbefc93e7daa33253e132c907f20544f15e5e331b7f4e917cabee1d6097a1f1f8910160405180910390a25b604080518881526020810188905289917f06168e40fac2576e22d73ab2e9efa79b4e7530dd3dd411ab7d8862d04be798a2910160405180910390a25050505050505050565b600e6020908152600092835260408084209091529082529020805460018201805460ff9092169291611dd890614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0490614a11565b8015611e515780601f10611e2657610100808354040283529160200191611e51565b820191906000526020600020905b815481529060010190602001808311611e3457829003601f168201915b5050505050908060020154908060030154905084565b600980546106fd90614a11565b6118523383836133ff565b600082815260046020526040812054611ed15760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610935565b600083815260126020908152604080832054878452600e8352818420818552909252808320815160c081019092528054929392829060ff166004811115611f1a57611f1a6143e1565b6004811115611f2b57611f2b6143e1565b8152602001600182018054611f3f90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054611f6b90614a11565b8015611fb85780601f10611f8d57610100808354040283529160200191611fb8565b820191906000526020600020905b815481529060010190602001808311611f9b57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156120a657838290600052602060002001805461201990614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461204590614a11565b80156120925780601f1061206757610100808354040283529160200191612092565b820191906000526020600020905b81548152906001019060200180831161207557829003601f168201915b505050505081526020019060010190611ffa565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561217f5783829060005260206000200180546120f290614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461211e90614a11565b801561216b5780601f106121405761010080835404028352916020019161216b565b820191906000526020600020905b81548152906001019060200180831161214e57829003601f168201915b5050505050815260200190600101906120d3565b5050505081525050905060005b8160800151518110156121e9578480519060200120826080015182815181106121b7576121b7614c9c565b602002602001015180519060200120036121d757600193505050506121f1565b806121e181614b7e565b91505061218c565b506000925050505b9392505050565b61220061321b565b6000828152600b602052604090206002015442116122525760405162461bcd60e51b815260206004820152600f60248201526e115d995b9d081b9bdd08195b991959608a1b6044820152606401610935565b60005b81518110156118b5576000838152600d6020526040812083516001929085908590811061228457612284614c9c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1660028111156122bc576122bc6143e1565b03612364576000838152600d602052604081208351600292908590859081106122e7576122e7614c9c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19166001836002811115612324576123246143e1565b021790555082837ff4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d600260405161235b91906143f7565b60405180910390a35b8061236e81614b7e565b915050612255565b601060209081526000928352604080842090915290825290208054819061239c90614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546123c890614a11565b80156124155780601f106123ea57610100808354040283529160200191612415565b820191906000526020600020905b8154815290600101906020018083116123f857829003601f168201915b50505050509080600101805461242a90614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461245690614a11565b80156124a35780601f10612478576101008083540402835291602001916124a3565b820191906000526020600020905b81548152906001019060200180831161248657829003601f168201915b5050505050908060020180546124b890614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546124e490614a11565b80156125315780601f1061250657610100808354040283529160200191612531565b820191906000526020600020905b81548152906001019060200180831161251457829003601f168201915b5050506003909301549192505060ff1684565b601160209081526000938452604080852082529284529190922082518084018301805192815290830193909201929092209190528054819061258590614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546125b190614a11565b80156125fe5780601f106125d3576101008083540402835291602001916125fe565b820191906000526020600020905b8154815290600101906020018083116125e157829003601f168201915b5050505050908060010154908060020154905083565b61261c61321b565b600061262883856106bd565b116126675760405162461bcd60e51b815260206004820152600f60248201526e139bc81d1a58dad95d081bdddb9959608a1b6044820152606401610935565b6000838152600c602090815260408083206001600160a01b038616845290915290205460ff16156126d05760405162461bcd60e51b8152602060048201526013602482015272151a58dad95d08185b1c9958591e481d5cd959606a1b6044820152606401610935565b6000838152600d602090815260408083206001600160a01b038616845290915281205460ff166002811115612707576127076143e1565b146127485760405162461bcd60e51b81526020600482015260116024820152705469636b6574206e6f742061637469766560781b6044820152606401610935565b6000838152600c602090815260408083206001600160a01b03861684529091529020805460ff1916600117905580156127ee576000838152600d602090815260408083206001600160a01b0386168452909152902080546002919060ff1916600183021790555082837ff4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d60026040516127e191906143f7565b60405180910390a361285c565b6000838152600d602090815260408083206001600160a01b0386168452909152902080546001919060ff19168280021790555082837ff4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d600160405161285391906143f7565b60405180910390a35b6040516001600160a01b0383169084907f07c2221c844690cb15e32907258d38446cd4a17bc9b84e2069cd955615d547fd90600090a3505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6128cd61321b565b6000878152600b60205260409020546128f85760405162461bcd60e51b815260040161093590614a83565b6000878152600f60205260409081902054815160c081019092529080876004811115612926576129266143e1565b815260208082018a90526040808301899052606083018890526080830187905260a090920185905260008b8152600e82528281208582529091522081518154829060ff1916600183600481111561297f5761297f6143e1565b0217905550602082015160018201906129989082614bdd565b506040820151600282015560608201516003820155608082015180516129c8916004840191602090910190613c95565b5060a082015180516129e4916005840191602090910190613c95565b5050506000888152600f60205260408120805491612a0183614b7e565b919050555080887f73f2c5150dd3bafcdfcfd66cdd6938bc381635e48cebe16c6d424dfcf68fe85489604051612a379190613e1b565b60405180910390a35050505050505050565b6001600160a01b0385161580612a6657506001600160a01b038416155b80612a7e57506003546001600160a01b038681169116145b15612a9557612a908585858585613495565b612d53565b6000612aa4620f424085614a61565b6000818152600b6020908152604080832081516101208101835281548152600182015493810193909352600281015491830191909152600381015460ff80821615156060850152610100909104161515608083015260048101805494955092939192909160a084019190612b1790614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612b4390614a11565b8015612b905780601f10612b6557610100808354040283529160200191612b90565b820191906000526020600020905b815481529060010190602001808311612b7357829003601f168201915b50505050508152602001600582018054612ba990614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612bd590614a11565b8015612c225780601f10612bf757610100808354040283529160200191612c22565b820191906000526020600020905b815481529060010190602001808311612c0557829003601f168201915b5050509183525050600691909101546001600160601b038116602080840191909152600160601b9091046001600160a01b0316604090920191909152810151909150421080612c745750806040015142115b612ccc5760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f74207472616e73666572207469636b65747320647572696e6720656044820152631d995b9d60e21b6064820152608401610935565b806060015180612ce0575080604001514210155b612d435760405162461bcd60e51b815260206004820152602e60248201527f5469636b65747320617265206e6f6e2d7472616e7366657261626c652062656660448201526d6f7265206576656e7420656e647360901b6064820152608401610935565b612d508787878787613495565b50505b5050505050565b612d6261321b565b6001600160a01b038116612d8c57604051631e4fbdf760e01b815260006004820152602401610935565b612d95816133ad565b50565b6001600160a01b0383163314801590612db85750612db68333612897565b155b15612dc3573361187d565b6118b58383836134f4565b612e086040805160c08101909152806000815260200160608152602001600081526020016000815260200160608152602001606081525090565b6000838152600f60205260409020548210612e545760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103a34b2b960a11b6044820152606401610935565b6000838152600e6020908152604080832085845290915290819020815160c081019092528054829060ff166004811115612e9057612e906143e1565b6004811115612ea157612ea16143e1565b8152602001600182018054612eb590614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612ee190614a11565b8015612f2e5780601f10612f0357610100808354040283529160200191612f2e565b820191906000526020600020905b815481529060010190602001808311612f1157829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561301c578382906000526020600020018054612f8f90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612fbb90614a11565b80156130085780601f10612fdd57610100808354040283529160200191613008565b820191906000526020600020905b815481529060010190602001808311612feb57829003601f168201915b505050505081526020019060010190612f70565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156130f557838290600052602060002001805461306890614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461309490614a11565b80156130e15780601f106130b6576101008083540402835291602001916130e1565b820191906000526020600020905b8154815290600101906020018083116130c457829003601f168201915b505050505081526020019060010190613049565b50505091525090949350505050565b60006001600160e01b0319821663152a902d60e11b14806106df57506106df8261355c565b60606000613136836135ac565b60010190506000816001600160401b0381111561315557613155613ec2565b6040519080825280601f01601f19166020018201604052801561317f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461318957509392505050565b6001600160a01b0384166131e557604051632bfa23e760e11b815260006004820152602401610935565b6001600160a01b03851661320e57604051626a0d4560e21b815260006004820152602401610935565b612d538585858585613684565b6003546001600160a01b031633146118cc5760405163118cdaa760e01b8152336004820152602401610935565b6127106001600160601b03821681101561328e5760405163dfd1fc1b60e01b8152600481018590526001600160601b038316602482015260448101829052606401610935565b6001600160a01b0383166132bf57604051634b4f842960e11b81526004810185905260006024820152604401610935565b506040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600790529190942093519051909116600160a01b029116179055565b6001600160a01b03841661333457604051632bfa23e760e11b815260006004820152602401610935565b60408051600180825260208201869052818301908152606082018590526080820190925290610fa9600087848487613684565b6001600160a01b03831661339057604051626a0d4560e21b815260006004820152602401610935565b6118b5836000848460405180602001604052806000815250613684565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166134285760405162ced3e160e81b815260006004820152602401610935565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b336001600160a01b03861681148015906134b657506134b48682612897565b155b156134e75760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610935565b610fa986868686866136d7565b6001600160a01b03831661351d57604051626a0d4560e21b815260006004820152602401610935565b604080516001808252602082018590528183019081526060820184905260a08201909252600060808201818152919291612d5391879185908590613684565b60006001600160e01b03198216636cdb3d1360e11b148061358d57506001600160e01b031982166303a24d0760e21b145b806106df57506301ffc9a760e01b6001600160e01b03198316146106df565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106135eb5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310613617576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061363557662386f26fc10000830492506010015b6305f5e100831061364d576305f5e100830492506008015b612710831061366157612710830492506004015b60648310613673576064830492506002015b600a83106106df5760010192915050565b6136908585858561375c565b6001600160a01b03841615612d5357825133906001036136c957602084810151908401516136c283898985858961376e565b5050610fa9565b610fa9818787878787613892565b6001600160a01b03841661370157604051632bfa23e760e11b815260006004820152602401610935565b6001600160a01b03851661372a57604051626a0d4560e21b815260006004820152602401610935565b60408051600180825260208201869052818301908152606082018590526080820190925290612d508787848487613684565b6137688484848461397b565b50505050565b6001600160a01b0384163b15610fa95760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906137b29089908990889088908890600401614cd4565b6020604051808303816000875af19250505080156137ed575060408051601f3d908101601f191682019092526137ea91810190614d19565b60015b613856573d80801561381b576040519150601f19603f3d011682016040523d82523d6000602084013e613820565b606091505b50805160000361384e57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610935565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14612d5057604051632bfa23e760e11b81526001600160a01b0386166004820152602401610935565b6001600160a01b0384163b15610fa95760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906138d69089908990889088908890600401614d36565b6020604051808303816000875af1925050508015613911575060408051601f3d908101601f1916820190925261390e91810190614d19565b60015b61393f573d80801561381b576040519150601f19603f3d011682016040523d82523d6000602084013e613820565b6001600160e01b0319811663bc197c8160e01b14612d5057604051632bfa23e760e11b81526001600160a01b0386166004820152602401610935565b61398784848484613a78565b6001600160a01b038416613a10576000805b83518110156139f657602081810284810182015190860182015160009081526004909252604082208054919283926139d2908490614b6b565b909155506139e290508184614b6b565b925050806139ef90614b7e565b9050613999565b508060056000828254613a099190614b6b565b9091555050505b6001600160a01b038316613768576000805b8351811015613a67576020818102848101820151908601820151600090815260049092526040909120805482900390559190910190613a6081614b7e565b9050613a22565b506005805491909103905550505050565b8051825114613aa75781518151604051635b05999160e01b815260048101929092526024820152604401610935565b3360005b8351811015613bb6576020818102858101820151908501909101516001600160a01b03881615613b5e576000828152602081815260408083206001600160a01b038c16845290915290205481811015613b37576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610935565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615613ba3576000828152602081815260408083206001600160a01b038b16845290915281208054839290613b9d908490614b6b565b90915550505b505080613baf90614b7e565b9050613aab565b508251600103613c375760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051613c28929190918252602082015260400190565b60405180910390a45050612d53565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051613c86929190614d94565b60405180910390a45050505050565b828054828255906000526020600020908101928215613cdb579160200282015b82811115613cdb5782518290613ccb9082614bdd565b5091602001919060010190613cb5565b50613ce7929150613ceb565b5090565b80821115613ce7576000613cff8282613d08565b50600101613ceb565b508054613d1490614a11565b6000825580601f10613d24575050565b601f016020900490600052602060002090810190612d9591905b80821115613ce75760008155600101613d3e565b80356001600160a01b0381168114613d6957600080fd5b919050565b60008060408385031215613d8157600080fd5b613d8a83613d52565b946020939093013593505050565b6001600160e01b031981168114612d9557600080fd5b600060208284031215613dc057600080fd5b81356121f181613d98565b60005b83811015613de6578181015183820152602001613dce565b50506000910152565b60008151808452613e07816020860160208601613dcb565b601f01601f19169290920160200192915050565b6020815260006121f16020830184613def565b600060208284031215613e4057600080fd5b5035919050565b60006101208b83528a6020840152896040840152881515606084015287151560808401528060a0840152613e7d81840188613def565b905082810360c0840152613e918187613def565b6001600160601b039590951660e084015250506001600160a01b039190911661010090910152979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613f0057613f00613ec2565b604052919050565b600082601f830112613f1957600080fd5b81356001600160401b03811115613f3257613f32613ec2565b613f45601f8201601f1916602001613ed8565b818152846020838601011115613f5a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613f8c57600080fd5b83359250613f9c60208501613d52565b915060408401356001600160401b03811115613fb757600080fd5b613fc386828701613f08565b9150509250925092565b60008060408385031215613fe057600080fd5b50508035926020909101359150565b6060815260006140026060830186613def565b82810360208401526140148186613def565b905082810360408401526140288185613def565b9695505050505050565b60006001600160401b0382111561404b5761404b613ec2565b5060051b60200190565b600082601f83011261406657600080fd5b8135602061407b61407683614032565b613ed8565b82815260059290921b8401810191818101908684111561409a57600080fd5b8286015b848110156140b5578035835291830191830161409e565b509695505050505050565b600080600080600060a086880312156140d857600080fd5b6140e186613d52565b94506140ef60208701613d52565b935060408601356001600160401b038082111561410b57600080fd5b61411789838a01614055565b9450606088013591508082111561412d57600080fd5b61413989838a01614055565b9350608088013591508082111561414f57600080fd5b5061415c88828901613f08565b9150509295509295909350565b80356001600160601b0381168114613d6957600080fd5b60008060006060848603121561419557600080fd5b833592506141a560208501613d52565b91506141b360408501614169565b90509250925092565b60008060008060008060c087890312156141d557600080fd5b86359550602087013594506141ec60408801613d52565b935060608701356001600160401b038082111561420857600080fd5b6142148a838b01613f08565b9450608089013591508082111561422a57600080fd5b6142368a838b01613f08565b935060a089013591508082111561424c57600080fd5b5061425989828a01613f08565b9150509295509295509295565b600082601f83011261427757600080fd5b8135602061428761407683614032565b82815260059290921b840181019181810190868411156142a657600080fd5b8286015b848110156140b5576142bb81613d52565b83529183019183016142aa565b600080604083850312156142db57600080fd5b82356001600160401b03808211156142f257600080fd5b6142fe86838701614266565b9350602085013591508082111561431457600080fd5b5061432185828601614055565b9150509250929050565b600081518084526020808501945080840160005b8381101561435b5781518752958201959082019060010161433f565b509495945050505050565b6020815260006121f1602083018461432b565b60006020828403121561438b57600080fd5b81356001600160401b038111156143a157600080fd5b6143ad84828501613f08565b949350505050565b600080604083850312156143c857600080fd5b823591506143d860208401613d52565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061440b5761440b6143e1565b91905290565b60008060006060848603121561442657600080fd5b61442f84613d52565b925060208401356001600160401b038082111561444b57600080fd5b61445787838801614055565b9350604086013591508082111561446d57600080fd5b50613fc386828701614055565b6000806000806080858703121561449057600080fd5b843593506144a060208601613d52565b925060408501356001600160401b038111156144bb57600080fd5b6144c787828801613f08565b949793965093946060013593505050565b600080600080600080600080610100898b0312156144f557600080fd5b8835975060208901359650604089013595506060890135945060808901356001600160401b038082111561452857600080fd5b6145348c838d01613f08565b955060a08b013591508082111561454a57600080fd5b506145578b828c01613f08565b93505061456660c08a01613d52565b915061457460e08a01614169565b90509295985092959890939650565b60058110614593576145936143e1565b9052565b6145a18186614583565b6080602082015260006145b76080830186613def565b6040830194909452506060015292915050565b80358015158114613d6957600080fd5b600080604083850312156145ed57600080fd5b6145f683613d52565b91506143d8602084016145ca565b60008060006060848603121561461957600080fd5b833592506020840135915060408401356001600160401b03811115613fb757600080fd5b6000806040838503121561465057600080fd5b8235915060208301356001600160401b0381111561466d57600080fd5b61432185828601614266565b60808152600061468c6080830187613def565b828103602084015261469e8187613def565b905082810360408401526146b28186613def565b915050821515606083015295945050505050565b6060815260006146d96060830186613def565b60208301949094525060400152919050565b60008060006060848603121561470057600080fd5b8335925061471060208501613d52565b91506141b3604085016145ca565b6000806040838503121561473157600080fd5b61473a83613d52565b91506143d860208401613d52565b600082601f83011261475957600080fd5b8135602061476961407683614032565b82815260059290921b8401810191818101908684111561478857600080fd5b8286015b848110156140b55780356001600160401b038111156147ab5760008081fd5b6147b98986838b0101613f08565b84525091830191830161478c565b600080600080600080600060e0888a0312156147e257600080fd5b8735965060208801356001600160401b038082111561480057600080fd5b61480c8b838c01613f08565b975060408a013591506005821061482257600080fd5b909550606089013594506080890135935060a0890135908082111561484657600080fd5b6148528b838c01614748565b935060c08a013591508082111561486857600080fd5b506148758a828b01614748565b91505092959891949750929550565b600080600080600060a0868803121561489c57600080fd5b6148a586613d52565b94506148b360208701613d52565b9350604086013592506060860135915060808601356001600160401b038111156148dc57600080fd5b61415c88828901613f08565b6000602082840312156148fa57600080fd5b6121f182613d52565b60008060006060848603121561491857600080fd5b61492184613d52565b95602085013595506040909401359392505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561497e57828403895261496c848351613def565b98850198935090840190600101614954565b5091979650505050505050565b6020815261499d602082018351614583565b6000602083015160c060408401526149b860e0840182613def565b905060408401516060840152606084015160808401526080840151601f19808584030160a08601526149ea8383614936565b925060a08601519150808584030160c086015250614a088282614936565b95945050505050565b600181811c90821680614a2557607f821691505b602082108103614a4557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082614a7e57634e487b7160e01b600052601260045260246000fd5b500490565b602080825260149082015273115d995b9d08191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b6000808454614abf81614a11565b60018281168015614ad75760018114614aec57614b1b565b60ff1984168752821515830287019450614b1b565b8860005260208060002060005b85811015614b125781548a820152908401908201614af9565b50505082870194505b505050508351614b2f818360208801613dcb565b01949350505050565b60008251614b4a818460208701613dcb565b9190910192915050565b80820281158282048414176106df576106df614a4b565b808201808211156106df576106df614a4b565b600060018201614b9057614b90614a4b565b5060010190565b601f8211156118b557600081815260208120601f850160051c81016020861015614bbe5750805b601f850160051c820191505b81811015610fa957828155600101614bca565b81516001600160401b03811115614bf657614bf6613ec2565b614c0a81614c048454614a11565b84614b97565b602080601f831160018114614c3f5760008415614c275750858301515b600019600386901b1c1916600185901b178555610fa9565b600085815260208120601f198616915b82811015614c6e57888601518255948401946001909101908401614c4f565b5085821015614c8c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b604081526000614cc56040830185613def565b90508260208301529392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090614d0e90830184613def565b979650505050505050565b600060208284031215614d2b57600080fd5b81516121f181613d98565b6001600160a01b0386811682528516602082015260a060408201819052600090614d629083018661432b565b8281036060840152614d74818661432b565b90508281036080840152614d888185613def565b98975050505050505050565b604081526000614da7604083018561432b565b8281036020840152614a08818561432b56fea26469706673582212204d2b29f4f84d1f82bdbe58039510a172ed841a39c02e22a51d4194cd1440ca9c64736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x11 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH17 0x556E636861696E6564205469636B657473 PUSH1 0x78 SHL PUSH1 0xA0 MSTORE PUSH1 0x8 SWAP1 PUSH3 0x32 SWAP1 DUP3 PUSH3 0x205 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0xAA9C869 PUSH1 0xE3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SWAP1 PUSH3 0x5D SWAP1 DUP3 PUSH3 0x205 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x51A5 CODESIZE SUB DUP1 PUSH3 0x51A5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x8E SWAP2 PUSH3 0x2D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE CALLER SWAP1 PUSH3 0xAA DUP2 PUSH3 0xFC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xDA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE5 DUP2 PUSH3 0x10E JUMP JUMPDEST POP PUSH1 0xA PUSH3 0xF4 DUP3 DUP3 PUSH3 0x205 JUMP JUMPDEST POP POP PUSH3 0x3A6 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x10A DUP3 DUP3 PUSH3 0x205 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x18B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x200 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1DB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1FC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1E7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x221 JUMPI PUSH3 0x221 PUSH3 0x160 JUMP JUMPDEST PUSH3 0x239 DUP2 PUSH3 0x232 DUP5 SLOAD PUSH3 0x176 JUMP JUMPDEST DUP5 PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x271 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x258 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x281 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x327 JUMPI PUSH3 0x327 PUSH3 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x352 JUMPI PUSH3 0x352 PUSH3 0x160 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x38F JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x370 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DEF DUP1 PUSH3 0x3B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x252 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xBC2336E2 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xEDB2B214 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xFE6AD9D5 EQ PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC2336E2 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xC33C66FA EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xE1313346 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xE4139493 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xA8CB2F37 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xAA7C4DF5 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xB4611FA8 EQ PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x73F20EB6 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x85AF5762 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x8920DD14 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x5BCD5DFB EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x34BCADB6 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x417AC869 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x47FB430F EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103F770F GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x103F770F EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x166CC944 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x2432ADA5 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x268BAD9B EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB791430 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6E JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x3DAE JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x3E1B JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x26A PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x373 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0x395 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C0 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4180 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x41BC JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x422 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x42C8 JUMP JUMPDEST PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x4366 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x4379 JUMP JUMPDEST PUSH2 0x183E JUMP JUMPDEST PUSH2 0x492 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x4411 JUMP JUMPDEST PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x447A JUMP JUMPDEST PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x44D8 JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4597 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x45DA JUMP JUMPDEST PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x4604 JUMP JUMPDEST PUSH2 0x1E7F JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x463D JUMP JUMPDEST PUSH2 0x21F8 JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4679 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x46EB JUMP JUMPDEST PUSH2 0x2614 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x65F CALLDATASIZE PUSH1 0x4 PUSH2 0x47C7 JUMP JUMPDEST PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x4884 JUMP JUMPDEST PUSH2 0x2A49 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x48E8 JUMP JUMPDEST PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x698 CALLDATASIZE PUSH1 0x4 PUSH2 0x4903 JUMP JUMPDEST PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x6B0 PUSH2 0x6AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0x2DCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x498B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DF DUP3 PUSH2 0x3104 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x776 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x74B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x776 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x759 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7C3 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x811 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x851 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x87D SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x89F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x6 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x907 PUSH3 0xF4240 DUP5 PUSH2 0x4A61 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x4A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 PUSH2 0x9A8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xA3A SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA66 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA88 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA96 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD MLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB01 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0xB11 JUMPI PUSH1 0xC0 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD MLOAD ISZERO PUSH2 0xB27 JUMPI PUSH1 0xA0 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH2 0xB32 DUP6 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB43 SWAP3 SWAP2 SWAP1 PUSH2 0x4AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 DUP3 SWAP2 PUSH2 0xB8F SWAP1 DUP7 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xBB8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBE4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC06 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xCAD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD9 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD3F SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD6B SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xDD1 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81CD9585D08185CDCDA59DB9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH2 0xF19 JUMPI POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xF31 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP10 PUSH2 0x4B54 JUMP JUMPDEST PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x4A61 JUMP JUMPDEST SWAP3 SWAP9 SWAP3 SWAP8 POP SWAP2 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xF6B JUMPI POP PUSH2 0xF69 DUP7 DUP3 PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0xFA9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x31BB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x4A83 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x103F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031303025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1088 DUP4 DUP4 DUP4 PUSH2 0x3248 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP2 PUSH32 0xBEFC93E7DAA33253E132C907F20544F15E5E331B7F4E917CABEE1D6097A1F1F8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4576656E74206973206E6F7420616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 LT PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103A34B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x43E1 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x122D JUMPI PUSH2 0x122D PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1241 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x126D SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x128F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x129D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x13A8 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x131B SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1347 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1394 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1394 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1377 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12FC JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1481 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x13F4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1420 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x146D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1442 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x146D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1450 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x13D5 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x14A8 DUP11 PUSH3 0xF4240 PUSH2 0x4B54 JUMP JUMPDEST PUSH2 0x14B2 SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x14CF DUP4 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x115D995B9D081CDBDB19081BDD5D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x1549 DUP8 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x330A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 SWAP1 SSTORE DUP12 DUP4 MSTORE PUSH1 0xD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP6 MLOAD ISZERO PUSH2 0x1654 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x10 DUP3 MSTORE DUP4 DUP2 KECCAK256 DUP6 DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x15CD SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x15E2 SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x15F7 SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 DUP11 SWAP1 PUSH32 0x88257BB4915CFAF23FF1F49A4D5278601267800249071A71F74369A6F35B72B4 SWAP1 PUSH2 0x164B SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xA0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1718 JUMPI PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x167C JUMPI PUSH2 0x167C PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP2 DUP6 ADD MSTORE PUSH1 0x0 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE DUP16 DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND DUP3 MSTORE SWAP1 SWAP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 SWAP4 POP SWAP1 PUSH2 0x16D1 SWAP1 DUP5 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x16EE SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP DUP1 PUSH2 0x1710 DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1657 JUMP JUMPDEST POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP11 PUSH32 0x4FE0F5BB11EB6AB81C428FB83261719E5B22F84B3E1942CD491C3777504BB851 DUP12 PUSH1 0x40 MLOAD PUSH2 0x1756 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x179B JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17B6 JUMPI PUSH2 0x17B6 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1836 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x1809 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x6BD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x181B JUMPI PUSH2 0x181B PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x182F DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x17E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1846 PUSH2 0x321B JUMP JUMPDEST PUSH1 0xA PUSH2 0x1852 DUP3 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1876 JUMPI POP PUSH2 0x1874 DUP4 CALLER PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18AA JUMPI CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH2 0x3367 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18C2 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x18CC PUSH1 0x0 PUSH2 0x33AD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x18D6 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1906 SWAP1 DUP6 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x195F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5065726B206E6F7420617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST GT ISZERO PUSH2 0x19B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14195C9AC81B1A5B5A5D08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19CC SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x4E3E5D9908B5BD9975F87EFCEBCA93C1B24A2B205AA71FC34300AB7BF7E16B90 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A0F SWAP3 SWAP2 SWAP1 PUSH2 0x4CB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A26 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4576656E7420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST TIMESTAMP DUP7 GT PUSH2 0x1B22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E74206D75737420626520696E20746865206675747572650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP6 DUP6 GT PUSH2 0x1B71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420656E64206D757374206265206166746572207374617274000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031303025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH2 0x1CBF SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND OR PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D05 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D15 DUP9 DUP4 DUP4 PUSH2 0x3248 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP10 SWAP2 PUSH32 0xBEFC93E7DAA33253E132C907F20544F15E5E331B7F4E917CABEE1D6097A1F1F8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP10 SWAP2 PUSH32 0x6168E40FAC2576E22D73AB2E9EFA79B4E7530DD3DD411AB7D8862D04BE798A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x1DD8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E04 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E51 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E26 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E51 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E34 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST PUSH2 0x1852 CALLER DUP4 DUP4 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1ED1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP8 DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x43E1 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2B PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1F3F SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F6B SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x20A6 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2019 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2045 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2092 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2067 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2092 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2075 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1FFA JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x217F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x20F2 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x211E SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x216B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2140 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x216B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x214E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x20D3 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x21E9 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x80 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21B7 JUMPI PUSH2 0x21B7 PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x21D7 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x21F1 JUMP JUMPDEST DUP1 PUSH2 0x21E1 DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x218C JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2200 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x2252 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x115D995B9D081B9BDD08195B991959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x18B5 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 MLOAD PUSH1 0x1 SWAP3 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2284 JUMPI PUSH2 0x2284 PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BC PUSH2 0x43E1 JUMP JUMPDEST SUB PUSH2 0x2364 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP3 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22E7 JUMPI PUSH2 0x22E7 PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2324 JUMPI PUSH2 0x2324 PUSH2 0x43E1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 DUP4 PUSH32 0xF4245DF30944233E7208C51C270455D1128B5EC5C18D623367B49E7254214B9D PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 PUSH2 0x236E DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2255 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x239C SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23C8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x242A SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2456 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x24B8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24E4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2531 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2506 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2531 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2514 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x2585 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25B1 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x261C PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2628 DUP4 DUP6 PUSH2 0x6BD JUMP JUMPDEST GT PUSH2 0x2667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BC81D1A58DAD95D081BDDDB9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151A58DAD95D08185B1C9958591E481D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2707 JUMPI PUSH2 0x2707 PUSH2 0x43E1 JUMP JUMPDEST EQ PUSH2 0x2748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5469636B6574206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x27EE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 MUL OR SWAP1 SSTORE POP DUP3 DUP4 PUSH32 0xF4245DF30944233E7208C51C270455D1128B5EC5C18D623367B49E7254214B9D PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x27E1 SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP DUP3 DUP4 PUSH32 0xF4245DF30944233E7208C51C270455D1128B5EC5C18D623367B49E7254214B9D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x7C2221C844690CB15E32907258D38446CD4A17BC9B84E2069CD955615D547FD SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x28CD PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x28F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x4A83 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 DUP1 DUP8 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2926 JUMPI PUSH2 0x2926 PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP6 DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x297F JUMPI PUSH2 0x297F PUSH2 0x43E1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x2998 SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x29C8 SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3C95 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x29E4 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3C95 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2A01 DUP4 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP9 PUSH32 0x73F2C5150DD3BAFCDFCFD66CDD6938BC381635E48CEBE16C6D424DFCF68FE854 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2A37 SWAP2 SWAP1 PUSH2 0x3E1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 PUSH2 0x2A66 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO JUMPDEST DUP1 PUSH2 0x2A7E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2A95 JUMPI PUSH2 0x2A90 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3495 JUMP JUMPDEST PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA4 PUSH3 0xF4240 DUP6 PUSH2 0x4A61 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 PUSH2 0x2B17 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B43 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x2BA9 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD5 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD SWAP1 SWAP2 POP TIMESTAMP LT DUP1 PUSH2 0x2C74 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP GT JUMPDEST PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E73666572207469636B65747320647572696E672065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1D995B9D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP1 PUSH2 0x2CE0 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x2D43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65747320617265206E6F6E2D7472616E7366657261626C6520626566 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F7265206576656E7420656E6473 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2D50 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3495 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D62 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2D8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2D95 DUP2 PUSH2 0x33AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x2DB8 JUMPI POP PUSH2 0x2DB6 DUP4 CALLER PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2DC3 JUMPI CALLER PUSH2 0x187D JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH2 0x34F4 JUMP JUMPDEST PUSH2 0x2E08 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x2E54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103A34B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E90 JUMPI PUSH2 0x2E90 PUSH2 0x43E1 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EA1 JUMPI PUSH2 0x2EA1 PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2EB5 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE1 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F2E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F2E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F11 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x301C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2F8F SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2FBB SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3008 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3008 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2F70 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x30F5 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x3068 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3094 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3049 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x6DF JUMPI POP PUSH2 0x6DF DUP3 PUSH2 0x355C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3136 DUP4 PUSH2 0x35AC JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3155 JUMPI PUSH2 0x3155 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x317F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x3189 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x31E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x320E JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2D53 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x328E JUMPI PUSH1 0x40 MLOAD PUSH4 0xDFD1FC1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x32BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B4F8429 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 KECCAK256 SWAP4 MLOAD SWAP1 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3334 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xFA9 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x18B5 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3428 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x34B6 JUMPI POP PUSH2 0x34B4 DUP7 DUP3 PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x34E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0xFA9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x351D JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0x2D53 SWAP2 DUP8 SWAP2 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x358D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x6DF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x35EB JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3617 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3635 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x364D JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3661 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3673 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6DF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3690 DUP6 DUP6 DUP6 DUP6 PUSH2 0x375C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x2D53 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x36C9 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x36C2 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x376E JUMP JUMPDEST POP POP PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0xFA9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3892 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x372A JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x2D50 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x3684 JUMP JUMPDEST PUSH2 0x3768 DUP5 DUP5 DUP5 DUP5 PUSH2 0x397B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x37B2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4CD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x37ED JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x37EA SWAP2 DUP2 ADD SWAP1 PUSH2 0x4D19 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3856 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x381B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3820 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x384E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x2D50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x38D6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D36 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3911 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x390E SWAP2 DUP2 ADD SWAP1 PUSH2 0x4D19 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x393F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x381B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x2D50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x3987 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3A10 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x39F6 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x39D2 SWAP1 DUP5 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x39E2 SWAP1 POP DUP2 DUP5 PUSH2 0x4B6B JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x39EF SWAP1 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x3999 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A09 SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3768 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3A67 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3A60 DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x3A22 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x3AA7 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3BB6 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x3B5E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3B37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x3BA3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3B9D SWAP1 DUP5 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x3BAF SWAP1 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x3AAB JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x3C37 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3C28 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x2D53 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3C86 SWAP3 SWAP2 SWAP1 PUSH2 0x4D94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3CDB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3CDB JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0x3CCB SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3CB5 JUMP JUMPDEST POP PUSH2 0x3CE7 SWAP3 SWAP2 POP PUSH2 0x3CEB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3CE7 JUMPI PUSH1 0x0 PUSH2 0x3CFF DUP3 DUP3 PUSH2 0x3D08 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3CEB JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3D14 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3D24 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D95 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3CE7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3D3E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8A DUP4 PUSH2 0x3D52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2D95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21F1 DUP2 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DE6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DCE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3E07 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3DCB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP8 ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x3E7D DUP2 DUP5 ADD DUP9 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3E91 DUP2 DUP8 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0xE0 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3F00 JUMPI PUSH2 0x3F00 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3F32 JUMPI PUSH2 0x3F32 PUSH2 0x3EC2 JUMP JUMPDEST PUSH2 0x3F45 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3ED8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3F5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x3F9C PUSH1 0x20 DUP6 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FC3 DUP7 DUP3 DUP8 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4002 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4014 DUP2 DUP7 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4028 DUP2 DUP6 PUSH2 0x3DEF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x404B JUMPI PUSH2 0x404B PUSH2 0x3EC2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x407B PUSH2 0x4076 DUP4 PUSH2 0x4032 JUMP JUMPDEST PUSH2 0x3ED8 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x409A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x409E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x40D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40E1 DUP7 PUSH2 0x3D52 JUMP JUMPDEST SWAP5 POP PUSH2 0x40EF PUSH1 0x20 DUP8 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x410B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4117 DUP10 DUP4 DUP11 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x412D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4139 DUP10 DUP4 DUP11 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x414F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415C DUP9 DUP3 DUP10 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x41A5 PUSH1 0x20 DUP6 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 PUSH1 0x40 DUP6 ADD PUSH2 0x4169 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x41D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH2 0x41EC PUSH1 0x40 DUP9 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4214 DUP11 DUP4 DUP12 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x422A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4236 DUP11 DUP4 DUP12 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x424C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4259 DUP10 DUP3 DUP11 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4287 PUSH2 0x4076 DUP4 PUSH2 0x4032 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x42A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI PUSH2 0x42BB DUP2 PUSH2 0x3D52 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x42F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42FE DUP7 DUP4 DUP8 ADD PUSH2 0x4266 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4321 DUP6 DUP3 DUP7 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x435B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x433F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x432B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x438B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43AD DUP5 DUP3 DUP6 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x43D8 PUSH1 0x20 DUP5 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x440B JUMPI PUSH2 0x440B PUSH2 0x43E1 JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x442F DUP5 PUSH2 0x3D52 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x444B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4457 DUP8 DUP4 DUP9 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x446D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC3 DUP7 DUP3 DUP8 ADD PUSH2 0x4055 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x44A0 PUSH1 0x20 DUP7 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44C7 DUP8 DUP3 DUP9 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x44F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4534 DUP13 DUP4 DUP14 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x454A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4557 DUP12 DUP3 DUP13 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x4566 PUSH1 0xC0 DUP11 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x4574 PUSH1 0xE0 DUP11 ADD PUSH2 0x4169 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x4593 JUMPI PUSH2 0x4593 PUSH2 0x43E1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x45A1 DUP2 DUP7 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x45B7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45F6 DUP4 PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x43D8 PUSH1 0x20 DUP5 ADD PUSH2 0x45CA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x466D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4321 DUP6 DUP3 DUP7 ADD PUSH2 0x4266 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x468C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3DEF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x469E DUP2 DUP8 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x46B2 DUP2 DUP7 PUSH2 0x3DEF JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x46D9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x4710 PUSH1 0x20 DUP6 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 PUSH1 0x40 DUP6 ADD PUSH2 0x45CA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x473A DUP4 PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x43D8 PUSH1 0x20 DUP5 ADD PUSH2 0x3D52 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4769 PUSH2 0x4076 DUP4 PUSH2 0x4032 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x4788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47AB JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x47B9 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x3F08 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x478C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x47E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x480C DUP12 DUP4 DUP13 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH1 0x5 DUP3 LT PUSH2 0x4822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x4846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4852 DUP12 DUP4 DUP13 ADD PUSH2 0x4748 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4875 DUP11 DUP3 DUP12 ADD PUSH2 0x4748 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x489C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48A5 DUP7 PUSH2 0x3D52 JUMP JUMPDEST SWAP5 POP PUSH2 0x48B3 PUSH1 0x20 DUP8 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x48DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x415C DUP9 DUP3 DUP10 ADD PUSH2 0x3F08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F1 DUP3 PUSH2 0x3D52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4921 DUP5 PUSH2 0x3D52 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP4 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x497E JUMPI DUP3 DUP5 SUB DUP10 MSTORE PUSH2 0x496C DUP5 DUP4 MLOAD PUSH2 0x3DEF JUMP JUMPDEST SWAP9 DUP6 ADD SWAP9 SWAP4 POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4954 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x499D PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x49B8 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP1 DUP6 DUP5 SUB ADD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x49EA DUP4 DUP4 PUSH2 0x4936 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP6 DUP5 SUB ADD PUSH1 0xC0 DUP7 ADD MSTORE POP PUSH2 0x4A08 DUP3 DUP3 PUSH2 0x4936 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4A25 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4A7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x115D995B9D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x4ABF DUP2 PUSH2 0x4A11 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x4AD7 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4AEC JUMPI PUSH2 0x4B1B JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x4B1B JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B12 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x4AF9 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x4B2F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x3DCB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4B4A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3DCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6DF JUMPI PUSH2 0x6DF PUSH2 0x4A4B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DF PUSH2 0x4A4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x4B90 JUMPI PUSH2 0x4B90 PUSH2 0x4A4B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18B5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4BBE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4BCA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4BF6 JUMPI PUSH2 0x4BF6 PUSH2 0x3EC2 JUMP JUMPDEST PUSH2 0x4C0A DUP2 PUSH2 0x4C04 DUP5 SLOAD PUSH2 0x4A11 JUMP JUMPDEST DUP5 PUSH2 0x4B97 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C3F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4C27 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C6E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4C4F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4C8C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4CC5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4D0E SWAP1 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21F1 DUP2 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4D62 SWAP1 DUP4 ADD DUP7 PUSH2 0x432B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4D74 DUP2 DUP7 PUSH2 0x432B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x4D88 DUP2 DUP6 PUSH2 0x3DEF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4DA7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x432B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4A08 DUP2 DUP6 PUSH2 0x432B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0x2B 0x29 DELEGATECALL 0xF8 0x4D 0x1F DUP3 0xBD 0xBE PC SUB SWAP6 LT LOG1 PUSH19 0xED841A39C02E22A51D4194CD1440CA9C64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1111:40:23:-:0;961:15848;1111:40;;961:15848;1111:40;;;-1:-1:-1;;;1111:40:23;;;;;;;;:::i;:::-;-1:-1:-1;1157:29:23;;;;;;;;;;;;-1:-1:-1;;;1157:29:23;;;;;;;;;;:::i;:::-;;4925:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1249:62:3;;;;;;;;;-1:-1:-1;1249:62:3;;4981:10:23;;1291:13:3;1249:62;1291:7;:13::i;:::-;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3928:51:24;3901:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;5003:8:23::2;:19;5014:8:::0;5003;:19:::2;:::i;:::-;;4925:104:::0;961:15848;;10098:86:3;10164:4;:13;10171:6;10164:4;:13;:::i;:::-;;10098:86;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:24:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:24;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:24;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:24;;;2580:26;2531:89;-1:-1:-1;;1335:1:24;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:24;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:24;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:24;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:24:o;2735:1042::-;2815:6;2846:2;2889;2877:9;2868:7;2864:23;2860:32;2857:52;;;2905:1;2902;2895:12;2857:52;2932:16;;-1:-1:-1;;;;;2997:14:24;;;2994:34;;;3024:1;3021;3014:12;2994:34;3062:6;3051:9;3047:22;3037:32;;3107:7;3100:4;3096:2;3092:13;3088:27;3078:55;;3129:1;3126;3119:12;3078:55;3158:2;3152:9;3180:2;3176;3173:10;3170:36;;;3186:18;;:::i;:::-;3261:2;3255:9;3229:2;3315:13;;-1:-1:-1;;3311:22:24;;;3335:2;3307:31;3303:40;3291:53;;;3359:18;;;3379:22;;;3356:46;3353:72;;;3405:18;;:::i;:::-;3445:10;3441:2;3434:22;3480:2;3472:6;3465:18;3520:7;3515:2;3510;3506;3502:11;3498:20;3495:33;3492:53;;;3541:1;3538;3531:12;3492:53;3563:1;3554:10;;3573:129;3587:2;3584:1;3581:9;3573:129;;;3675:10;;;3671:19;;3665:26;3644:14;;;3640:23;;3633:59;3598:10;;;;3573:129;;;3744:1;3739:2;3734;3726:6;3722:15;3718:24;3711:35;3765:6;3755:16;;;;;;;;2735:1042;;;;:::o;3782:203::-;961:15848:23;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1220":{"entryPoint":null,"id":1220,"parameterSlots":2,"returnSlots":2},"@_burnBatch_1164":{"entryPoint":13159,"id":1164,"parameterSlots":3,"returnSlots":0},"@_burn_1125":{"entryPoint":13556,"id":1125,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":12827,"id":84,"parameterSlots":0,"returnSlots":0},"@_feeDenominator_1966":{"entryPoint":null,"id":1966,"parameterSlots":0,"returnSlots":1},"@_mint_1034":{"entryPoint":13066,"id":1034,"parameterSlots":4,"returnSlots":0},"@_msgSender_3107":{"entryPoint":null,"id":3107,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_971":{"entryPoint":12731,"id":971,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_916":{"entryPoint":14039,"id":916,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1204":{"entryPoint":13311,"id":1204,"parameterSlots":3,"returnSlots":0},"@_setTokenRoyalty_2072":{"entryPoint":12872,"id":2072,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":13229,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_850":{"entryPoint":13956,"id":850,"parameterSlots":5,"returnSlots":0},"@_update_1647":{"entryPoint":14715,"id":1647,"parameterSlots":4,"returnSlots":0},"@_update_770":{"entryPoint":14968,"id":770,"parameterSlots":4,"returnSlots":0},"@_update_9690":{"entryPoint":14172,"id":9690,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_494":{"entryPoint":5994,"id":494,"parameterSlots":2,"returnSlots":1},"@balanceOf_424":{"entryPoint":1725,"id":424,"parameterSlots":2,"returnSlots":1},"@batchTransformToSouvenirs_9372":{"entryPoint":8696,"id":9372,"parameterSlots":2,"returnSlots":0},"@burnBatch_1465":{"entryPoint":6230,"id":1465,"parameterSlots":3,"returnSlots":0},"@burn_1428":{"entryPoint":11672,"id":1428,"parameterSlots":3,"returnSlots":0},"@canAccessArea_9209":{"entryPoint":7807,"id":9209,"parameterSlots":3,"returnSlots":1},"@checkOnERC1155BatchReceived_1817":{"entryPoint":14482,"id":1817,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1743":{"entryPoint":14190,"id":1743,"parameterSlots":6,"returnSlots":0},"@consumePerk_9138":{"entryPoint":6350,"id":9138,"parameterSlots":4,"returnSlots":0},"@createEvent_8739":{"entryPoint":6686,"id":8739,"parameterSlots":8,"returnSlots":0},"@createTier_8805":{"entryPoint":10437,"id":8805,"parameterSlots":7,"returnSlots":0},"@eventTierCount_8519":{"entryPoint":null,"id":8519,"parameterSlots":0,"returnSlots":0},"@eventTiers_8515":{"entryPoint":7591,"id":8515,"parameterSlots":0,"returnSlots":0},"@eventTokenCounter_8543":{"entryPoint":null,"id":8543,"parameterSlots":0,"returnSlots":0},"@events_8495":{"entryPoint":1918,"id":8495,"parameterSlots":0,"returnSlots":0},"@exists_9648":{"entryPoint":null,"id":9648,"parameterSlots":1,"returnSlots":1},"@getPerkStatus_9422":{"entryPoint":2907,"id":9422,"parameterSlots":3,"returnSlots":2},"@getSeatAssignment_9460":{"entryPoint":3175,"id":9460,"parameterSlots":2,"returnSlots":3},"@getTicketState_9390":{"entryPoint":null,"id":9390,"parameterSlots":2,"returnSlots":1},"@getTierInfo_9487":{"entryPoint":11726,"id":9487,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_527":{"entryPoint":10391,"id":527,"parameterSlots":2,"returnSlots":1},"@log10_6322":{"entryPoint":13740,"id":6322,"parameterSlots":1,"returnSlots":1},"@mintTicketWithTier_8986":{"entryPoint":4313,"id":8986,"parameterSlots":6,"returnSlots":1},"@name_8424":{"entryPoint":1776,"id":8424,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@perkTracking_8535":{"entryPoint":9540,"id":8535,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":6330,"id":98,"parameterSlots":0,"returnSlots":0},"@royaltyInfo_1957":{"entryPoint":3781,"id":1957,"parameterSlots":2,"returnSlots":2},"@safeBatchTransferFrom_617":{"entryPoint":3914,"id":617,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_571":{"entryPoint":13461,"id":571,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_9306":{"entryPoint":10825,"id":9306,"parameterSlots":5,"returnSlots":0},"@seatAssignments_8526":{"entryPoint":9078,"id":8526,"parameterSlots":0,"returnSlots":0},"@setApprovalForAll_510":{"entryPoint":7796,"id":510,"parameterSlots":2,"returnSlots":0},"@setBaseURI_9632":{"entryPoint":6206,"id":9632,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1895":{"entryPoint":12548,"id":1895,"parameterSlots":1,"returnSlots":1},"@supportsInterface_396":{"entryPoint":13660,"id":396,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4856":{"entryPoint":null,"id":4856,"parameterSlots":1,"returnSlots":1},"@supportsInterface_9664":{"entryPoint":1765,"id":9664,"parameterSlots":1,"returnSlots":1},"@symbol_8427":{"entryPoint":7783,"id":8427,"parameterSlots":0,"returnSlots":0},"@ticketStates_8508":{"entryPoint":null,"id":8508,"parameterSlots":0,"returnSlots":0},"@toString_3545":{"entryPoint":12585,"id":3545,"parameterSlots":1,"returnSlots":1},"@tokenToTier_8539":{"entryPoint":null,"id":8539,"parameterSlots":0,"returnSlots":0},"@totalSupply_1498":{"entryPoint":null,"id":1498,"parameterSlots":1,"returnSlots":1},"@totalSupply_1507":{"entryPoint":null,"id":1507,"parameterSlots":0,"returnSlots":1},"@transferOwnership_126":{"entryPoint":11610,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_2955":{"entryPoint":null,"id":2955,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_2981":{"entryPoint":null,"id":2981,"parameterSlots":2,"returnSlots":1},"@updateRoyalty_9543":{"entryPoint":4017,"id":9543,"parameterSlots":3,"returnSlots":0},"@uri_9619":{"entryPoint":2294,"id":9619,"parameterSlots":1,"returnSlots":1},"@useTicket_9080":{"entryPoint":9748,"id":9080,"parameterSlots":3,"returnSlots":0},"@usedTickets_8501":{"entryPoint":null,"id":8501,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":15698,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn":{"entryPoint":16998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_string_dyn":{"entryPoint":18248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":16469,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool":{"entryPoint":17866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":16136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":18664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18206,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":16576,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":18564,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":17425,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":17882,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":15726,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":18691,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":17096,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":15790,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":19737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":17273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":15918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":17333,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_bool":{"entryPoint":18155,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_string_memory_ptr":{"entryPoint":16247,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_string_memory_ptrt_uint256":{"entryPoint":17530,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_addresst_uint96":{"entryPoint":16768,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr":{"entryPoint":17981,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_enum$_TicketTier_$8435t_uint256t_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":18375,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":16333,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":16828,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":17924,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_addresst_uint96":{"entryPoint":17624,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_uint96":{"entryPoint":16745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":18742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":17195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_TicketTier":{"entryPoint":17795,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":15855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19121,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19766,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":19668,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint96__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":17254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":19860,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_TicketState_$8490__to_t_uint8__fromStack_reversed":{"entryPoint":17399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_TicketTier_$8435_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":17815,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16367,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":18041,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":19634,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":18118,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f6471c55bb451e9909d9c64e8a4242fd18c5ad3c453d5c942294e6f65a14139__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11756de43fa7685fed37905e74a1fd80a9141a5ccfbd4f69833397108a05a757__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277fb50e54ed9d01cadc455116af5a5662da4bcddac8a1d14e88750cf8f09a21__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_35b870a42c7282702350db66df7d437f6522a5b93bebe0a17639729c86081e43__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e20c9da962f777b0551d44751bf068d7e59b2701da404259aa62c226527bbee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5b3e10b14e83cb448e48e5d59a66437b07e9993475024a2c7e3baebc3a2f0789__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94d24e8ef4feb5369bd619a1aeb605e75b1632e448d9dc25268fd6f86ecffbe7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_96dc51fde1aea3385dd20fd5aff15a7676fd42909b5789936f6c8ebd7c8beba6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b89d7f475b6259f538f5efec95307e131b8de0863046a31d443f665a7a5a9016__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bac3770b00a955a75ca30eb19187adc5a87c84fb30c146cf6e4e40500f3a0763__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eea54bd5ed93eb5544084db3cff6dfa8db8c4c0cbb06865979ee2d3aa8301a5f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ef3dc43bf8d0f6dc82cb7bc4c20234046cd1d83ed1f1ab830247dcd1def48bd5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_TierConfig_$8470_memory_ptr__to_t_struct$_TierConfig_$8470_memory_ptr__fromStack_reversed":{"entryPoint":18827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_string_memory_ptr_t_uint96_t_address__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_string_memory_ptr_t_uint96_t_address__fromStack_reversed":{"entryPoint":15943,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":16088,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":16434,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":19307,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":19041,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":19284,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":19351,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":19421,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":15819,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":18961,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":19326,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":19019,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17377,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19612,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":16066,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":15768,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:39039:24","statements":[{"nodeType":"YulBlock","src":"6:3:24","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:24","statements":[{"nodeType":"YulAssignment","src":"73:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:24"},"nodeType":"YulFunctionCall","src":"82:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:24"}]},{"body":{"nodeType":"YulBlock","src":"165:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:24"},"nodeType":"YulFunctionCall","src":"167:12:24"},"nodeType":"YulExpressionStatement","src":"167:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:24"},"nodeType":"YulFunctionCall","src":"146:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:24"},"nodeType":"YulFunctionCall","src":"142:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:24"},"nodeType":"YulFunctionCall","src":"131:31:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:24"},"nodeType":"YulFunctionCall","src":"121:42:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:24"},"nodeType":"YulFunctionCall","src":"114:50:24"},"nodeType":"YulIf","src":"111:70:24"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:24","type":""}],"src":"14:173:24"},{"body":{"nodeType":"YulBlock","src":"279:167:24","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:24"},"nodeType":"YulFunctionCall","src":"327:12:24"},"nodeType":"YulExpressionStatement","src":"327:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:24"},"nodeType":"YulFunctionCall","src":"296:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:24"},"nodeType":"YulFunctionCall","src":"292:32:24"},"nodeType":"YulIf","src":"289:52:24"},{"nodeType":"YulAssignment","src":"350:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:24"},"nodeType":"YulFunctionCall","src":"360:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:24"}]},{"nodeType":"YulAssignment","src":"398:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:24"},"nodeType":"YulFunctionCall","src":"421:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:24"},"nodeType":"YulFunctionCall","src":"408:32:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:24","type":""}],"src":"192:254:24"},{"body":{"nodeType":"YulBlock","src":"552:76:24","statements":[{"nodeType":"YulAssignment","src":"562:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:24"},"nodeType":"YulFunctionCall","src":"570:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:24"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:24"},"nodeType":"YulFunctionCall","src":"597:25:24"},"nodeType":"YulExpressionStatement","src":"597:25:24"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:24","type":""}],"src":"451:177:24"},{"body":{"nodeType":"YulBlock","src":"677:87:24","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:24"},"nodeType":"YulFunctionCall","src":"744:12:24"},"nodeType":"YulExpressionStatement","src":"744:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:24","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:24"},"nodeType":"YulFunctionCall","src":"718:20:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:24"},"nodeType":"YulFunctionCall","src":"707:32:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:24"},"nodeType":"YulFunctionCall","src":"697:43:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:24"},"nodeType":"YulFunctionCall","src":"690:51:24"},"nodeType":"YulIf","src":"687:71:24"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:24","type":""}],"src":"633:131:24"},{"body":{"nodeType":"YulBlock","src":"838:176:24","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:24"},"nodeType":"YulFunctionCall","src":"886:12:24"},"nodeType":"YulExpressionStatement","src":"886:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:24"},"nodeType":"YulFunctionCall","src":"855:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:24"},"nodeType":"YulFunctionCall","src":"851:32:24"},"nodeType":"YulIf","src":"848:52:24"},{"nodeType":"YulVariableDeclaration","src":"909:36:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:24"},"nodeType":"YulFunctionCall","src":"922:23:24"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:24","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:24"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:24"},"nodeType":"YulFunctionCall","src":"954:30:24"},"nodeType":"YulExpressionStatement","src":"954:30:24"},{"nodeType":"YulAssignment","src":"993:15:24","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:24"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:24","type":""}],"src":"769:245:24"},{"body":{"nodeType":"YulBlock","src":"1114:92:24","statements":[{"nodeType":"YulAssignment","src":"1124:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:24"},"nodeType":"YulFunctionCall","src":"1132:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:24"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:24"},"nodeType":"YulFunctionCall","src":"1184:14:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:24"},"nodeType":"YulFunctionCall","src":"1177:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:24"},"nodeType":"YulFunctionCall","src":"1159:41:24"},"nodeType":"YulExpressionStatement","src":"1159:41:24"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:24","type":""}],"src":"1019:187:24"},{"body":{"nodeType":"YulBlock","src":"1277:184:24","statements":[{"nodeType":"YulVariableDeclaration","src":"1287:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"1296:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1291:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"1356:63:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1381:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"1386:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1377:3:24"},"nodeType":"YulFunctionCall","src":"1377:11:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1400:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"1405:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1396:3:24"},"nodeType":"YulFunctionCall","src":"1396:11:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1390:5:24"},"nodeType":"YulFunctionCall","src":"1390:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1370:6:24"},"nodeType":"YulFunctionCall","src":"1370:39:24"},"nodeType":"YulExpressionStatement","src":"1370:39:24"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1317:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"1320:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1314:2:24"},"nodeType":"YulFunctionCall","src":"1314:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1328:19:24","statements":[{"nodeType":"YulAssignment","src":"1330:15:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1339:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"1342:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:24"},"nodeType":"YulFunctionCall","src":"1335:10:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1330:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"1310:3:24","statements":[]},"src":"1306:113:24"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1439:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"1444:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1435:3:24"},"nodeType":"YulFunctionCall","src":"1435:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"1453:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1428:6:24"},"nodeType":"YulFunctionCall","src":"1428:27:24"},"nodeType":"YulExpressionStatement","src":"1428:27:24"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1255:3:24","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1260:3:24","type":""},{"name":"length","nodeType":"YulTypedName","src":"1265:6:24","type":""}],"src":"1211:250:24"},{"body":{"nodeType":"YulBlock","src":"1516:221:24","statements":[{"nodeType":"YulVariableDeclaration","src":"1526:26:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1546:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1540:5:24"},"nodeType":"YulFunctionCall","src":"1540:12:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1530:6:24","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1568:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"1573:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1561:6:24"},"nodeType":"YulFunctionCall","src":"1561:19:24"},"nodeType":"YulExpressionStatement","src":"1561:19:24"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1628:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"1635:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1624:3:24"},"nodeType":"YulFunctionCall","src":"1624:16:24"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1646:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"1651:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1642:3:24"},"nodeType":"YulFunctionCall","src":"1642:14:24"},{"name":"length","nodeType":"YulIdentifier","src":"1658:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1589:34:24"},"nodeType":"YulFunctionCall","src":"1589:76:24"},"nodeType":"YulExpressionStatement","src":"1589:76:24"},{"nodeType":"YulAssignment","src":"1674:57:24","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1689:3:24"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1702:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"1710:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1698:3:24"},"nodeType":"YulFunctionCall","src":"1698:15:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1719:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1715:3:24"},"nodeType":"YulFunctionCall","src":"1715:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1694:3:24"},"nodeType":"YulFunctionCall","src":"1694:29:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1685:3:24"},"nodeType":"YulFunctionCall","src":"1685:39:24"},{"kind":"number","nodeType":"YulLiteral","src":"1726:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:24"},"nodeType":"YulFunctionCall","src":"1681:50:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1674:3:24"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1500:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1508:3:24","type":""}],"src":"1466:271:24"},{"body":{"nodeType":"YulBlock","src":"1863:99:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1880:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1891:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1873:6:24"},"nodeType":"YulFunctionCall","src":"1873:21:24"},"nodeType":"YulExpressionStatement","src":"1873:21:24"},{"nodeType":"YulAssignment","src":"1903:53:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1929:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1941:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"1952:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1937:3:24"},"nodeType":"YulFunctionCall","src":"1937:18:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1911:17:24"},"nodeType":"YulFunctionCall","src":"1911:45:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1903:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1832:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1843:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1854:4:24","type":""}],"src":"1742:220:24"},{"body":{"nodeType":"YulBlock","src":"2037:110:24","statements":[{"body":{"nodeType":"YulBlock","src":"2083:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2092:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2095:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2085:6:24"},"nodeType":"YulFunctionCall","src":"2085:12:24"},"nodeType":"YulExpressionStatement","src":"2085:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2058:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"2067:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2054:3:24"},"nodeType":"YulFunctionCall","src":"2054:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"2079:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2050:3:24"},"nodeType":"YulFunctionCall","src":"2050:32:24"},"nodeType":"YulIf","src":"2047:52:24"},{"nodeType":"YulAssignment","src":"2108:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2131:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2118:12:24"},"nodeType":"YulFunctionCall","src":"2118:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2108:6:24"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2003:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2014:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2026:6:24","type":""}],"src":"1967:180:24"},{"body":{"nodeType":"YulBlock","src":"2503:633:24","statements":[{"nodeType":"YulVariableDeclaration","src":"2513:13:24","value":{"kind":"number","nodeType":"YulLiteral","src":"2523:3:24","type":"","value":"288"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2517:2:24","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2542:9:24"},{"name":"value0","nodeType":"YulIdentifier","src":"2553:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2535:6:24"},"nodeType":"YulFunctionCall","src":"2535:25:24"},"nodeType":"YulExpressionStatement","src":"2535:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2580:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2591:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2576:3:24"},"nodeType":"YulFunctionCall","src":"2576:18:24"},{"name":"value1","nodeType":"YulIdentifier","src":"2596:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2569:6:24"},"nodeType":"YulFunctionCall","src":"2569:34:24"},"nodeType":"YulExpressionStatement","src":"2569:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2623:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2634:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2619:3:24"},"nodeType":"YulFunctionCall","src":"2619:18:24"},{"name":"value2","nodeType":"YulIdentifier","src":"2639:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2612:6:24"},"nodeType":"YulFunctionCall","src":"2612:34:24"},"nodeType":"YulExpressionStatement","src":"2612:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2666:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2677:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2662:3:24"},"nodeType":"YulFunctionCall","src":"2662:18:24"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2696:6:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2689:6:24"},"nodeType":"YulFunctionCall","src":"2689:14:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2682:6:24"},"nodeType":"YulFunctionCall","src":"2682:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2655:6:24"},"nodeType":"YulFunctionCall","src":"2655:50:24"},"nodeType":"YulExpressionStatement","src":"2655:50:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2725:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2736:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2721:3:24"},"nodeType":"YulFunctionCall","src":"2721:19:24"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2756:6:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2749:6:24"},"nodeType":"YulFunctionCall","src":"2749:14:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2742:6:24"},"nodeType":"YulFunctionCall","src":"2742:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2714:6:24"},"nodeType":"YulFunctionCall","src":"2714:51:24"},"nodeType":"YulExpressionStatement","src":"2714:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2785:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2796:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2781:3:24"},"nodeType":"YulFunctionCall","src":"2781:19:24"},{"name":"_1","nodeType":"YulIdentifier","src":"2802:2:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2774:6:24"},"nodeType":"YulFunctionCall","src":"2774:31:24"},"nodeType":"YulExpressionStatement","src":"2774:31:24"},{"nodeType":"YulVariableDeclaration","src":"2814:59:24","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"2846:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2858:9:24"},{"name":"_1","nodeType":"YulIdentifier","src":"2869:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:24"},"nodeType":"YulFunctionCall","src":"2854:18:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2828:17:24"},"nodeType":"YulFunctionCall","src":"2828:45:24"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2818:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"2904:3:24","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2889:3:24"},"nodeType":"YulFunctionCall","src":"2889:19:24"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2914:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"2922:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2910:3:24"},"nodeType":"YulFunctionCall","src":"2910:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2882:6:24"},"nodeType":"YulFunctionCall","src":"2882:51:24"},"nodeType":"YulExpressionStatement","src":"2882:51:24"},{"nodeType":"YulAssignment","src":"2942:41:24","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2968:6:24"},{"name":"tail_1","nodeType":"YulIdentifier","src":"2976:6:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2950:17:24"},"nodeType":"YulFunctionCall","src":"2950:33:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2942:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3014:3:24","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2999:3:24"},"nodeType":"YulFunctionCall","src":"2999:19:24"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"3024:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"3032:26:24","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3020:3:24"},"nodeType":"YulFunctionCall","src":"3020:39:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2992:6:24"},"nodeType":"YulFunctionCall","src":"2992:68:24"},"nodeType":"YulExpressionStatement","src":"2992:68:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3080:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"3091:3:24","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3076:3:24"},"nodeType":"YulFunctionCall","src":"3076:19:24"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"3101:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3122:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3113:3:24"},"nodeType":"YulFunctionCall","src":"3113:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"3126:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3109:3:24"},"nodeType":"YulFunctionCall","src":"3109:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3097:3:24"},"nodeType":"YulFunctionCall","src":"3097:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3069:6:24"},"nodeType":"YulFunctionCall","src":"3069:61:24"},"nodeType":"YulExpressionStatement","src":"3069:61:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_string_memory_ptr_t_uint96_t_address__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_string_memory_ptr_t_uint96_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2408:9:24","type":""},{"name":"value8","nodeType":"YulTypedName","src":"2419:6:24","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2427:6:24","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2435:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2443:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2451:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2459:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2467:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2475:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2483:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2494:4:24","type":""}],"src":"2152:984:24"},{"body":{"nodeType":"YulBlock","src":"3173:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3190:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3197:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3202:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3193:3:24"},"nodeType":"YulFunctionCall","src":"3193:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3183:6:24"},"nodeType":"YulFunctionCall","src":"3183:31:24"},"nodeType":"YulExpressionStatement","src":"3183:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3230:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3233:4:24","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3223:6:24"},"nodeType":"YulFunctionCall","src":"3223:15:24"},"nodeType":"YulExpressionStatement","src":"3223:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3254:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3257:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3247:6:24"},"nodeType":"YulFunctionCall","src":"3247:15:24"},"nodeType":"YulExpressionStatement","src":"3247:15:24"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3141:127:24"},{"body":{"nodeType":"YulBlock","src":"3318:230:24","statements":[{"nodeType":"YulAssignment","src":"3328:19:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3344:2:24","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3338:5:24"},"nodeType":"YulFunctionCall","src":"3338:9:24"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3328:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"3356:58:24","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3378:6:24"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3394:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"3400:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3390:3:24"},"nodeType":"YulFunctionCall","src":"3390:13:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3409:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3405:3:24"},"nodeType":"YulFunctionCall","src":"3405:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3386:3:24"},"nodeType":"YulFunctionCall","src":"3386:27:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3374:3:24"},"nodeType":"YulFunctionCall","src":"3374:40:24"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3360:10:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3489:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3491:16:24"},"nodeType":"YulFunctionCall","src":"3491:18:24"},"nodeType":"YulExpressionStatement","src":"3491:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3432:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"3444:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3429:2:24"},"nodeType":"YulFunctionCall","src":"3429:34:24"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3468:10:24"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3480:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3465:2:24"},"nodeType":"YulFunctionCall","src":"3465:22:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3426:2:24"},"nodeType":"YulFunctionCall","src":"3426:62:24"},"nodeType":"YulIf","src":"3423:88:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3527:2:24","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3531:10:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3520:6:24"},"nodeType":"YulFunctionCall","src":"3520:22:24"},"nodeType":"YulExpressionStatement","src":"3520:22:24"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3298:4:24","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3307:6:24","type":""}],"src":"3273:275:24"},{"body":{"nodeType":"YulBlock","src":"3606:478:24","statements":[{"body":{"nodeType":"YulBlock","src":"3655:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3664:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3667:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3657:6:24"},"nodeType":"YulFunctionCall","src":"3657:12:24"},"nodeType":"YulExpressionStatement","src":"3657:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3634:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"3642:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:24"},"nodeType":"YulFunctionCall","src":"3630:17:24"},{"name":"end","nodeType":"YulIdentifier","src":"3649:3:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3626:3:24"},"nodeType":"YulFunctionCall","src":"3626:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3619:6:24"},"nodeType":"YulFunctionCall","src":"3619:35:24"},"nodeType":"YulIf","src":"3616:55:24"},{"nodeType":"YulVariableDeclaration","src":"3680:30:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3703:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3690:12:24"},"nodeType":"YulFunctionCall","src":"3690:20:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3684:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"3749:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3751:16:24"},"nodeType":"YulFunctionCall","src":"3751:18:24"},"nodeType":"YulExpressionStatement","src":"3751:18:24"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3725:2:24"},{"kind":"number","nodeType":"YulLiteral","src":"3729:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3722:2:24"},"nodeType":"YulFunctionCall","src":"3722:26:24"},"nodeType":"YulIf","src":"3719:52:24"},{"nodeType":"YulVariableDeclaration","src":"3780:70:24","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3823:2:24"},{"kind":"number","nodeType":"YulLiteral","src":"3827:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3819:3:24"},"nodeType":"YulFunctionCall","src":"3819:13:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3838:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3834:3:24"},"nodeType":"YulFunctionCall","src":"3834:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3815:3:24"},"nodeType":"YulFunctionCall","src":"3815:27:24"},{"kind":"number","nodeType":"YulLiteral","src":"3844:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3811:3:24"},"nodeType":"YulFunctionCall","src":"3811:38:24"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3795:15:24"},"nodeType":"YulFunctionCall","src":"3795:55:24"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"3784:7:24","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"3866:7:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3875:2:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:24"},"nodeType":"YulFunctionCall","src":"3859:19:24"},"nodeType":"YulExpressionStatement","src":"3859:19:24"},{"body":{"nodeType":"YulBlock","src":"3926:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3935:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3938:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3928:6:24"},"nodeType":"YulFunctionCall","src":"3928:12:24"},"nodeType":"YulExpressionStatement","src":"3928:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3901:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"3909:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3897:3:24"},"nodeType":"YulFunctionCall","src":"3897:15:24"},{"kind":"number","nodeType":"YulLiteral","src":"3914:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3893:3:24"},"nodeType":"YulFunctionCall","src":"3893:26:24"},{"name":"end","nodeType":"YulIdentifier","src":"3921:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3890:2:24"},"nodeType":"YulFunctionCall","src":"3890:35:24"},"nodeType":"YulIf","src":"3887:55:24"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"3968:7:24"},{"kind":"number","nodeType":"YulLiteral","src":"3977:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3964:3:24"},"nodeType":"YulFunctionCall","src":"3964:18:24"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3988:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"3996:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3984:3:24"},"nodeType":"YulFunctionCall","src":"3984:17:24"},{"name":"_1","nodeType":"YulIdentifier","src":"4003:2:24"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3951:12:24"},"nodeType":"YulFunctionCall","src":"3951:55:24"},"nodeType":"YulExpressionStatement","src":"3951:55:24"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"4030:7:24"},{"name":"_1","nodeType":"YulIdentifier","src":"4039:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4026:3:24"},"nodeType":"YulFunctionCall","src":"4026:16:24"},{"kind":"number","nodeType":"YulLiteral","src":"4044:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4022:3:24"},"nodeType":"YulFunctionCall","src":"4022:27:24"},{"kind":"number","nodeType":"YulLiteral","src":"4051:1:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4015:6:24"},"nodeType":"YulFunctionCall","src":"4015:38:24"},"nodeType":"YulExpressionStatement","src":"4015:38:24"},{"nodeType":"YulAssignment","src":"4062:16:24","value":{"name":"array_1","nodeType":"YulIdentifier","src":"4071:7:24"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4062:5:24"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3580:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"3588:3:24","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3596:5:24","type":""}],"src":"3553:531:24"},{"body":{"nodeType":"YulBlock","src":"4203:350:24","statements":[{"body":{"nodeType":"YulBlock","src":"4249:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4258:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4261:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4251:6:24"},"nodeType":"YulFunctionCall","src":"4251:12:24"},"nodeType":"YulExpressionStatement","src":"4251:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4224:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"4233:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4220:3:24"},"nodeType":"YulFunctionCall","src":"4220:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"4245:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4216:3:24"},"nodeType":"YulFunctionCall","src":"4216:32:24"},"nodeType":"YulIf","src":"4213:52:24"},{"nodeType":"YulAssignment","src":"4274:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4297:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4284:12:24"},"nodeType":"YulFunctionCall","src":"4284:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4274:6:24"}]},{"nodeType":"YulAssignment","src":"4316:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4349:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4360:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4345:3:24"},"nodeType":"YulFunctionCall","src":"4345:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4326:18:24"},"nodeType":"YulFunctionCall","src":"4326:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4316:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"4373:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4404:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4415:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4400:3:24"},"nodeType":"YulFunctionCall","src":"4400:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4387:12:24"},"nodeType":"YulFunctionCall","src":"4387:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4377:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"4462:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4471:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4474:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4464:6:24"},"nodeType":"YulFunctionCall","src":"4464:12:24"},"nodeType":"YulExpressionStatement","src":"4464:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4434:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"4442:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4431:2:24"},"nodeType":"YulFunctionCall","src":"4431:30:24"},"nodeType":"YulIf","src":"4428:50:24"},{"nodeType":"YulAssignment","src":"4487:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4519:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"4530:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4515:3:24"},"nodeType":"YulFunctionCall","src":"4515:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4539:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4497:17:24"},"nodeType":"YulFunctionCall","src":"4497:50:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4487:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4153:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4164:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4176:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4184:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4192:6:24","type":""}],"src":"4089:464:24"},{"body":{"nodeType":"YulBlock","src":"4687:119:24","statements":[{"nodeType":"YulAssignment","src":"4697:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4709:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4720:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4705:3:24"},"nodeType":"YulFunctionCall","src":"4705:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4697:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4739:9:24"},{"name":"value0","nodeType":"YulIdentifier","src":"4750:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4732:6:24"},"nodeType":"YulFunctionCall","src":"4732:25:24"},"nodeType":"YulExpressionStatement","src":"4732:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4777:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"4788:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4773:3:24"},"nodeType":"YulFunctionCall","src":"4773:18:24"},{"name":"value1","nodeType":"YulIdentifier","src":"4793:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4766:6:24"},"nodeType":"YulFunctionCall","src":"4766:34:24"},"nodeType":"YulExpressionStatement","src":"4766:34:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4648:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4659:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4667:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4678:4:24","type":""}],"src":"4558:248:24"},{"body":{"nodeType":"YulBlock","src":"4898:161:24","statements":[{"body":{"nodeType":"YulBlock","src":"4944:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4953:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4956:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4946:6:24"},"nodeType":"YulFunctionCall","src":"4946:12:24"},"nodeType":"YulExpressionStatement","src":"4946:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4919:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"4928:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4915:3:24"},"nodeType":"YulFunctionCall","src":"4915:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"4940:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4911:3:24"},"nodeType":"YulFunctionCall","src":"4911:32:24"},"nodeType":"YulIf","src":"4908:52:24"},{"nodeType":"YulAssignment","src":"4969:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4992:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4979:12:24"},"nodeType":"YulFunctionCall","src":"4979:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4969:6:24"}]},{"nodeType":"YulAssignment","src":"5011:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5038:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5049:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5034:3:24"},"nodeType":"YulFunctionCall","src":"5034:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5021:12:24"},"nodeType":"YulFunctionCall","src":"5021:32:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5011:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4856:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4867:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4879:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4887:6:24","type":""}],"src":"4811:248:24"},{"body":{"nodeType":"YulBlock","src":"5281:329:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5298:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5309:2:24","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5291:6:24"},"nodeType":"YulFunctionCall","src":"5291:21:24"},"nodeType":"YulExpressionStatement","src":"5291:21:24"},{"nodeType":"YulVariableDeclaration","src":"5321:59:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5353:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5365:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5376:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5361:3:24"},"nodeType":"YulFunctionCall","src":"5361:18:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5335:17:24"},"nodeType":"YulFunctionCall","src":"5335:45:24"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5325:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5400:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5411:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5396:3:24"},"nodeType":"YulFunctionCall","src":"5396:18:24"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5420:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"5428:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5416:3:24"},"nodeType":"YulFunctionCall","src":"5416:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5389:6:24"},"nodeType":"YulFunctionCall","src":"5389:50:24"},"nodeType":"YulExpressionStatement","src":"5389:50:24"},{"nodeType":"YulVariableDeclaration","src":"5448:47:24","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5480:6:24"},{"name":"tail_1","nodeType":"YulIdentifier","src":"5488:6:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5462:17:24"},"nodeType":"YulFunctionCall","src":"5462:33:24"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"5452:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5515:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5526:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5511:3:24"},"nodeType":"YulFunctionCall","src":"5511:18:24"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"5535:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"5543:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5531:3:24"},"nodeType":"YulFunctionCall","src":"5531:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5504:6:24"},"nodeType":"YulFunctionCall","src":"5504:50:24"},"nodeType":"YulExpressionStatement","src":"5504:50:24"},{"nodeType":"YulAssignment","src":"5563:41:24","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5589:6:24"},{"name":"tail_2","nodeType":"YulIdentifier","src":"5597:6:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"5571:17:24"},"nodeType":"YulFunctionCall","src":"5571:33:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5563:4:24"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5234:9:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5245:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5253:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5261:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5272:4:24","type":""}],"src":"5064:546:24"},{"body":{"nodeType":"YulBlock","src":"5744:145:24","statements":[{"nodeType":"YulAssignment","src":"5754:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5766:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5777:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5762:3:24"},"nodeType":"YulFunctionCall","src":"5762:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5754:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5796:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5811:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5827:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5832:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5823:3:24"},"nodeType":"YulFunctionCall","src":"5823:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"5836:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5819:3:24"},"nodeType":"YulFunctionCall","src":"5819:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5807:3:24"},"nodeType":"YulFunctionCall","src":"5807:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5789:6:24"},"nodeType":"YulFunctionCall","src":"5789:51:24"},"nodeType":"YulExpressionStatement","src":"5789:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5860:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"5871:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5856:3:24"},"nodeType":"YulFunctionCall","src":"5856:18:24"},{"name":"value1","nodeType":"YulIdentifier","src":"5876:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5849:6:24"},"nodeType":"YulFunctionCall","src":"5849:34:24"},"nodeType":"YulExpressionStatement","src":"5849:34:24"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5705:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5716:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5724:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5735:4:24","type":""}],"src":"5615:274:24"},{"body":{"nodeType":"YulBlock","src":"5963:114:24","statements":[{"body":{"nodeType":"YulBlock","src":"6007:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6009:16:24"},"nodeType":"YulFunctionCall","src":"6009:18:24"},"nodeType":"YulExpressionStatement","src":"6009:18:24"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5979:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"5987:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5976:2:24"},"nodeType":"YulFunctionCall","src":"5976:30:24"},"nodeType":"YulIf","src":"5973:56:24"},{"nodeType":"YulAssignment","src":"6038:33:24","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6054:1:24","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"6057:6:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6050:3:24"},"nodeType":"YulFunctionCall","src":"6050:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"6066:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:24"},"nodeType":"YulFunctionCall","src":"6046:25:24"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6038:4:24"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5943:6:24","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5954:4:24","type":""}],"src":"5894:183:24"},{"body":{"nodeType":"YulBlock","src":"6146:598:24","statements":[{"body":{"nodeType":"YulBlock","src":"6195:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6204:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6197:6:24"},"nodeType":"YulFunctionCall","src":"6197:12:24"},"nodeType":"YulExpressionStatement","src":"6197:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6174:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"6182:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6170:3:24"},"nodeType":"YulFunctionCall","src":"6170:17:24"},{"name":"end","nodeType":"YulIdentifier","src":"6189:3:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6166:3:24"},"nodeType":"YulFunctionCall","src":"6166:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6159:6:24"},"nodeType":"YulFunctionCall","src":"6159:35:24"},"nodeType":"YulIf","src":"6156:55:24"},{"nodeType":"YulVariableDeclaration","src":"6220:30:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6243:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6230:12:24"},"nodeType":"YulFunctionCall","src":"6230:20:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6224:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6259:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"6269:4:24","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6263:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6282:71:24","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6349:2:24"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"6309:39:24"},"nodeType":"YulFunctionCall","src":"6309:43:24"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6293:15:24"},"nodeType":"YulFunctionCall","src":"6293:60:24"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6286:3:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6362:16:24","value":{"name":"dst","nodeType":"YulIdentifier","src":"6375:3:24"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6366:5:24","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6394:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"6399:2:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6387:6:24"},"nodeType":"YulFunctionCall","src":"6387:15:24"},"nodeType":"YulExpressionStatement","src":"6387:15:24"},{"nodeType":"YulAssignment","src":"6411:19:24","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6422:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"6427:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6418:3:24"},"nodeType":"YulFunctionCall","src":"6418:12:24"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6411:3:24"}]},{"nodeType":"YulVariableDeclaration","src":"6439:46:24","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6461:6:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6473:1:24","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"6476:2:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6469:3:24"},"nodeType":"YulFunctionCall","src":"6469:10:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6457:3:24"},"nodeType":"YulFunctionCall","src":"6457:23:24"},{"name":"_2","nodeType":"YulIdentifier","src":"6482:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6453:3:24"},"nodeType":"YulFunctionCall","src":"6453:32:24"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6443:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"6513:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6522:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6525:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6515:6:24"},"nodeType":"YulFunctionCall","src":"6515:12:24"},"nodeType":"YulExpressionStatement","src":"6515:12:24"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6500:6:24"},{"name":"end","nodeType":"YulIdentifier","src":"6508:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6497:2:24"},"nodeType":"YulFunctionCall","src":"6497:15:24"},"nodeType":"YulIf","src":"6494:35:24"},{"nodeType":"YulVariableDeclaration","src":"6538:26:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6553:6:24"},{"name":"_2","nodeType":"YulIdentifier","src":"6561:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6549:3:24"},"nodeType":"YulFunctionCall","src":"6549:15:24"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6542:3:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"6629:86:24","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6650:3:24"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6668:3:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6655:12:24"},"nodeType":"YulFunctionCall","src":"6655:17:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6643:6:24"},"nodeType":"YulFunctionCall","src":"6643:30:24"},"nodeType":"YulExpressionStatement","src":"6643:30:24"},{"nodeType":"YulAssignment","src":"6686:19:24","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6697:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"6702:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6693:3:24"},"nodeType":"YulFunctionCall","src":"6693:12:24"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6686:3:24"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6584:3:24"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6589:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6581:2:24"},"nodeType":"YulFunctionCall","src":"6581:15:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6597:23:24","statements":[{"nodeType":"YulAssignment","src":"6599:19:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6610:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"6615:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6606:3:24"},"nodeType":"YulFunctionCall","src":"6606:12:24"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6599:3:24"}]}]},"pre":{"nodeType":"YulBlock","src":"6577:3:24","statements":[]},"src":"6573:142:24"},{"nodeType":"YulAssignment","src":"6724:14:24","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"6733:5:24"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6724:5:24"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6120:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"6128:3:24","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6136:5:24","type":""}],"src":"6082:662:24"},{"body":{"nodeType":"YulBlock","src":"6946:747:24","statements":[{"body":{"nodeType":"YulBlock","src":"6993:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7002:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7005:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6995:6:24"},"nodeType":"YulFunctionCall","src":"6995:12:24"},"nodeType":"YulExpressionStatement","src":"6995:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6967:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"6976:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6963:3:24"},"nodeType":"YulFunctionCall","src":"6963:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"6988:3:24","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6959:3:24"},"nodeType":"YulFunctionCall","src":"6959:33:24"},"nodeType":"YulIf","src":"6956:53:24"},{"nodeType":"YulAssignment","src":"7018:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7047:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7028:18:24"},"nodeType":"YulFunctionCall","src":"7028:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7018:6:24"}]},{"nodeType":"YulAssignment","src":"7066:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7099:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7110:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7095:3:24"},"nodeType":"YulFunctionCall","src":"7095:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7076:18:24"},"nodeType":"YulFunctionCall","src":"7076:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7066:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"7123:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7154:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7165:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7150:3:24"},"nodeType":"YulFunctionCall","src":"7150:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7137:12:24"},"nodeType":"YulFunctionCall","src":"7137:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7127:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7178:28:24","value":{"kind":"number","nodeType":"YulLiteral","src":"7188:18:24","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7182:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"7233:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7242:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7245:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7235:6:24"},"nodeType":"YulFunctionCall","src":"7235:12:24"},"nodeType":"YulExpressionStatement","src":"7235:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7221:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"7229:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7218:2:24"},"nodeType":"YulFunctionCall","src":"7218:14:24"},"nodeType":"YulIf","src":"7215:34:24"},{"nodeType":"YulAssignment","src":"7258:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7301:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"7312:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7297:3:24"},"nodeType":"YulFunctionCall","src":"7297:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7321:7:24"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7268:28:24"},"nodeType":"YulFunctionCall","src":"7268:61:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7258:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"7338:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7371:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7382:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:24"},"nodeType":"YulFunctionCall","src":"7367:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7354:12:24"},"nodeType":"YulFunctionCall","src":"7354:32:24"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7342:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7424:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7427:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7417:6:24"},"nodeType":"YulFunctionCall","src":"7417:12:24"},"nodeType":"YulExpressionStatement","src":"7417:12:24"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7401:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"7411:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7398:2:24"},"nodeType":"YulFunctionCall","src":"7398:16:24"},"nodeType":"YulIf","src":"7395:36:24"},{"nodeType":"YulAssignment","src":"7440:73:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7483:9:24"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7494:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7479:3:24"},"nodeType":"YulFunctionCall","src":"7479:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7505:7:24"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7450:28:24"},"nodeType":"YulFunctionCall","src":"7450:63:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7440:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"7522:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"7566:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:24"},"nodeType":"YulFunctionCall","src":"7551:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7538:12:24"},"nodeType":"YulFunctionCall","src":"7538:33:24"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"7526:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"7600:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7609:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7612:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7602:6:24"},"nodeType":"YulFunctionCall","src":"7602:12:24"},"nodeType":"YulExpressionStatement","src":"7602:12:24"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"7586:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"7596:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7583:2:24"},"nodeType":"YulFunctionCall","src":"7583:16:24"},"nodeType":"YulIf","src":"7580:36:24"},{"nodeType":"YulAssignment","src":"7625:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7657:9:24"},{"name":"offset_2","nodeType":"YulIdentifier","src":"7668:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7653:3:24"},"nodeType":"YulFunctionCall","src":"7653:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7679:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"7635:17:24"},"nodeType":"YulFunctionCall","src":"7635:52:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7625:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6880:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6891:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6903:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6911:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6919:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6927:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6935:6:24","type":""}],"src":"6749:944:24"},{"body":{"nodeType":"YulBlock","src":"7746:131:24","statements":[{"nodeType":"YulAssignment","src":"7756:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7778:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7765:12:24"},"nodeType":"YulFunctionCall","src":"7765:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7756:5:24"}]},{"body":{"nodeType":"YulBlock","src":"7855:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7864:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7867:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7857:6:24"},"nodeType":"YulFunctionCall","src":"7857:12:24"},"nodeType":"YulExpressionStatement","src":"7857:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7807:5:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7818:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"7825:26:24","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7814:3:24"},"nodeType":"YulFunctionCall","src":"7814:38:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7804:2:24"},"nodeType":"YulFunctionCall","src":"7804:49:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7797:6:24"},"nodeType":"YulFunctionCall","src":"7797:57:24"},"nodeType":"YulIf","src":"7794:77:24"}]},"name":"abi_decode_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7725:6:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7736:5:24","type":""}],"src":"7698:179:24"},{"body":{"nodeType":"YulBlock","src":"7985:223:24","statements":[{"body":{"nodeType":"YulBlock","src":"8031:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8040:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8043:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8033:6:24"},"nodeType":"YulFunctionCall","src":"8033:12:24"},"nodeType":"YulExpressionStatement","src":"8033:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8006:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"8015:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8002:3:24"},"nodeType":"YulFunctionCall","src":"8002:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"8027:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7998:3:24"},"nodeType":"YulFunctionCall","src":"7998:32:24"},"nodeType":"YulIf","src":"7995:52:24"},{"nodeType":"YulAssignment","src":"8056:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8079:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8066:12:24"},"nodeType":"YulFunctionCall","src":"8066:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8056:6:24"}]},{"nodeType":"YulAssignment","src":"8098:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8131:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8142:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8127:3:24"},"nodeType":"YulFunctionCall","src":"8127:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8108:18:24"},"nodeType":"YulFunctionCall","src":"8108:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8098:6:24"}]},{"nodeType":"YulAssignment","src":"8155:47:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8187:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8198:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8183:3:24"},"nodeType":"YulFunctionCall","src":"8183:18:24"}],"functionName":{"name":"abi_decode_uint96","nodeType":"YulIdentifier","src":"8165:17:24"},"nodeType":"YulFunctionCall","src":"8165:37:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8155:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7935:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7946:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7958:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7966:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7974:6:24","type":""}],"src":"7882:326:24"},{"body":{"nodeType":"YulBlock","src":"8398:771:24","statements":[{"body":{"nodeType":"YulBlock","src":"8445:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8454:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8457:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8447:6:24"},"nodeType":"YulFunctionCall","src":"8447:12:24"},"nodeType":"YulExpressionStatement","src":"8447:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8419:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"8428:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8415:3:24"},"nodeType":"YulFunctionCall","src":"8415:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"8440:3:24","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8411:3:24"},"nodeType":"YulFunctionCall","src":"8411:33:24"},"nodeType":"YulIf","src":"8408:53:24"},{"nodeType":"YulAssignment","src":"8470:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8493:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8480:12:24"},"nodeType":"YulFunctionCall","src":"8480:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8470:6:24"}]},{"nodeType":"YulAssignment","src":"8512:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8539:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8550:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8535:3:24"},"nodeType":"YulFunctionCall","src":"8535:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8522:12:24"},"nodeType":"YulFunctionCall","src":"8522:32:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8512:6:24"}]},{"nodeType":"YulAssignment","src":"8563:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8596:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8607:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8592:3:24"},"nodeType":"YulFunctionCall","src":"8592:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"8573:18:24"},"nodeType":"YulFunctionCall","src":"8573:38:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8563:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"8620:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8651:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8662:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8647:3:24"},"nodeType":"YulFunctionCall","src":"8647:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8634:12:24"},"nodeType":"YulFunctionCall","src":"8634:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8624:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8675:28:24","value":{"kind":"number","nodeType":"YulLiteral","src":"8685:18:24","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8679:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"8730:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8739:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8742:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8732:6:24"},"nodeType":"YulFunctionCall","src":"8732:12:24"},"nodeType":"YulExpressionStatement","src":"8732:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8718:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"8726:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8715:2:24"},"nodeType":"YulFunctionCall","src":"8715:14:24"},"nodeType":"YulIf","src":"8712:34:24"},{"nodeType":"YulAssignment","src":"8755:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8787:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"8798:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:24"},"nodeType":"YulFunctionCall","src":"8783:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8807:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8765:17:24"},"nodeType":"YulFunctionCall","src":"8765:50:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8755:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"8824:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8857:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"8868:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8853:3:24"},"nodeType":"YulFunctionCall","src":"8853:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8840:12:24"},"nodeType":"YulFunctionCall","src":"8840:33:24"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"8828:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"8902:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8911:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8904:6:24"},"nodeType":"YulFunctionCall","src":"8904:12:24"},"nodeType":"YulExpressionStatement","src":"8904:12:24"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"8888:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"8898:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8885:2:24"},"nodeType":"YulFunctionCall","src":"8885:16:24"},"nodeType":"YulIf","src":"8882:36:24"},{"nodeType":"YulAssignment","src":"8927:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8959:9:24"},{"name":"offset_1","nodeType":"YulIdentifier","src":"8970:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8955:3:24"},"nodeType":"YulFunctionCall","src":"8955:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8981:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"8937:17:24"},"nodeType":"YulFunctionCall","src":"8937:52:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8927:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"8998:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9031:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"9042:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9027:3:24"},"nodeType":"YulFunctionCall","src":"9027:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9014:12:24"},"nodeType":"YulFunctionCall","src":"9014:33:24"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"9002:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"9076:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9085:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9088:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9078:6:24"},"nodeType":"YulFunctionCall","src":"9078:12:24"},"nodeType":"YulExpressionStatement","src":"9078:12:24"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"9062:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"9072:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9059:2:24"},"nodeType":"YulFunctionCall","src":"9059:16:24"},"nodeType":"YulIf","src":"9056:36:24"},{"nodeType":"YulAssignment","src":"9101:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9133:9:24"},{"name":"offset_2","nodeType":"YulIdentifier","src":"9144:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9129:3:24"},"nodeType":"YulFunctionCall","src":"9129:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9155:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"9111:17:24"},"nodeType":"YulFunctionCall","src":"9111:52:24"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9101:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8324:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8335:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8347:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8355:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8363:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8371:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8379:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8387:6:24","type":""}],"src":"8213:956:24"},{"body":{"nodeType":"YulBlock","src":"9238:604:24","statements":[{"body":{"nodeType":"YulBlock","src":"9287:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9296:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9299:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9289:6:24"},"nodeType":"YulFunctionCall","src":"9289:12:24"},"nodeType":"YulExpressionStatement","src":"9289:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9266:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"9274:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9262:3:24"},"nodeType":"YulFunctionCall","src":"9262:17:24"},{"name":"end","nodeType":"YulIdentifier","src":"9281:3:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9258:3:24"},"nodeType":"YulFunctionCall","src":"9258:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9251:6:24"},"nodeType":"YulFunctionCall","src":"9251:35:24"},"nodeType":"YulIf","src":"9248:55:24"},{"nodeType":"YulVariableDeclaration","src":"9312:30:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9335:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9322:12:24"},"nodeType":"YulFunctionCall","src":"9322:20:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9316:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9351:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"9361:4:24","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9355:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9374:71:24","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"9441:2:24"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"9401:39:24"},"nodeType":"YulFunctionCall","src":"9401:43:24"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9385:15:24"},"nodeType":"YulFunctionCall","src":"9385:60:24"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9378:3:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9454:16:24","value":{"name":"dst","nodeType":"YulIdentifier","src":"9467:3:24"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"9458:5:24","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9486:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"9491:2:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9479:6:24"},"nodeType":"YulFunctionCall","src":"9479:15:24"},"nodeType":"YulExpressionStatement","src":"9479:15:24"},{"nodeType":"YulAssignment","src":"9503:19:24","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9514:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"9519:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9510:3:24"},"nodeType":"YulFunctionCall","src":"9510:12:24"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9503:3:24"}]},{"nodeType":"YulVariableDeclaration","src":"9531:46:24","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9553:6:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9565:1:24","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"9568:2:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9561:3:24"},"nodeType":"YulFunctionCall","src":"9561:10:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:24"},"nodeType":"YulFunctionCall","src":"9549:23:24"},{"name":"_2","nodeType":"YulIdentifier","src":"9574:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9545:3:24"},"nodeType":"YulFunctionCall","src":"9545:32:24"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9535:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"9605:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9614:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9617:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9607:6:24"},"nodeType":"YulFunctionCall","src":"9607:12:24"},"nodeType":"YulExpressionStatement","src":"9607:12:24"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9592:6:24"},{"name":"end","nodeType":"YulIdentifier","src":"9600:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9589:2:24"},"nodeType":"YulFunctionCall","src":"9589:15:24"},"nodeType":"YulIf","src":"9586:35:24"},{"nodeType":"YulVariableDeclaration","src":"9630:26:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9645:6:24"},{"name":"_2","nodeType":"YulIdentifier","src":"9653:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9641:3:24"},"nodeType":"YulFunctionCall","src":"9641:15:24"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9634:3:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"9721:92:24","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9742:3:24"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9766:3:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9747:18:24"},"nodeType":"YulFunctionCall","src":"9747:23:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9735:6:24"},"nodeType":"YulFunctionCall","src":"9735:36:24"},"nodeType":"YulExpressionStatement","src":"9735:36:24"},{"nodeType":"YulAssignment","src":"9784:19:24","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9795:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"9800:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9791:3:24"},"nodeType":"YulFunctionCall","src":"9791:12:24"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9784:3:24"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9676:3:24"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9681:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9673:2:24"},"nodeType":"YulFunctionCall","src":"9673:15:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9689:23:24","statements":[{"nodeType":"YulAssignment","src":"9691:19:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9702:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"9707:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9698:3:24"},"nodeType":"YulFunctionCall","src":"9698:12:24"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9691:3:24"}]}]},"pre":{"nodeType":"YulBlock","src":"9669:3:24","statements":[]},"src":"9665:148:24"},{"nodeType":"YulAssignment","src":"9822:14:24","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"9831:5:24"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9822:5:24"}]}]},"name":"abi_decode_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9212:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"9220:3:24","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9228:5:24","type":""}],"src":"9174:668:24"},{"body":{"nodeType":"YulBlock","src":"9984:458:24","statements":[{"body":{"nodeType":"YulBlock","src":"10030:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10039:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10042:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10032:6:24"},"nodeType":"YulFunctionCall","src":"10032:12:24"},"nodeType":"YulExpressionStatement","src":"10032:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10005:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"10014:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10001:3:24"},"nodeType":"YulFunctionCall","src":"10001:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"10026:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9997:3:24"},"nodeType":"YulFunctionCall","src":"9997:32:24"},"nodeType":"YulIf","src":"9994:52:24"},{"nodeType":"YulVariableDeclaration","src":"10055:37:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10082:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10069:12:24"},"nodeType":"YulFunctionCall","src":"10069:23:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10059:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10101:28:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10111:18:24","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10105:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"10156:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10165:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10168:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10158:6:24"},"nodeType":"YulFunctionCall","src":"10158:12:24"},"nodeType":"YulExpressionStatement","src":"10158:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10144:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"10152:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10141:2:24"},"nodeType":"YulFunctionCall","src":"10141:14:24"},"nodeType":"YulIf","src":"10138:34:24"},{"nodeType":"YulAssignment","src":"10181:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10224:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"10235:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10220:3:24"},"nodeType":"YulFunctionCall","src":"10220:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10244:7:24"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"10191:28:24"},"nodeType":"YulFunctionCall","src":"10191:61:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10181:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"10261:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10294:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"10305:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10290:3:24"},"nodeType":"YulFunctionCall","src":"10290:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10277:12:24"},"nodeType":"YulFunctionCall","src":"10277:32:24"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"10265:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"10338:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10347:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10350:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10340:6:24"},"nodeType":"YulFunctionCall","src":"10340:12:24"},"nodeType":"YulExpressionStatement","src":"10340:12:24"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10324:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"10334:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10321:2:24"},"nodeType":"YulFunctionCall","src":"10321:16:24"},"nodeType":"YulIf","src":"10318:36:24"},{"nodeType":"YulAssignment","src":"10363:73:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10406:9:24"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10417:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10402:3:24"},"nodeType":"YulFunctionCall","src":"10402:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10428:7:24"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"10373:28:24"},"nodeType":"YulFunctionCall","src":"10373:63:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10363:6:24"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9942:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9953:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9965:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9973:6:24","type":""}],"src":"9847:595:24"},{"body":{"nodeType":"YulBlock","src":"10508:374:24","statements":[{"nodeType":"YulVariableDeclaration","src":"10518:26:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10538:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10532:5:24"},"nodeType":"YulFunctionCall","src":"10532:12:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10522:6:24","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10560:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"10565:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10553:6:24"},"nodeType":"YulFunctionCall","src":"10553:19:24"},"nodeType":"YulExpressionStatement","src":"10553:19:24"},{"nodeType":"YulVariableDeclaration","src":"10581:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10591:4:24","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10585:2:24","type":""}]},{"nodeType":"YulAssignment","src":"10604:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10615:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"10620:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10611:3:24"},"nodeType":"YulFunctionCall","src":"10611:12:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10604:3:24"}]},{"nodeType":"YulVariableDeclaration","src":"10632:28:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10650:5:24"},{"name":"_1","nodeType":"YulIdentifier","src":"10657:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10646:3:24"},"nodeType":"YulFunctionCall","src":"10646:14:24"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10636:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10669:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"10678:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10673:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"10737:120:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10758:3:24"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10769:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10763:5:24"},"nodeType":"YulFunctionCall","src":"10763:13:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10751:6:24"},"nodeType":"YulFunctionCall","src":"10751:26:24"},"nodeType":"YulExpressionStatement","src":"10751:26:24"},{"nodeType":"YulAssignment","src":"10790:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10801:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"10806:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10797:3:24"},"nodeType":"YulFunctionCall","src":"10797:12:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10790:3:24"}]},{"nodeType":"YulAssignment","src":"10822:25:24","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10836:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"10844:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:24"},"nodeType":"YulFunctionCall","src":"10832:15:24"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10822:6:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10699:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"10702:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10696:2:24"},"nodeType":"YulFunctionCall","src":"10696:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10710:18:24","statements":[{"nodeType":"YulAssignment","src":"10712:14:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10721:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"10724:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10717:3:24"},"nodeType":"YulFunctionCall","src":"10717:9:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10712:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"10692:3:24","statements":[]},"src":"10688:169:24"},{"nodeType":"YulAssignment","src":"10866:10:24","value":{"name":"pos","nodeType":"YulIdentifier","src":"10873:3:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10866:3:24"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10485:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10492:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10500:3:24","type":""}],"src":"10447:435:24"},{"body":{"nodeType":"YulBlock","src":"11038:110:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11055:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11066:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11048:6:24"},"nodeType":"YulFunctionCall","src":"11048:21:24"},"nodeType":"YulExpressionStatement","src":"11048:21:24"},{"nodeType":"YulAssignment","src":"11078:64:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11115:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11138:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:24"},"nodeType":"YulFunctionCall","src":"11123:18:24"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"11086:28:24"},"nodeType":"YulFunctionCall","src":"11086:56:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11078:4:24"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11007:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11018:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11029:4:24","type":""}],"src":"10887:261:24"},{"body":{"nodeType":"YulBlock","src":"11233:242:24","statements":[{"body":{"nodeType":"YulBlock","src":"11279:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11288:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11291:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11281:6:24"},"nodeType":"YulFunctionCall","src":"11281:12:24"},"nodeType":"YulExpressionStatement","src":"11281:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11254:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11263:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11250:3:24"},"nodeType":"YulFunctionCall","src":"11250:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"11275:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11246:3:24"},"nodeType":"YulFunctionCall","src":"11246:32:24"},"nodeType":"YulIf","src":"11243:52:24"},{"nodeType":"YulVariableDeclaration","src":"11304:37:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11331:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11318:12:24"},"nodeType":"YulFunctionCall","src":"11318:23:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11308:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"11384:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11393:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11396:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11386:6:24"},"nodeType":"YulFunctionCall","src":"11386:12:24"},"nodeType":"YulExpressionStatement","src":"11386:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11356:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"11364:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11353:2:24"},"nodeType":"YulFunctionCall","src":"11353:30:24"},"nodeType":"YulIf","src":"11350:50:24"},{"nodeType":"YulAssignment","src":"11409:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11441:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"11452:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11437:3:24"},"nodeType":"YulFunctionCall","src":"11437:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11461:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"11419:17:24"},"nodeType":"YulFunctionCall","src":"11419:50:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11409:6:24"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11199:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11210:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11222:6:24","type":""}],"src":"11153:322:24"},{"body":{"nodeType":"YulBlock","src":"11567:167:24","statements":[{"body":{"nodeType":"YulBlock","src":"11613:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11622:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11615:6:24"},"nodeType":"YulFunctionCall","src":"11615:12:24"},"nodeType":"YulExpressionStatement","src":"11615:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11588:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"11597:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11584:3:24"},"nodeType":"YulFunctionCall","src":"11584:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11580:3:24"},"nodeType":"YulFunctionCall","src":"11580:32:24"},"nodeType":"YulIf","src":"11577:52:24"},{"nodeType":"YulAssignment","src":"11638:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11661:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11648:12:24"},"nodeType":"YulFunctionCall","src":"11648:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11638:6:24"}]},{"nodeType":"YulAssignment","src":"11680:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11713:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"11724:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11709:3:24"},"nodeType":"YulFunctionCall","src":"11709:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11690:18:24"},"nodeType":"YulFunctionCall","src":"11690:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11680:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11525:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11536:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11548:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11556:6:24","type":""}],"src":"11480:254:24"},{"body":{"nodeType":"YulBlock","src":"11771:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11788:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11795:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11800:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11791:3:24"},"nodeType":"YulFunctionCall","src":"11791:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11781:6:24"},"nodeType":"YulFunctionCall","src":"11781:31:24"},"nodeType":"YulExpressionStatement","src":"11781:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11828:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11831:4:24","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11821:6:24"},"nodeType":"YulFunctionCall","src":"11821:15:24"},"nodeType":"YulExpressionStatement","src":"11821:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11852:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11855:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11845:6:24"},"nodeType":"YulFunctionCall","src":"11845:15:24"},"nodeType":"YulExpressionStatement","src":"11845:15:24"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11739:127:24"},{"body":{"nodeType":"YulBlock","src":"11986:132:24","statements":[{"nodeType":"YulAssignment","src":"11996:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12008:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"12019:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12004:3:24"},"nodeType":"YulFunctionCall","src":"12004:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11996:4:24"}]},{"body":{"nodeType":"YulBlock","src":"12056:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12058:16:24"},"nodeType":"YulFunctionCall","src":"12058:18:24"},"nodeType":"YulExpressionStatement","src":"12058:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12044:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"12052:1:24","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12041:2:24"},"nodeType":"YulFunctionCall","src":"12041:13:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12034:6:24"},"nodeType":"YulFunctionCall","src":"12034:21:24"},"nodeType":"YulIf","src":"12031:47:24"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12094:9:24"},{"name":"value0","nodeType":"YulIdentifier","src":"12105:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12087:6:24"},"nodeType":"YulFunctionCall","src":"12087:25:24"},"nodeType":"YulExpressionStatement","src":"12087:25:24"}]},"name":"abi_encode_tuple_t_enum$_TicketState_$8490__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11955:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11966:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11977:4:24","type":""}],"src":"11871:247:24"},{"body":{"nodeType":"YulBlock","src":"12277:515:24","statements":[{"body":{"nodeType":"YulBlock","src":"12323:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12332:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12335:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12325:6:24"},"nodeType":"YulFunctionCall","src":"12325:12:24"},"nodeType":"YulExpressionStatement","src":"12325:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12298:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"12307:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12294:3:24"},"nodeType":"YulFunctionCall","src":"12294:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"12319:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12290:3:24"},"nodeType":"YulFunctionCall","src":"12290:32:24"},"nodeType":"YulIf","src":"12287:52:24"},{"nodeType":"YulAssignment","src":"12348:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12377:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"12358:18:24"},"nodeType":"YulFunctionCall","src":"12358:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12348:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"12396:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12427:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"12438:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12423:3:24"},"nodeType":"YulFunctionCall","src":"12423:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12410:12:24"},"nodeType":"YulFunctionCall","src":"12410:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12400:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12451:28:24","value":{"kind":"number","nodeType":"YulLiteral","src":"12461:18:24","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12455:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"12506:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12515:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12518:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12508:6:24"},"nodeType":"YulFunctionCall","src":"12508:12:24"},"nodeType":"YulExpressionStatement","src":"12508:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12494:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"12502:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12491:2:24"},"nodeType":"YulFunctionCall","src":"12491:14:24"},"nodeType":"YulIf","src":"12488:34:24"},{"nodeType":"YulAssignment","src":"12531:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12574:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"12585:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12570:3:24"},"nodeType":"YulFunctionCall","src":"12570:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12594:7:24"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"12541:28:24"},"nodeType":"YulFunctionCall","src":"12541:61:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12531:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"12611:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12644:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"12655:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12640:3:24"},"nodeType":"YulFunctionCall","src":"12640:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12627:12:24"},"nodeType":"YulFunctionCall","src":"12627:32:24"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"12615:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"12688:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12697:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12700:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12690:6:24"},"nodeType":"YulFunctionCall","src":"12690:12:24"},"nodeType":"YulExpressionStatement","src":"12690:12:24"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"12674:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"12684:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12671:2:24"},"nodeType":"YulFunctionCall","src":"12671:16:24"},"nodeType":"YulIf","src":"12668:36:24"},{"nodeType":"YulAssignment","src":"12713:73:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12756:9:24"},{"name":"offset_1","nodeType":"YulIdentifier","src":"12767:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12752:3:24"},"nodeType":"YulFunctionCall","src":"12752:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12778:7:24"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"12723:28:24"},"nodeType":"YulFunctionCall","src":"12723:63:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12713:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12227:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12238:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12250:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12258:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12266:6:24","type":""}],"src":"12123:669:24"},{"body":{"nodeType":"YulBlock","src":"12928:402:24","statements":[{"body":{"nodeType":"YulBlock","src":"12975:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12984:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12987:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12977:6:24"},"nodeType":"YulFunctionCall","src":"12977:12:24"},"nodeType":"YulExpressionStatement","src":"12977:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12949:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"12958:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12945:3:24"},"nodeType":"YulFunctionCall","src":"12945:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"12970:3:24","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12941:3:24"},"nodeType":"YulFunctionCall","src":"12941:33:24"},"nodeType":"YulIf","src":"12938:53:24"},{"nodeType":"YulAssignment","src":"13000:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13023:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13010:12:24"},"nodeType":"YulFunctionCall","src":"13010:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13000:6:24"}]},{"nodeType":"YulAssignment","src":"13042:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13075:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13086:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13071:3:24"},"nodeType":"YulFunctionCall","src":"13071:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"13052:18:24"},"nodeType":"YulFunctionCall","src":"13052:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13042:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"13099:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13130:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13141:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13126:3:24"},"nodeType":"YulFunctionCall","src":"13126:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13113:12:24"},"nodeType":"YulFunctionCall","src":"13113:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13103:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"13188:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13197:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13200:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13190:6:24"},"nodeType":"YulFunctionCall","src":"13190:12:24"},"nodeType":"YulExpressionStatement","src":"13190:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13160:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"13168:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13157:2:24"},"nodeType":"YulFunctionCall","src":"13157:30:24"},"nodeType":"YulIf","src":"13154:50:24"},{"nodeType":"YulAssignment","src":"13213:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13245:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13256:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13241:3:24"},"nodeType":"YulFunctionCall","src":"13241:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13265:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13223:17:24"},"nodeType":"YulFunctionCall","src":"13223:50:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13213:6:24"}]},{"nodeType":"YulAssignment","src":"13282:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13309:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13320:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13305:3:24"},"nodeType":"YulFunctionCall","src":"13305:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13292:12:24"},"nodeType":"YulFunctionCall","src":"13292:32:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13282:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12870:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12881:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12893:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12901:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12909:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12917:6:24","type":""}],"src":"12797:533:24"},{"body":{"nodeType":"YulBlock","src":"13543:758:24","statements":[{"body":{"nodeType":"YulBlock","src":"13590:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13599:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13602:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13592:6:24"},"nodeType":"YulFunctionCall","src":"13592:12:24"},"nodeType":"YulExpressionStatement","src":"13592:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13564:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"13573:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13560:3:24"},"nodeType":"YulFunctionCall","src":"13560:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"13585:3:24","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13556:3:24"},"nodeType":"YulFunctionCall","src":"13556:33:24"},"nodeType":"YulIf","src":"13553:53:24"},{"nodeType":"YulAssignment","src":"13615:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13638:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13625:12:24"},"nodeType":"YulFunctionCall","src":"13625:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13615:6:24"}]},{"nodeType":"YulAssignment","src":"13657:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13684:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13680:3:24"},"nodeType":"YulFunctionCall","src":"13680:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13667:12:24"},"nodeType":"YulFunctionCall","src":"13667:32:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13657:6:24"}]},{"nodeType":"YulAssignment","src":"13708:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13735:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13746:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13731:3:24"},"nodeType":"YulFunctionCall","src":"13731:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13718:12:24"},"nodeType":"YulFunctionCall","src":"13718:32:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13708:6:24"}]},{"nodeType":"YulAssignment","src":"13759:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13786:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13797:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:24"},"nodeType":"YulFunctionCall","src":"13782:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13769:12:24"},"nodeType":"YulFunctionCall","src":"13769:32:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13759:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"13810:47:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13841:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"13852:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13837:3:24"},"nodeType":"YulFunctionCall","src":"13837:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13824:12:24"},"nodeType":"YulFunctionCall","src":"13824:33:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13814:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13866:28:24","value":{"kind":"number","nodeType":"YulLiteral","src":"13876:18:24","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13870:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"13921:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13930:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13933:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13923:6:24"},"nodeType":"YulFunctionCall","src":"13923:12:24"},"nodeType":"YulExpressionStatement","src":"13923:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13909:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"13917:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13906:2:24"},"nodeType":"YulFunctionCall","src":"13906:14:24"},"nodeType":"YulIf","src":"13903:34:24"},{"nodeType":"YulAssignment","src":"13946:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13978:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"13989:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13974:3:24"},"nodeType":"YulFunctionCall","src":"13974:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13998:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"13956:17:24"},"nodeType":"YulFunctionCall","src":"13956:50:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13946:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"14015:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14059:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:24"},"nodeType":"YulFunctionCall","src":"14044:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14031:12:24"},"nodeType":"YulFunctionCall","src":"14031:33:24"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"14019:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"14093:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14102:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14105:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14095:6:24"},"nodeType":"YulFunctionCall","src":"14095:12:24"},"nodeType":"YulExpressionStatement","src":"14095:12:24"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"14079:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"14089:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14076:2:24"},"nodeType":"YulFunctionCall","src":"14076:16:24"},"nodeType":"YulIf","src":"14073:36:24"},{"nodeType":"YulAssignment","src":"14118:62:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14150:9:24"},{"name":"offset_1","nodeType":"YulIdentifier","src":"14161:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14146:3:24"},"nodeType":"YulFunctionCall","src":"14146:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14172:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"14128:17:24"},"nodeType":"YulFunctionCall","src":"14128:52:24"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14118:6:24"}]},{"nodeType":"YulAssignment","src":"14189:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14222:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14233:3:24","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14218:3:24"},"nodeType":"YulFunctionCall","src":"14218:19:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"14199:18:24"},"nodeType":"YulFunctionCall","src":"14199:39:24"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"14189:6:24"}]},{"nodeType":"YulAssignment","src":"14247:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14279:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14290:3:24","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14275:3:24"},"nodeType":"YulFunctionCall","src":"14275:19:24"}],"functionName":{"name":"abi_decode_uint96","nodeType":"YulIdentifier","src":"14257:17:24"},"nodeType":"YulFunctionCall","src":"14257:38:24"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"14247:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_addresst_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13453:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13464:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13476:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13484:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13492:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13500:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13508:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13516:6:24","type":""},{"name":"value6","nodeType":"YulTypedName","src":"13524:6:24","type":""},{"name":"value7","nodeType":"YulTypedName","src":"13532:6:24","type":""}],"src":"13335:966:24"},{"body":{"nodeType":"YulBlock","src":"14358:89:24","statements":[{"body":{"nodeType":"YulBlock","src":"14392:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"14394:16:24"},"nodeType":"YulFunctionCall","src":"14394:18:24"},"nodeType":"YulExpressionStatement","src":"14394:18:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14381:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"14388:1:24","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14378:2:24"},"nodeType":"YulFunctionCall","src":"14378:12:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14371:6:24"},"nodeType":"YulFunctionCall","src":"14371:20:24"},"nodeType":"YulIf","src":"14368:46:24"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14430:3:24"},{"name":"value","nodeType":"YulIdentifier","src":"14435:5:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14423:6:24"},"nodeType":"YulFunctionCall","src":"14423:18:24"},"nodeType":"YulExpressionStatement","src":"14423:18:24"}]},"name":"abi_encode_enum_TicketTier","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14342:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14349:3:24","type":""}],"src":"14306:141:24"},{"body":{"nodeType":"YulBlock","src":"14670:250:24","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14707:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"14715:9:24"}],"functionName":{"name":"abi_encode_enum_TicketTier","nodeType":"YulIdentifier","src":"14680:26:24"},"nodeType":"YulFunctionCall","src":"14680:45:24"},"nodeType":"YulExpressionStatement","src":"14680:45:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14745:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14756:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14741:3:24"},"nodeType":"YulFunctionCall","src":"14741:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"14761:3:24","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14734:6:24"},"nodeType":"YulFunctionCall","src":"14734:31:24"},"nodeType":"YulExpressionStatement","src":"14734:31:24"},{"nodeType":"YulAssignment","src":"14774:54:24","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14800:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14812:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14823:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14808:3:24"},"nodeType":"YulFunctionCall","src":"14808:19:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"14782:17:24"},"nodeType":"YulFunctionCall","src":"14782:46:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14774:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14848:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14859:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14844:3:24"},"nodeType":"YulFunctionCall","src":"14844:18:24"},{"name":"value2","nodeType":"YulIdentifier","src":"14864:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14837:6:24"},"nodeType":"YulFunctionCall","src":"14837:34:24"},"nodeType":"YulExpressionStatement","src":"14837:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14891:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"14902:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14887:3:24"},"nodeType":"YulFunctionCall","src":"14887:18:24"},{"name":"value3","nodeType":"YulIdentifier","src":"14907:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14880:6:24"},"nodeType":"YulFunctionCall","src":"14880:34:24"},"nodeType":"YulExpressionStatement","src":"14880:34:24"}]},"name":"abi_encode_tuple_t_enum$_TicketTier_$8435_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14615:9:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14626:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14634:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14642:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14650:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14661:4:24","type":""}],"src":"14452:468:24"},{"body":{"nodeType":"YulBlock","src":"15026:102:24","statements":[{"nodeType":"YulAssignment","src":"15036:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15048:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15059:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:24"},"nodeType":"YulFunctionCall","src":"15044:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15036:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15078:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15093:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15109:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15114:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15105:3:24"},"nodeType":"YulFunctionCall","src":"15105:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"15118:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15101:3:24"},"nodeType":"YulFunctionCall","src":"15101:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15089:3:24"},"nodeType":"YulFunctionCall","src":"15089:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15071:6:24"},"nodeType":"YulFunctionCall","src":"15071:51:24"},"nodeType":"YulExpressionStatement","src":"15071:51:24"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14995:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15006:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15017:4:24","type":""}],"src":"14925:203:24"},{"body":{"nodeType":"YulBlock","src":"15179:114:24","statements":[{"nodeType":"YulAssignment","src":"15189:29:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15211:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15198:12:24"},"nodeType":"YulFunctionCall","src":"15198:20:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15189:5:24"}]},{"body":{"nodeType":"YulBlock","src":"15271:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15280:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15283:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15273:6:24"},"nodeType":"YulFunctionCall","src":"15273:12:24"},"nodeType":"YulExpressionStatement","src":"15273:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15240:5:24"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15261:5:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15254:6:24"},"nodeType":"YulFunctionCall","src":"15254:13:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15247:6:24"},"nodeType":"YulFunctionCall","src":"15247:21:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15237:2:24"},"nodeType":"YulFunctionCall","src":"15237:32:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15230:6:24"},"nodeType":"YulFunctionCall","src":"15230:40:24"},"nodeType":"YulIf","src":"15227:60:24"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15158:6:24","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15169:5:24","type":""}],"src":"15133:160:24"},{"body":{"nodeType":"YulBlock","src":"15382:170:24","statements":[{"body":{"nodeType":"YulBlock","src":"15428:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15437:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15440:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15430:6:24"},"nodeType":"YulFunctionCall","src":"15430:12:24"},"nodeType":"YulExpressionStatement","src":"15430:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15403:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"15412:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15399:3:24"},"nodeType":"YulFunctionCall","src":"15399:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"15424:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15395:3:24"},"nodeType":"YulFunctionCall","src":"15395:32:24"},"nodeType":"YulIf","src":"15392:52:24"},{"nodeType":"YulAssignment","src":"15453:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15482:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"15463:18:24"},"nodeType":"YulFunctionCall","src":"15463:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15453:6:24"}]},{"nodeType":"YulAssignment","src":"15501:45:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15531:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15542:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15527:3:24"},"nodeType":"YulFunctionCall","src":"15527:18:24"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"15511:15:24"},"nodeType":"YulFunctionCall","src":"15511:35:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15501:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15340:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15351:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15363:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15371:6:24","type":""}],"src":"15298:254:24"},{"body":{"nodeType":"YulBlock","src":"15671:344:24","statements":[{"body":{"nodeType":"YulBlock","src":"15717:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15726:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15729:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15719:6:24"},"nodeType":"YulFunctionCall","src":"15719:12:24"},"nodeType":"YulExpressionStatement","src":"15719:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15692:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"15701:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15688:3:24"},"nodeType":"YulFunctionCall","src":"15688:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"15713:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15684:3:24"},"nodeType":"YulFunctionCall","src":"15684:32:24"},"nodeType":"YulIf","src":"15681:52:24"},{"nodeType":"YulAssignment","src":"15742:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15765:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15752:12:24"},"nodeType":"YulFunctionCall","src":"15752:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15742:6:24"}]},{"nodeType":"YulAssignment","src":"15784:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15811:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15822:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15807:3:24"},"nodeType":"YulFunctionCall","src":"15807:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15794:12:24"},"nodeType":"YulFunctionCall","src":"15794:32:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15784:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"15835:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15866:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"15877:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15862:3:24"},"nodeType":"YulFunctionCall","src":"15862:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15849:12:24"},"nodeType":"YulFunctionCall","src":"15849:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15839:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"15924:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15933:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15936:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15926:6:24"},"nodeType":"YulFunctionCall","src":"15926:12:24"},"nodeType":"YulExpressionStatement","src":"15926:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15896:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"15904:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15893:2:24"},"nodeType":"YulFunctionCall","src":"15893:30:24"},"nodeType":"YulIf","src":"15890:50:24"},{"nodeType":"YulAssignment","src":"15949:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15981:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"15992:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15977:3:24"},"nodeType":"YulFunctionCall","src":"15977:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16001:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"15959:17:24"},"nodeType":"YulFunctionCall","src":"15959:50:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15949:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15621:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15632:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15644:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15652:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15660:6:24","type":""}],"src":"15557:458:24"},{"body":{"nodeType":"YulBlock","src":"16132:304:24","statements":[{"body":{"nodeType":"YulBlock","src":"16178:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16187:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16190:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16180:6:24"},"nodeType":"YulFunctionCall","src":"16180:12:24"},"nodeType":"YulExpressionStatement","src":"16180:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16153:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"16162:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16149:3:24"},"nodeType":"YulFunctionCall","src":"16149:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"16174:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16145:3:24"},"nodeType":"YulFunctionCall","src":"16145:32:24"},"nodeType":"YulIf","src":"16142:52:24"},{"nodeType":"YulAssignment","src":"16203:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16226:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16213:12:24"},"nodeType":"YulFunctionCall","src":"16213:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16203:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"16245:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16276:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16287:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16272:3:24"},"nodeType":"YulFunctionCall","src":"16272:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16259:12:24"},"nodeType":"YulFunctionCall","src":"16259:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16249:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"16334:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16343:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16346:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16336:6:24"},"nodeType":"YulFunctionCall","src":"16336:12:24"},"nodeType":"YulExpressionStatement","src":"16336:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16306:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"16314:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16303:2:24"},"nodeType":"YulFunctionCall","src":"16303:30:24"},"nodeType":"YulIf","src":"16300:50:24"},{"nodeType":"YulAssignment","src":"16359:71:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16402:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"16413:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16398:3:24"},"nodeType":"YulFunctionCall","src":"16398:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16422:7:24"}],"functionName":{"name":"abi_decode_array_address_dyn","nodeType":"YulIdentifier","src":"16369:28:24"},"nodeType":"YulFunctionCall","src":"16369:61:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16359:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16090:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16101:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16113:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16121:6:24","type":""}],"src":"16020:416:24"},{"body":{"nodeType":"YulBlock","src":"16680:390:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16697:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16708:3:24","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16690:6:24"},"nodeType":"YulFunctionCall","src":"16690:22:24"},"nodeType":"YulExpressionStatement","src":"16690:22:24"},{"nodeType":"YulVariableDeclaration","src":"16721:60:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16753:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16765:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16776:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16761:3:24"},"nodeType":"YulFunctionCall","src":"16761:19:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16735:17:24"},"nodeType":"YulFunctionCall","src":"16735:46:24"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16725:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16801:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16812:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16797:3:24"},"nodeType":"YulFunctionCall","src":"16797:18:24"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16821:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"16829:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16817:3:24"},"nodeType":"YulFunctionCall","src":"16817:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16790:6:24"},"nodeType":"YulFunctionCall","src":"16790:50:24"},"nodeType":"YulExpressionStatement","src":"16790:50:24"},{"nodeType":"YulVariableDeclaration","src":"16849:47:24","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16881:6:24"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16889:6:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16863:17:24"},"nodeType":"YulFunctionCall","src":"16863:33:24"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"16853:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16916:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"16927:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16912:3:24"},"nodeType":"YulFunctionCall","src":"16912:18:24"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16936:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"16944:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16932:3:24"},"nodeType":"YulFunctionCall","src":"16932:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16905:6:24"},"nodeType":"YulFunctionCall","src":"16905:50:24"},"nodeType":"YulExpressionStatement","src":"16905:50:24"},{"nodeType":"YulAssignment","src":"16964:41:24","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16990:6:24"},{"name":"tail_2","nodeType":"YulIdentifier","src":"16998:6:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"16972:17:24"},"nodeType":"YulFunctionCall","src":"16972:33:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16964:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17025:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17036:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17021:3:24"},"nodeType":"YulFunctionCall","src":"17021:18:24"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17055:6:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17048:6:24"},"nodeType":"YulFunctionCall","src":"17048:14:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17041:6:24"},"nodeType":"YulFunctionCall","src":"17041:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17014:6:24"},"nodeType":"YulFunctionCall","src":"17014:50:24"},"nodeType":"YulExpressionStatement","src":"17014:50:24"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16625:9:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16636:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16644:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16652:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16660:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16671:4:24","type":""}],"src":"16441:629:24"},{"body":{"nodeType":"YulBlock","src":"17252:185:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17269:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17280:2:24","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17262:6:24"},"nodeType":"YulFunctionCall","src":"17262:21:24"},"nodeType":"YulExpressionStatement","src":"17262:21:24"},{"nodeType":"YulAssignment","src":"17292:53:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17318:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17330:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17341:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17326:3:24"},"nodeType":"YulFunctionCall","src":"17326:18:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"17300:17:24"},"nodeType":"YulFunctionCall","src":"17300:45:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17292:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17365:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17376:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17361:3:24"},"nodeType":"YulFunctionCall","src":"17361:18:24"},{"name":"value1","nodeType":"YulIdentifier","src":"17381:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17354:6:24"},"nodeType":"YulFunctionCall","src":"17354:34:24"},"nodeType":"YulExpressionStatement","src":"17354:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17408:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17419:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17404:3:24"},"nodeType":"YulFunctionCall","src":"17404:18:24"},{"name":"value2","nodeType":"YulIdentifier","src":"17424:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17397:6:24"},"nodeType":"YulFunctionCall","src":"17397:34:24"},"nodeType":"YulExpressionStatement","src":"17397:34:24"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17205:9:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17216:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17224:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17232:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17243:4:24","type":""}],"src":"17075:362:24"},{"body":{"nodeType":"YulBlock","src":"17543:221:24","statements":[{"body":{"nodeType":"YulBlock","src":"17589:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17598:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17601:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17591:6:24"},"nodeType":"YulFunctionCall","src":"17591:12:24"},"nodeType":"YulExpressionStatement","src":"17591:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17564:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"17573:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17560:3:24"},"nodeType":"YulFunctionCall","src":"17560:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"17585:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17556:3:24"},"nodeType":"YulFunctionCall","src":"17556:32:24"},"nodeType":"YulIf","src":"17553:52:24"},{"nodeType":"YulAssignment","src":"17614:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17637:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17624:12:24"},"nodeType":"YulFunctionCall","src":"17624:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17614:6:24"}]},{"nodeType":"YulAssignment","src":"17656:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17689:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17700:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17685:3:24"},"nodeType":"YulFunctionCall","src":"17685:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"17666:18:24"},"nodeType":"YulFunctionCall","src":"17666:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17656:6:24"}]},{"nodeType":"YulAssignment","src":"17713:45:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17743:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"17754:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17739:3:24"},"nodeType":"YulFunctionCall","src":"17739:18:24"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"17723:15:24"},"nodeType":"YulFunctionCall","src":"17723:35:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17713:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17493:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17504:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17516:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17524:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17532:6:24","type":""}],"src":"17442:322:24"},{"body":{"nodeType":"YulBlock","src":"17856:173:24","statements":[{"body":{"nodeType":"YulBlock","src":"17902:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17911:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17914:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17904:6:24"},"nodeType":"YulFunctionCall","src":"17904:12:24"},"nodeType":"YulExpressionStatement","src":"17904:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17877:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"17886:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17873:3:24"},"nodeType":"YulFunctionCall","src":"17873:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"17898:2:24","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17869:3:24"},"nodeType":"YulFunctionCall","src":"17869:32:24"},"nodeType":"YulIf","src":"17866:52:24"},{"nodeType":"YulAssignment","src":"17927:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17956:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"17937:18:24"},"nodeType":"YulFunctionCall","src":"17937:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17927:6:24"}]},{"nodeType":"YulAssignment","src":"17975:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18008:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"18019:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18004:3:24"},"nodeType":"YulFunctionCall","src":"18004:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"17985:18:24"},"nodeType":"YulFunctionCall","src":"17985:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17975:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17814:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17825:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17837:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17845:6:24","type":""}],"src":"17769:260:24"},{"body":{"nodeType":"YulBlock","src":"18097:825:24","statements":[{"body":{"nodeType":"YulBlock","src":"18146:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18155:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18158:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18148:6:24"},"nodeType":"YulFunctionCall","src":"18148:12:24"},"nodeType":"YulExpressionStatement","src":"18148:12:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18125:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"18133:4:24","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18121:3:24"},"nodeType":"YulFunctionCall","src":"18121:17:24"},{"name":"end","nodeType":"YulIdentifier","src":"18140:3:24"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18117:3:24"},"nodeType":"YulFunctionCall","src":"18117:27:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18110:6:24"},"nodeType":"YulFunctionCall","src":"18110:35:24"},"nodeType":"YulIf","src":"18107:55:24"},{"nodeType":"YulVariableDeclaration","src":"18171:30:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18194:6:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18181:12:24"},"nodeType":"YulFunctionCall","src":"18181:20:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18175:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18210:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"18220:4:24","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"18214:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18233:71:24","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18300:2:24"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"18260:39:24"},"nodeType":"YulFunctionCall","src":"18260:43:24"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18244:15:24"},"nodeType":"YulFunctionCall","src":"18244:60:24"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"18237:3:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18313:16:24","value":{"name":"dst","nodeType":"YulIdentifier","src":"18326:3:24"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"18317:5:24","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18345:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"18350:2:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18338:6:24"},"nodeType":"YulFunctionCall","src":"18338:15:24"},"nodeType":"YulExpressionStatement","src":"18338:15:24"},{"nodeType":"YulAssignment","src":"18362:19:24","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18373:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"18378:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18369:3:24"},"nodeType":"YulFunctionCall","src":"18369:12:24"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"18362:3:24"}]},{"nodeType":"YulVariableDeclaration","src":"18390:46:24","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18412:6:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18424:1:24","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"18427:2:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18420:3:24"},"nodeType":"YulFunctionCall","src":"18420:10:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18408:3:24"},"nodeType":"YulFunctionCall","src":"18408:23:24"},{"name":"_2","nodeType":"YulIdentifier","src":"18433:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18404:3:24"},"nodeType":"YulFunctionCall","src":"18404:32:24"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"18394:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"18464:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18473:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18476:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18466:6:24"},"nodeType":"YulFunctionCall","src":"18466:12:24"},"nodeType":"YulExpressionStatement","src":"18466:12:24"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"18451:6:24"},{"name":"end","nodeType":"YulIdentifier","src":"18459:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18448:2:24"},"nodeType":"YulFunctionCall","src":"18448:15:24"},"nodeType":"YulIf","src":"18445:35:24"},{"nodeType":"YulVariableDeclaration","src":"18489:26:24","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18504:6:24"},{"name":"_2","nodeType":"YulIdentifier","src":"18512:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18500:3:24"},"nodeType":"YulFunctionCall","src":"18500:15:24"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"18493:3:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"18580:313:24","statements":[{"nodeType":"YulVariableDeclaration","src":"18594:36:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18626:3:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18613:12:24"},"nodeType":"YulFunctionCall","src":"18613:17:24"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"18598:11:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"18694:74:24","statements":[{"nodeType":"YulVariableDeclaration","src":"18712:11:24","value":{"kind":"number","nodeType":"YulLiteral","src":"18722:1:24","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"18716:2:24","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"18747:2:24"},{"name":"_3","nodeType":"YulIdentifier","src":"18751:2:24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18740:6:24"},"nodeType":"YulFunctionCall","src":"18740:14:24"},"nodeType":"YulExpressionStatement","src":"18740:14:24"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"18649:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"18662:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18646:2:24"},"nodeType":"YulFunctionCall","src":"18646:35:24"},"nodeType":"YulIf","src":"18643:125:24"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18788:3:24"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18819:6:24"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"18827:11:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18815:3:24"},"nodeType":"YulFunctionCall","src":"18815:24:24"},{"name":"_2","nodeType":"YulIdentifier","src":"18841:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18811:3:24"},"nodeType":"YulFunctionCall","src":"18811:33:24"},{"name":"end","nodeType":"YulIdentifier","src":"18846:3:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"18793:17:24"},"nodeType":"YulFunctionCall","src":"18793:57:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18781:6:24"},"nodeType":"YulFunctionCall","src":"18781:70:24"},"nodeType":"YulExpressionStatement","src":"18781:70:24"},{"nodeType":"YulAssignment","src":"18864:19:24","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18875:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"18880:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18871:3:24"},"nodeType":"YulFunctionCall","src":"18871:12:24"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"18864:3:24"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18535:3:24"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"18540:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18532:2:24"},"nodeType":"YulFunctionCall","src":"18532:15:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18548:23:24","statements":[{"nodeType":"YulAssignment","src":"18550:19:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18561:3:24"},{"name":"_2","nodeType":"YulIdentifier","src":"18566:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18557:3:24"},"nodeType":"YulFunctionCall","src":"18557:12:24"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"18550:3:24"}]}]},"pre":{"nodeType":"YulBlock","src":"18528:3:24","statements":[]},"src":"18524:369:24"},{"nodeType":"YulAssignment","src":"18902:14:24","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"18911:5:24"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18902:5:24"}]}]},"name":"abi_decode_array_string_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18071:6:24","type":""},{"name":"end","nodeType":"YulTypedName","src":"18079:3:24","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18087:5:24","type":""}],"src":"18034:888:24"},{"body":{"nodeType":"YulBlock","src":"19194:913:24","statements":[{"body":{"nodeType":"YulBlock","src":"19241:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19250:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19253:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19243:6:24"},"nodeType":"YulFunctionCall","src":"19243:12:24"},"nodeType":"YulExpressionStatement","src":"19243:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19215:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"19224:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19211:3:24"},"nodeType":"YulFunctionCall","src":"19211:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"19236:3:24","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19207:3:24"},"nodeType":"YulFunctionCall","src":"19207:33:24"},"nodeType":"YulIf","src":"19204:53:24"},{"nodeType":"YulAssignment","src":"19266:33:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19289:9:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19276:12:24"},"nodeType":"YulFunctionCall","src":"19276:23:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19266:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"19308:46:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19339:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19350:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19335:3:24"},"nodeType":"YulFunctionCall","src":"19335:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19322:12:24"},"nodeType":"YulFunctionCall","src":"19322:32:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19312:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19363:28:24","value":{"kind":"number","nodeType":"YulLiteral","src":"19373:18:24","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19367:2:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"19418:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19427:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19430:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19420:6:24"},"nodeType":"YulFunctionCall","src":"19420:12:24"},"nodeType":"YulExpressionStatement","src":"19420:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19406:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"19414:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19403:2:24"},"nodeType":"YulFunctionCall","src":"19403:14:24"},"nodeType":"YulIf","src":"19400:34:24"},{"nodeType":"YulAssignment","src":"19443:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19475:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"19486:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19471:3:24"},"nodeType":"YulFunctionCall","src":"19471:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19495:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"19453:17:24"},"nodeType":"YulFunctionCall","src":"19453:50:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19443:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"19512:45:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19542:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19553:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19538:3:24"},"nodeType":"YulFunctionCall","src":"19538:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19525:12:24"},"nodeType":"YulFunctionCall","src":"19525:32:24"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"19516:5:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"19590:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19599:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19602:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19592:6:24"},"nodeType":"YulFunctionCall","src":"19592:12:24"},"nodeType":"YulExpressionStatement","src":"19592:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19579:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"19586:1:24","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19576:2:24"},"nodeType":"YulFunctionCall","src":"19576:12:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19569:6:24"},"nodeType":"YulFunctionCall","src":"19569:20:24"},"nodeType":"YulIf","src":"19566:40:24"},{"nodeType":"YulAssignment","src":"19615:15:24","value":{"name":"value","nodeType":"YulIdentifier","src":"19625:5:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19615:6:24"}]},{"nodeType":"YulAssignment","src":"19639:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19666:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19677:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19662:3:24"},"nodeType":"YulFunctionCall","src":"19662:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19649:12:24"},"nodeType":"YulFunctionCall","src":"19649:32:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19639:6:24"}]},{"nodeType":"YulAssignment","src":"19690:43:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19717:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19728:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19713:3:24"},"nodeType":"YulFunctionCall","src":"19713:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19700:12:24"},"nodeType":"YulFunctionCall","src":"19700:33:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"19690:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"19742:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19775:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19786:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19771:3:24"},"nodeType":"YulFunctionCall","src":"19771:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19758:12:24"},"nodeType":"YulFunctionCall","src":"19758:33:24"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"19746:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"19820:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19829:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19832:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19822:6:24"},"nodeType":"YulFunctionCall","src":"19822:12:24"},"nodeType":"YulExpressionStatement","src":"19822:12:24"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"19806:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"19816:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19803:2:24"},"nodeType":"YulFunctionCall","src":"19803:16:24"},"nodeType":"YulIf","src":"19800:36:24"},{"nodeType":"YulAssignment","src":"19845:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19887:9:24"},{"name":"offset_1","nodeType":"YulIdentifier","src":"19898:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19883:3:24"},"nodeType":"YulFunctionCall","src":"19883:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19909:7:24"}],"functionName":{"name":"abi_decode_array_string_dyn","nodeType":"YulIdentifier","src":"19855:27:24"},"nodeType":"YulFunctionCall","src":"19855:62:24"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"19845:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"19926:49:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19959:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"19970:3:24","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19955:3:24"},"nodeType":"YulFunctionCall","src":"19955:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19942:12:24"},"nodeType":"YulFunctionCall","src":"19942:33:24"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"19930:8:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"20004:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20013:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20016:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20006:6:24"},"nodeType":"YulFunctionCall","src":"20006:12:24"},"nodeType":"YulExpressionStatement","src":"20006:12:24"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"19990:8:24"},{"name":"_1","nodeType":"YulIdentifier","src":"20000:2:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19987:2:24"},"nodeType":"YulFunctionCall","src":"19987:16:24"},"nodeType":"YulIf","src":"19984:36:24"},{"nodeType":"YulAssignment","src":"20029:72:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20071:9:24"},{"name":"offset_2","nodeType":"YulIdentifier","src":"20082:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20067:3:24"},"nodeType":"YulFunctionCall","src":"20067:24:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20093:7:24"}],"functionName":{"name":"abi_decode_array_string_dyn","nodeType":"YulIdentifier","src":"20039:27:24"},"nodeType":"YulFunctionCall","src":"20039:62:24"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"20029:6:24"}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_enum$_TicketTier_$8435t_uint256t_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19112:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19123:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19135:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19143:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19151:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19159:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19167:6:24","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19175:6:24","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19183:6:24","type":""}],"src":"18927:1180:24"},{"body":{"nodeType":"YulBlock","src":"20259:460:24","statements":[{"body":{"nodeType":"YulBlock","src":"20306:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20315:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20318:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20308:6:24"},"nodeType":"YulFunctionCall","src":"20308:12:24"},"nodeType":"YulExpressionStatement","src":"20308:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20280:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"20289:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20276:3:24"},"nodeType":"YulFunctionCall","src":"20276:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"20301:3:24","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20272:3:24"},"nodeType":"YulFunctionCall","src":"20272:33:24"},"nodeType":"YulIf","src":"20269:53:24"},{"nodeType":"YulAssignment","src":"20331:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20360:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"20341:18:24"},"nodeType":"YulFunctionCall","src":"20341:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20331:6:24"}]},{"nodeType":"YulAssignment","src":"20379:48:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20412:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20423:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20408:3:24"},"nodeType":"YulFunctionCall","src":"20408:18:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"20389:18:24"},"nodeType":"YulFunctionCall","src":"20389:38:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20379:6:24"}]},{"nodeType":"YulAssignment","src":"20436:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20463:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20474:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20459:3:24"},"nodeType":"YulFunctionCall","src":"20459:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20446:12:24"},"nodeType":"YulFunctionCall","src":"20446:32:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20436:6:24"}]},{"nodeType":"YulAssignment","src":"20487:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20514:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20525:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20510:3:24"},"nodeType":"YulFunctionCall","src":"20510:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20497:12:24"},"nodeType":"YulFunctionCall","src":"20497:32:24"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20487:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"20538:47:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20569:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"20580:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20565:3:24"},"nodeType":"YulFunctionCall","src":"20565:19:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20552:12:24"},"nodeType":"YulFunctionCall","src":"20552:33:24"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20542:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"20628:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20637:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20640:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20630:6:24"},"nodeType":"YulFunctionCall","src":"20630:12:24"},"nodeType":"YulExpressionStatement","src":"20630:12:24"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20600:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"20608:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20597:2:24"},"nodeType":"YulFunctionCall","src":"20597:30:24"},"nodeType":"YulIf","src":"20594:50:24"},{"nodeType":"YulAssignment","src":"20653:60:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20685:9:24"},{"name":"offset","nodeType":"YulIdentifier","src":"20696:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20681:3:24"},"nodeType":"YulFunctionCall","src":"20681:22:24"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20705:7:24"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"20663:17:24"},"nodeType":"YulFunctionCall","src":"20663:50:24"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"20653:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20193:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20204:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20216:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20224:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20232:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20240:6:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20248:6:24","type":""}],"src":"20112:607:24"},{"body":{"nodeType":"YulBlock","src":"20794:116:24","statements":[{"body":{"nodeType":"YulBlock","src":"20840:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20849:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20852:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20842:6:24"},"nodeType":"YulFunctionCall","src":"20842:12:24"},"nodeType":"YulExpressionStatement","src":"20842:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20815:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"20824:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20811:3:24"},"nodeType":"YulFunctionCall","src":"20811:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"20836:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20807:3:24"},"nodeType":"YulFunctionCall","src":"20807:32:24"},"nodeType":"YulIf","src":"20804:52:24"},{"nodeType":"YulAssignment","src":"20865:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20894:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"20875:18:24"},"nodeType":"YulFunctionCall","src":"20875:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20865:6:24"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20760:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20771:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20783:6:24","type":""}],"src":"20724:186:24"},{"body":{"nodeType":"YulBlock","src":"21019:218:24","statements":[{"body":{"nodeType":"YulBlock","src":"21065:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21074:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21077:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21067:6:24"},"nodeType":"YulFunctionCall","src":"21067:12:24"},"nodeType":"YulExpressionStatement","src":"21067:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21040:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"21049:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21036:3:24"},"nodeType":"YulFunctionCall","src":"21036:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"21061:2:24","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21032:3:24"},"nodeType":"YulFunctionCall","src":"21032:32:24"},"nodeType":"YulIf","src":"21029:52:24"},{"nodeType":"YulAssignment","src":"21090:39:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21119:9:24"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"21100:18:24"},"nodeType":"YulFunctionCall","src":"21100:29:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21090:6:24"}]},{"nodeType":"YulAssignment","src":"21138:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21165:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21176:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21161:3:24"},"nodeType":"YulFunctionCall","src":"21161:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21148:12:24"},"nodeType":"YulFunctionCall","src":"21148:32:24"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21138:6:24"}]},{"nodeType":"YulAssignment","src":"21189:42:24","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21216:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"21227:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21212:3:24"},"nodeType":"YulFunctionCall","src":"21212:18:24"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21199:12:24"},"nodeType":"YulFunctionCall","src":"21199:32:24"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21189:6:24"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20969:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20980:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20992:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21000:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21008:6:24","type":""}],"src":"20915:322:24"},{"body":{"nodeType":"YulBlock","src":"21302:556:24","statements":[{"nodeType":"YulVariableDeclaration","src":"21312:26:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21332:5:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21326:5:24"},"nodeType":"YulFunctionCall","src":"21326:12:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21316:6:24","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21354:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"21359:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21347:6:24"},"nodeType":"YulFunctionCall","src":"21347:19:24"},"nodeType":"YulExpressionStatement","src":"21347:19:24"},{"nodeType":"YulVariableDeclaration","src":"21375:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"21385:4:24","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21379:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21398:31:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21421:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"21426:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21417:3:24"},"nodeType":"YulFunctionCall","src":"21417:12:24"},"variables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21402:11:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21438:24:24","value":{"name":"updated_pos","nodeType":"YulIdentifier","src":"21451:11:24"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"21442:5:24","type":""}]},{"nodeType":"YulAssignment","src":"21471:18:24","value":{"name":"updated_pos","nodeType":"YulIdentifier","src":"21478:11:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21471:3:24"}]},{"nodeType":"YulVariableDeclaration","src":"21498:38:24","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"21514:5:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21525:1:24","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"21528:6:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21521:3:24"},"nodeType":"YulFunctionCall","src":"21521:14:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21510:3:24"},"nodeType":"YulFunctionCall","src":"21510:26:24"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"21502:4:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21545:28:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21563:5:24"},{"name":"_1","nodeType":"YulIdentifier","src":"21570:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21559:3:24"},"nodeType":"YulFunctionCall","src":"21559:14:24"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"21549:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21582:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"21591:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21586:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"21650:182:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21671:3:24"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21680:4:24"},{"name":"pos_1","nodeType":"YulIdentifier","src":"21686:5:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21676:3:24"},"nodeType":"YulFunctionCall","src":"21676:16:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21664:6:24"},"nodeType":"YulFunctionCall","src":"21664:29:24"},"nodeType":"YulExpressionStatement","src":"21664:29:24"},{"nodeType":"YulAssignment","src":"21706:46:24","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21738:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21732:5:24"},"nodeType":"YulFunctionCall","src":"21732:13:24"},{"name":"tail","nodeType":"YulIdentifier","src":"21747:4:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21714:17:24"},"nodeType":"YulFunctionCall","src":"21714:38:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21706:4:24"}]},{"nodeType":"YulAssignment","src":"21765:25:24","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21779:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"21787:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21775:3:24"},"nodeType":"YulFunctionCall","src":"21775:15:24"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21765:6:24"}]},{"nodeType":"YulAssignment","src":"21803:19:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21814:3:24"},{"name":"_1","nodeType":"YulIdentifier","src":"21819:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21810:3:24"},"nodeType":"YulFunctionCall","src":"21810:12:24"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21803:3:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21612:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"21615:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21609:2:24"},"nodeType":"YulFunctionCall","src":"21609:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21623:18:24","statements":[{"nodeType":"YulAssignment","src":"21625:14:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21634:1:24"},{"kind":"number","nodeType":"YulLiteral","src":"21637:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21630:3:24"},"nodeType":"YulFunctionCall","src":"21630:9:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21625:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"21605:3:24","statements":[]},"src":"21601:231:24"},{"nodeType":"YulAssignment","src":"21841:11:24","value":{"name":"tail","nodeType":"YulIdentifier","src":"21848:4:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21841:3:24"}]}]},"name":"abi_encode_array_string_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21279:5:24","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21286:3:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21294:3:24","type":""}],"src":"21242:616:24"},{"body":{"nodeType":"YulBlock","src":"22020:808:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22037:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22048:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22030:6:24"},"nodeType":"YulFunctionCall","src":"22030:21:24"},"nodeType":"YulExpressionStatement","src":"22030:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22093:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22087:5:24"},"nodeType":"YulFunctionCall","src":"22087:13:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22106:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22117:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22102:3:24"},"nodeType":"YulFunctionCall","src":"22102:18:24"}],"functionName":{"name":"abi_encode_enum_TicketTier","nodeType":"YulIdentifier","src":"22060:26:24"},"nodeType":"YulFunctionCall","src":"22060:61:24"},"nodeType":"YulExpressionStatement","src":"22060:61:24"},{"nodeType":"YulVariableDeclaration","src":"22130:42:24","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22160:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22168:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22156:3:24"},"nodeType":"YulFunctionCall","src":"22156:15:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22150:5:24"},"nodeType":"YulFunctionCall","src":"22150:22:24"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22134:12:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22192:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22203:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22188:3:24"},"nodeType":"YulFunctionCall","src":"22188:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"22208:4:24","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22181:6:24"},"nodeType":"YulFunctionCall","src":"22181:32:24"},"nodeType":"YulExpressionStatement","src":"22181:32:24"},{"nodeType":"YulVariableDeclaration","src":"22222:66:24","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22254:12:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22272:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22283:3:24","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22268:3:24"},"nodeType":"YulFunctionCall","src":"22268:19:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"22236:17:24"},"nodeType":"YulFunctionCall","src":"22236:52:24"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"22226:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22308:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22319:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22304:3:24"},"nodeType":"YulFunctionCall","src":"22304:18:24"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22334:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22342:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22330:3:24"},"nodeType":"YulFunctionCall","src":"22330:15:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22324:5:24"},"nodeType":"YulFunctionCall","src":"22324:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22297:6:24"},"nodeType":"YulFunctionCall","src":"22297:50:24"},"nodeType":"YulExpressionStatement","src":"22297:50:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22367:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22378:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22363:3:24"},"nodeType":"YulFunctionCall","src":"22363:19:24"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22394:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22402:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22390:3:24"},"nodeType":"YulFunctionCall","src":"22390:15:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22384:5:24"},"nodeType":"YulFunctionCall","src":"22384:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22356:6:24"},"nodeType":"YulFunctionCall","src":"22356:51:24"},"nodeType":"YulExpressionStatement","src":"22356:51:24"},{"nodeType":"YulVariableDeclaration","src":"22416:45:24","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22448:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22456:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22444:3:24"},"nodeType":"YulFunctionCall","src":"22444:16:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22438:5:24"},"nodeType":"YulFunctionCall","src":"22438:23:24"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"22420:14:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22470:17:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22484:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22480:3:24"},"nodeType":"YulFunctionCall","src":"22480:7:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22474:2:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22507:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22518:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22503:3:24"},"nodeType":"YulFunctionCall","src":"22503:19:24"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"22532:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"22540:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22528:3:24"},"nodeType":"YulFunctionCall","src":"22528:22:24"},{"name":"_1","nodeType":"YulIdentifier","src":"22552:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22524:3:24"},"nodeType":"YulFunctionCall","src":"22524:31:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22496:6:24"},"nodeType":"YulFunctionCall","src":"22496:60:24"},"nodeType":"YulExpressionStatement","src":"22496:60:24"},{"nodeType":"YulVariableDeclaration","src":"22565:65:24","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"22607:14:24"},{"name":"tail_1","nodeType":"YulIdentifier","src":"22623:6:24"}],"functionName":{"name":"abi_encode_array_string_dyn","nodeType":"YulIdentifier","src":"22579:27:24"},"nodeType":"YulFunctionCall","src":"22579:51:24"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"22569:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22639:45:24","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22671:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"22679:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22667:3:24"},"nodeType":"YulFunctionCall","src":"22667:16:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22661:5:24"},"nodeType":"YulFunctionCall","src":"22661:23:24"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"22643:14:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22704:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"22715:4:24","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22700:3:24"},"nodeType":"YulFunctionCall","src":"22700:20:24"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"22730:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"22738:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22726:3:24"},"nodeType":"YulFunctionCall","src":"22726:22:24"},{"name":"_1","nodeType":"YulIdentifier","src":"22750:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22722:3:24"},"nodeType":"YulFunctionCall","src":"22722:31:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22693:6:24"},"nodeType":"YulFunctionCall","src":"22693:61:24"},"nodeType":"YulExpressionStatement","src":"22693:61:24"},{"nodeType":"YulAssignment","src":"22763:59:24","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"22799:14:24"},{"name":"tail_2","nodeType":"YulIdentifier","src":"22815:6:24"}],"functionName":{"name":"abi_encode_array_string_dyn","nodeType":"YulIdentifier","src":"22771:27:24"},"nodeType":"YulFunctionCall","src":"22771:51:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22763:4:24"}]}]},"name":"abi_encode_tuple_t_struct$_TierConfig_$8470_memory_ptr__to_t_struct$_TierConfig_$8470_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21989:9:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22000:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22011:4:24","type":""}],"src":"21863:965:24"},{"body":{"nodeType":"YulBlock","src":"22888:325:24","statements":[{"nodeType":"YulAssignment","src":"22898:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22912:1:24","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"22915:4:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22908:3:24"},"nodeType":"YulFunctionCall","src":"22908:12:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22898:6:24"}]},{"nodeType":"YulVariableDeclaration","src":"22929:38:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22959:4:24"},{"kind":"number","nodeType":"YulLiteral","src":"22965:1:24","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22955:3:24"},"nodeType":"YulFunctionCall","src":"22955:12:24"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"22933:18:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"23006:31:24","statements":[{"nodeType":"YulAssignment","src":"23008:27:24","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23022:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"23030:4:24","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23018:3:24"},"nodeType":"YulFunctionCall","src":"23018:17:24"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23008:6:24"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22986:18:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22979:6:24"},"nodeType":"YulFunctionCall","src":"22979:26:24"},"nodeType":"YulIf","src":"22976:61:24"},{"body":{"nodeType":"YulBlock","src":"23096:111:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23117:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23124:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23129:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23120:3:24"},"nodeType":"YulFunctionCall","src":"23120:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23110:6:24"},"nodeType":"YulFunctionCall","src":"23110:31:24"},"nodeType":"YulExpressionStatement","src":"23110:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23161:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23164:4:24","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23154:6:24"},"nodeType":"YulFunctionCall","src":"23154:15:24"},"nodeType":"YulExpressionStatement","src":"23154:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23189:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23192:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23182:6:24"},"nodeType":"YulFunctionCall","src":"23182:15:24"},"nodeType":"YulExpressionStatement","src":"23182:15:24"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23052:18:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23075:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"23083:2:24","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23072:2:24"},"nodeType":"YulFunctionCall","src":"23072:14:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23049:2:24"},"nodeType":"YulFunctionCall","src":"23049:38:24"},"nodeType":"YulIf","src":"23046:161:24"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22868:4:24","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22877:6:24","type":""}],"src":"22833:380:24"},{"body":{"nodeType":"YulBlock","src":"23250:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23267:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23274:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23279:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23270:3:24"},"nodeType":"YulFunctionCall","src":"23270:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23260:6:24"},"nodeType":"YulFunctionCall","src":"23260:31:24"},"nodeType":"YulExpressionStatement","src":"23260:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23307:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23310:4:24","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23300:6:24"},"nodeType":"YulFunctionCall","src":"23300:15:24"},"nodeType":"YulExpressionStatement","src":"23300:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23331:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23334:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23324:6:24"},"nodeType":"YulFunctionCall","src":"23324:15:24"},"nodeType":"YulExpressionStatement","src":"23324:15:24"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"23218:127:24"},{"body":{"nodeType":"YulBlock","src":"23382:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23399:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23406:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23411:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23402:3:24"},"nodeType":"YulFunctionCall","src":"23402:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23392:6:24"},"nodeType":"YulFunctionCall","src":"23392:31:24"},"nodeType":"YulExpressionStatement","src":"23392:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23439:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23442:4:24","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23432:6:24"},"nodeType":"YulFunctionCall","src":"23432:15:24"},"nodeType":"YulExpressionStatement","src":"23432:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23463:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23466:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23456:6:24"},"nodeType":"YulFunctionCall","src":"23456:15:24"},"nodeType":"YulExpressionStatement","src":"23456:15:24"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23350:127:24"},{"body":{"nodeType":"YulBlock","src":"23528:171:24","statements":[{"body":{"nodeType":"YulBlock","src":"23559:111:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23580:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23587:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"23592:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23583:3:24"},"nodeType":"YulFunctionCall","src":"23583:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23573:6:24"},"nodeType":"YulFunctionCall","src":"23573:31:24"},"nodeType":"YulExpressionStatement","src":"23573:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23624:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23627:4:24","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23617:6:24"},"nodeType":"YulFunctionCall","src":"23617:15:24"},"nodeType":"YulExpressionStatement","src":"23617:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23652:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23655:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23645:6:24"},"nodeType":"YulFunctionCall","src":"23645:15:24"},"nodeType":"YulExpressionStatement","src":"23645:15:24"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23548:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23541:6:24"},"nodeType":"YulFunctionCall","src":"23541:9:24"},"nodeType":"YulIf","src":"23538:132:24"},{"nodeType":"YulAssignment","src":"23679:14:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23688:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"23691:1:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23684:3:24"},"nodeType":"YulFunctionCall","src":"23684:9:24"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"23679:1:24"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23513:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"23516:1:24","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23522:1:24","type":""}],"src":"23482:217:24"},{"body":{"nodeType":"YulBlock","src":"23878:170:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23895:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"23906:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23888:6:24"},"nodeType":"YulFunctionCall","src":"23888:21:24"},"nodeType":"YulExpressionStatement","src":"23888:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23929:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"23940:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23925:3:24"},"nodeType":"YulFunctionCall","src":"23925:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"23945:2:24","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23918:6:24"},"nodeType":"YulFunctionCall","src":"23918:30:24"},"nodeType":"YulExpressionStatement","src":"23918:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23968:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"23979:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23964:3:24"},"nodeType":"YulFunctionCall","src":"23964:18:24"},{"hexValue":"4576656e7420646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"23984:22:24","type":"","value":"Event does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23957:6:24"},"nodeType":"YulFunctionCall","src":"23957:50:24"},"nodeType":"YulExpressionStatement","src":"23957:50:24"},{"nodeType":"YulAssignment","src":"24016:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24028:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"24039:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24024:3:24"},"nodeType":"YulFunctionCall","src":"24024:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24016:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23855:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23869:4:24","type":""}],"src":"23704:344:24"},{"body":{"nodeType":"YulBlock","src":"24109:65:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24126:1:24","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"24129:3:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24119:6:24"},"nodeType":"YulFunctionCall","src":"24119:14:24"},"nodeType":"YulExpressionStatement","src":"24119:14:24"},{"nodeType":"YulAssignment","src":"24142:26:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24160:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24163:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"24150:9:24"},"nodeType":"YulFunctionCall","src":"24150:18:24"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"24142:4:24"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"24092:3:24","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"24100:4:24","type":""}],"src":"24053:121:24"},{"body":{"nodeType":"YulBlock","src":"24363:836:24","statements":[{"nodeType":"YulVariableDeclaration","src":"24373:12:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24384:1:24","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"24377:3:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24394:30:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24417:6:24"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24411:5:24"},"nodeType":"YulFunctionCall","src":"24411:13:24"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"24398:9:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24433:50:24","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"24473:9:24"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"24447:25:24"},"nodeType":"YulFunctionCall","src":"24447:36:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24437:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24492:11:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24502:1:24","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24496:2:24","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"24553:126:24","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24574:3:24"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"24583:9:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24598:3:24","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24594:3:24"},"nodeType":"YulFunctionCall","src":"24594:8:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24579:3:24"},"nodeType":"YulFunctionCall","src":"24579:24:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24567:6:24"},"nodeType":"YulFunctionCall","src":"24567:37:24"},"nodeType":"YulExpressionStatement","src":"24567:37:24"},{"nodeType":"YulAssignment","src":"24617:52:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24628:3:24"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24637:6:24"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24659:6:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24652:6:24"},"nodeType":"YulFunctionCall","src":"24652:14:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24645:6:24"},"nodeType":"YulFunctionCall","src":"24645:22:24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24633:3:24"},"nodeType":"YulFunctionCall","src":"24633:35:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24624:3:24"},"nodeType":"YulFunctionCall","src":"24624:45:24"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24617:3:24"}]}]},"nodeType":"YulCase","src":"24546:133:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24551:1:24","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"24695:349:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24716:1:24","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"24719:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24709:6:24"},"nodeType":"YulFunctionCall","src":"24709:17:24"},"nodeType":"YulExpressionStatement","src":"24709:17:24"},{"nodeType":"YulVariableDeclaration","src":"24739:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24749:4:24","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"24743:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24766:31:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24791:1:24","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"24794:2:24"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"24781:9:24"},"nodeType":"YulFunctionCall","src":"24781:16:24"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"24770:7:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24810:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24819:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"24814:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"24887:111:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24916:3:24"},{"name":"i","nodeType":"YulIdentifier","src":"24921:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24912:3:24"},"nodeType":"YulFunctionCall","src":"24912:11:24"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24931:7:24"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24925:5:24"},"nodeType":"YulFunctionCall","src":"24925:14:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24905:6:24"},"nodeType":"YulFunctionCall","src":"24905:35:24"},"nodeType":"YulExpressionStatement","src":"24905:35:24"},{"nodeType":"YulAssignment","src":"24957:27:24","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24972:7:24"},{"name":"_1","nodeType":"YulIdentifier","src":"24981:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24968:3:24"},"nodeType":"YulFunctionCall","src":"24968:16:24"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"24957:7:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24844:1:24"},{"name":"length","nodeType":"YulIdentifier","src":"24847:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24841:2:24"},"nodeType":"YulFunctionCall","src":"24841:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"24855:19:24","statements":[{"nodeType":"YulAssignment","src":"24857:15:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24866:1:24"},{"name":"_2","nodeType":"YulIdentifier","src":"24869:2:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24862:3:24"},"nodeType":"YulFunctionCall","src":"24862:10:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"24857:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"24837:3:24","statements":[]},"src":"24833:165:24"},{"nodeType":"YulAssignment","src":"25011:23:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25022:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"25027:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25018:3:24"},"nodeType":"YulFunctionCall","src":"25018:16:24"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25011:3:24"}]}]},"nodeType":"YulCase","src":"24688:356:24","value":{"kind":"number","nodeType":"YulLiteral","src":"24693:1:24","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"24523:9:24"},{"name":"_1","nodeType":"YulIdentifier","src":"24534:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24519:3:24"},"nodeType":"YulFunctionCall","src":"24519:18:24"},"nodeType":"YulSwitch","src":"24512:532:24"},{"nodeType":"YulVariableDeclaration","src":"25053:29:24","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25075:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25069:5:24"},"nodeType":"YulFunctionCall","src":"25069:13:24"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"25057:8:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25130:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"25138:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25126:3:24"},"nodeType":"YulFunctionCall","src":"25126:17:24"},{"name":"ret","nodeType":"YulIdentifier","src":"25145:3:24"},{"name":"length_1","nodeType":"YulIdentifier","src":"25150:8:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"25091:34:24"},"nodeType":"YulFunctionCall","src":"25091:68:24"},"nodeType":"YulExpressionStatement","src":"25091:68:24"},{"nodeType":"YulAssignment","src":"25168:25:24","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"25179:3:24"},{"name":"length_1","nodeType":"YulIdentifier","src":"25184:8:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25175:3:24"},"nodeType":"YulFunctionCall","src":"25175:18:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25168:3:24"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24331:3:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24336:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24344:6:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24355:3:24","type":""}],"src":"24179:1020:24"},{"body":{"nodeType":"YulBlock","src":"25343:150:24","statements":[{"nodeType":"YulVariableDeclaration","src":"25353:27:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25373:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25367:5:24"},"nodeType":"YulFunctionCall","src":"25367:13:24"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25357:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25428:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"25436:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25424:3:24"},"nodeType":"YulFunctionCall","src":"25424:17:24"},{"name":"pos","nodeType":"YulIdentifier","src":"25443:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"25448:6:24"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"25389:34:24"},"nodeType":"YulFunctionCall","src":"25389:66:24"},"nodeType":"YulExpressionStatement","src":"25389:66:24"},{"nodeType":"YulAssignment","src":"25464:23:24","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25475:3:24"},{"name":"length","nodeType":"YulIdentifier","src":"25480:6:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25471:3:24"},"nodeType":"YulFunctionCall","src":"25471:16:24"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25464:3:24"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25319:3:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25324:6:24","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25335:3:24","type":""}],"src":"25204:289:24"},{"body":{"nodeType":"YulBlock","src":"25672:166:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25689:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25700:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25682:6:24"},"nodeType":"YulFunctionCall","src":"25682:21:24"},"nodeType":"YulExpressionStatement","src":"25682:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25723:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25734:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25719:3:24"},"nodeType":"YulFunctionCall","src":"25719:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"25739:2:24","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25712:6:24"},"nodeType":"YulFunctionCall","src":"25712:30:24"},"nodeType":"YulExpressionStatement","src":"25712:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25762:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25773:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25758:3:24"},"nodeType":"YulFunctionCall","src":"25758:18:24"},{"hexValue":"4e6f20736561742061737369676e6564","kind":"string","nodeType":"YulLiteral","src":"25778:18:24","type":"","value":"No seat assigned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25751:6:24"},"nodeType":"YulFunctionCall","src":"25751:46:24"},"nodeType":"YulExpressionStatement","src":"25751:46:24"},{"nodeType":"YulAssignment","src":"25806:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25818:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"25829:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25814:3:24"},"nodeType":"YulFunctionCall","src":"25814:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25806:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e20c9da962f777b0551d44751bf068d7e59b2701da404259aa62c226527bbee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25649:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25663:4:24","type":""}],"src":"25498:340:24"},{"body":{"nodeType":"YulBlock","src":"25895:116:24","statements":[{"nodeType":"YulAssignment","src":"25905:20:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25920:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"25923:1:24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25916:3:24"},"nodeType":"YulFunctionCall","src":"25916:9:24"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"25905:7:24"}]},{"body":{"nodeType":"YulBlock","src":"25983:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25985:16:24"},"nodeType":"YulFunctionCall","src":"25985:18:24"},"nodeType":"YulExpressionStatement","src":"25985:18:24"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25954:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25947:6:24"},"nodeType":"YulFunctionCall","src":"25947:9:24"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25961:1:24"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"25968:7:24"},{"name":"x","nodeType":"YulIdentifier","src":"25977:1:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25964:3:24"},"nodeType":"YulFunctionCall","src":"25964:15:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25958:2:24"},"nodeType":"YulFunctionCall","src":"25958:22:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25944:2:24"},"nodeType":"YulFunctionCall","src":"25944:37:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25937:6:24"},"nodeType":"YulFunctionCall","src":"25937:45:24"},"nodeType":"YulIf","src":"25934:71:24"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25874:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"25877:1:24","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"25883:7:24","type":""}],"src":"25843:168:24"},{"body":{"nodeType":"YulBlock","src":"26145:175:24","statements":[{"nodeType":"YulAssignment","src":"26155:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26167:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26178:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26163:3:24"},"nodeType":"YulFunctionCall","src":"26163:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26155:4:24"}]},{"nodeType":"YulVariableDeclaration","src":"26190:29:24","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26208:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"26213:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26204:3:24"},"nodeType":"YulFunctionCall","src":"26204:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"26217:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26200:3:24"},"nodeType":"YulFunctionCall","src":"26200:19:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"26194:2:24","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26235:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26250:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"26258:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26246:3:24"},"nodeType":"YulFunctionCall","src":"26246:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26228:6:24"},"nodeType":"YulFunctionCall","src":"26228:34:24"},"nodeType":"YulExpressionStatement","src":"26228:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26282:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26293:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26278:3:24"},"nodeType":"YulFunctionCall","src":"26278:18:24"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26302:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"26310:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26298:3:24"},"nodeType":"YulFunctionCall","src":"26298:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26271:6:24"},"nodeType":"YulFunctionCall","src":"26271:43:24"},"nodeType":"YulExpressionStatement","src":"26271:43:24"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26106:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26117:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26125:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26136:4:24","type":""}],"src":"26016:304:24"},{"body":{"nodeType":"YulBlock","src":"26499:176:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26516:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26527:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26509:6:24"},"nodeType":"YulFunctionCall","src":"26509:21:24"},"nodeType":"YulExpressionStatement","src":"26509:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26550:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26561:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26546:3:24"},"nodeType":"YulFunctionCall","src":"26546:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"26566:2:24","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26539:6:24"},"nodeType":"YulFunctionCall","src":"26539:30:24"},"nodeType":"YulExpressionStatement","src":"26539:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26589:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26600:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26585:3:24"},"nodeType":"YulFunctionCall","src":"26585:18:24"},{"hexValue":"526f79616c74792063616e6e6f74206578636565642031303025","kind":"string","nodeType":"YulLiteral","src":"26605:28:24","type":"","value":"Royalty cannot exceed 100%"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26578:6:24"},"nodeType":"YulFunctionCall","src":"26578:56:24"},"nodeType":"YulExpressionStatement","src":"26578:56:24"},{"nodeType":"YulAssignment","src":"26643:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26655:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26666:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26651:3:24"},"nodeType":"YulFunctionCall","src":"26651:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26643:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26476:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26490:4:24","type":""}],"src":"26325:350:24"},{"body":{"nodeType":"YulBlock","src":"26807:178:24","statements":[{"nodeType":"YulAssignment","src":"26817:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26829:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26840:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26825:3:24"},"nodeType":"YulFunctionCall","src":"26825:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26817:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26859:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26874:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26890:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"26895:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26886:3:24"},"nodeType":"YulFunctionCall","src":"26886:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"26899:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26882:3:24"},"nodeType":"YulFunctionCall","src":"26882:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26870:3:24"},"nodeType":"YulFunctionCall","src":"26870:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26852:6:24"},"nodeType":"YulFunctionCall","src":"26852:51:24"},"nodeType":"YulExpressionStatement","src":"26852:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26923:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"26934:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26919:3:24"},"nodeType":"YulFunctionCall","src":"26919:18:24"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26943:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"26951:26:24","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26939:3:24"},"nodeType":"YulFunctionCall","src":"26939:39:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26912:6:24"},"nodeType":"YulFunctionCall","src":"26912:67:24"},"nodeType":"YulExpressionStatement","src":"26912:67:24"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26768:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26779:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26787:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26798:4:24","type":""}],"src":"26680:305:24"},{"body":{"nodeType":"YulBlock","src":"27164:169:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27181:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27192:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27174:6:24"},"nodeType":"YulFunctionCall","src":"27174:21:24"},"nodeType":"YulExpressionStatement","src":"27174:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27215:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27226:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27211:3:24"},"nodeType":"YulFunctionCall","src":"27211:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"27231:2:24","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27204:6:24"},"nodeType":"YulFunctionCall","src":"27204:30:24"},"nodeType":"YulExpressionStatement","src":"27204:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27254:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27265:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27250:3:24"},"nodeType":"YulFunctionCall","src":"27250:18:24"},{"hexValue":"4576656e74206973206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"27270:21:24","type":"","value":"Event is not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27243:6:24"},"nodeType":"YulFunctionCall","src":"27243:49:24"},"nodeType":"YulExpressionStatement","src":"27243:49:24"},{"nodeType":"YulAssignment","src":"27301:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27313:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27324:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27309:3:24"},"nodeType":"YulFunctionCall","src":"27309:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27301:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27141:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27155:4:24","type":""}],"src":"26990:343:24"},{"body":{"nodeType":"YulBlock","src":"27512:162:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27529:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27540:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27522:6:24"},"nodeType":"YulFunctionCall","src":"27522:21:24"},"nodeType":"YulExpressionStatement","src":"27522:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27563:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27574:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27559:3:24"},"nodeType":"YulFunctionCall","src":"27559:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"27579:2:24","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27552:6:24"},"nodeType":"YulFunctionCall","src":"27552:30:24"},"nodeType":"YulExpressionStatement","src":"27552:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27602:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27613:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27598:3:24"},"nodeType":"YulFunctionCall","src":"27598:18:24"},{"hexValue":"496e76616c69642074696572","kind":"string","nodeType":"YulLiteral","src":"27618:14:24","type":"","value":"Invalid tier"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27591:6:24"},"nodeType":"YulFunctionCall","src":"27591:42:24"},"nodeType":"YulExpressionStatement","src":"27591:42:24"},{"nodeType":"YulAssignment","src":"27642:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27654:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27665:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27650:3:24"},"nodeType":"YulFunctionCall","src":"27650:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27642:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27489:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27503:4:24","type":""}],"src":"27338:336:24"},{"body":{"nodeType":"YulBlock","src":"27853:175:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27870:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27881:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27863:6:24"},"nodeType":"YulFunctionCall","src":"27863:21:24"},"nodeType":"YulExpressionStatement","src":"27863:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27904:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27915:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27900:3:24"},"nodeType":"YulFunctionCall","src":"27900:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"27920:2:24","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27893:6:24"},"nodeType":"YulFunctionCall","src":"27893:30:24"},"nodeType":"YulExpressionStatement","src":"27893:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27943:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"27954:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27939:3:24"},"nodeType":"YulFunctionCall","src":"27939:18:24"},{"hexValue":"496e76616c696420726563697069656e742061646472657373","kind":"string","nodeType":"YulLiteral","src":"27959:27:24","type":"","value":"Invalid recipient address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27932:6:24"},"nodeType":"YulFunctionCall","src":"27932:55:24"},"nodeType":"YulExpressionStatement","src":"27932:55:24"},{"nodeType":"YulAssignment","src":"27996:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28008:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28019:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28004:3:24"},"nodeType":"YulFunctionCall","src":"28004:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27996:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27830:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27844:4:24","type":""}],"src":"27679:349:24"},{"body":{"nodeType":"YulBlock","src":"28081:77:24","statements":[{"nodeType":"YulAssignment","src":"28091:16:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28102:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"28105:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28098:3:24"},"nodeType":"YulFunctionCall","src":"28098:9:24"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28091:3:24"}]},{"body":{"nodeType":"YulBlock","src":"28130:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28132:16:24"},"nodeType":"YulFunctionCall","src":"28132:18:24"},"nodeType":"YulExpressionStatement","src":"28132:18:24"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28122:1:24"},{"name":"sum","nodeType":"YulIdentifier","src":"28125:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28119:2:24"},"nodeType":"YulFunctionCall","src":"28119:10:24"},"nodeType":"YulIf","src":"28116:36:24"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28064:1:24","type":""},{"name":"y","nodeType":"YulTypedName","src":"28067:1:24","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28073:3:24","type":""}],"src":"28033:125:24"},{"body":{"nodeType":"YulBlock","src":"28210:88:24","statements":[{"body":{"nodeType":"YulBlock","src":"28241:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28243:16:24"},"nodeType":"YulFunctionCall","src":"28243:18:24"},"nodeType":"YulExpressionStatement","src":"28243:18:24"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28226:5:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28237:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28233:3:24"},"nodeType":"YulFunctionCall","src":"28233:6:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28223:2:24"},"nodeType":"YulFunctionCall","src":"28223:17:24"},"nodeType":"YulIf","src":"28220:43:24"},{"nodeType":"YulAssignment","src":"28272:20:24","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28283:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"28290:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28279:3:24"},"nodeType":"YulFunctionCall","src":"28279:13:24"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28272:3:24"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28192:5:24","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28202:3:24","type":""}],"src":"28163:135:24"},{"body":{"nodeType":"YulBlock","src":"28477:164:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28494:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28505:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28487:6:24"},"nodeType":"YulFunctionCall","src":"28487:21:24"},"nodeType":"YulExpressionStatement","src":"28487:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28528:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28539:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28524:3:24"},"nodeType":"YulFunctionCall","src":"28524:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"28544:2:24","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28517:6:24"},"nodeType":"YulFunctionCall","src":"28517:30:24"},"nodeType":"YulExpressionStatement","src":"28517:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28567:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28578:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28563:3:24"},"nodeType":"YulFunctionCall","src":"28563:18:24"},{"hexValue":"4576656e7420736f6c64206f7574","kind":"string","nodeType":"YulLiteral","src":"28583:16:24","type":"","value":"Event sold out"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28556:6:24"},"nodeType":"YulFunctionCall","src":"28556:44:24"},"nodeType":"YulExpressionStatement","src":"28556:44:24"},{"nodeType":"YulAssignment","src":"28609:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28621:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28632:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28617:3:24"},"nodeType":"YulFunctionCall","src":"28617:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28609:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_eea54bd5ed93eb5544084db3cff6dfa8db8c4c0cbb06865979ee2d3aa8301a5f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28454:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28468:4:24","type":""}],"src":"28303:338:24"},{"body":{"nodeType":"YulBlock","src":"28727:464:24","statements":[{"body":{"nodeType":"YulBlock","src":"28760:425:24","statements":[{"nodeType":"YulVariableDeclaration","src":"28774:11:24","value":{"kind":"number","nodeType":"YulLiteral","src":"28784:1:24","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"28778:2:24","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"28805:2:24"},{"name":"array","nodeType":"YulIdentifier","src":"28809:5:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28798:6:24"},"nodeType":"YulFunctionCall","src":"28798:17:24"},"nodeType":"YulExpressionStatement","src":"28798:17:24"},{"nodeType":"YulVariableDeclaration","src":"28828:31:24","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"28850:2:24"},{"kind":"number","nodeType":"YulLiteral","src":"28854:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"28840:9:24"},"nodeType":"YulFunctionCall","src":"28840:19:24"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"28832:4:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28872:57:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28895:4:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28905:1:24","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"28912:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"28924:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28908:3:24"},"nodeType":"YulFunctionCall","src":"28908:19:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28901:3:24"},"nodeType":"YulFunctionCall","src":"28901:27:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28891:3:24"},"nodeType":"YulFunctionCall","src":"28891:38:24"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"28876:11:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"28966:23:24","statements":[{"nodeType":"YulAssignment","src":"28968:19:24","value":{"name":"data","nodeType":"YulIdentifier","src":"28983:4:24"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"28968:11:24"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"28948:10:24"},{"kind":"number","nodeType":"YulLiteral","src":"28960:4:24","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28945:2:24"},"nodeType":"YulFunctionCall","src":"28945:20:24"},"nodeType":"YulIf","src":"28942:47:24"},{"nodeType":"YulVariableDeclaration","src":"29002:41:24","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29016:4:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29026:1:24","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"29033:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"29038:2:24","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29029:3:24"},"nodeType":"YulFunctionCall","src":"29029:12:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29022:3:24"},"nodeType":"YulFunctionCall","src":"29022:20:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29012:3:24"},"nodeType":"YulFunctionCall","src":"29012:31:24"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"29006:2:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29056:24:24","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"29069:11:24"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"29060:5:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"29154:21:24","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29163:5:24"},{"name":"_1","nodeType":"YulIdentifier","src":"29170:2:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29156:6:24"},"nodeType":"YulFunctionCall","src":"29156:17:24"},"nodeType":"YulExpressionStatement","src":"29156:17:24"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29104:5:24"},{"name":"_2","nodeType":"YulIdentifier","src":"29111:2:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29101:2:24"},"nodeType":"YulFunctionCall","src":"29101:13:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29115:26:24","statements":[{"nodeType":"YulAssignment","src":"29117:22:24","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"29130:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"29137:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29126:3:24"},"nodeType":"YulFunctionCall","src":"29126:13:24"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"29117:5:24"}]}]},"pre":{"nodeType":"YulBlock","src":"29097:3:24","statements":[]},"src":"29093:82:24"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"28743:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"28748:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28740:2:24"},"nodeType":"YulFunctionCall","src":"28740:11:24"},"nodeType":"YulIf","src":"28737:448:24"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"28699:5:24","type":""},{"name":"len","nodeType":"YulTypedName","src":"28706:3:24","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"28711:10:24","type":""}],"src":"28646:545:24"},{"body":{"nodeType":"YulBlock","src":"29281:81:24","statements":[{"nodeType":"YulAssignment","src":"29291:65:24","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"29306:4:24"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29324:1:24","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"29327:3:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29320:3:24"},"nodeType":"YulFunctionCall","src":"29320:11:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29337:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29333:3:24"},"nodeType":"YulFunctionCall","src":"29333:6:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"29316:3:24"},"nodeType":"YulFunctionCall","src":"29316:24:24"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29312:3:24"},"nodeType":"YulFunctionCall","src":"29312:29:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29302:3:24"},"nodeType":"YulFunctionCall","src":"29302:40:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29348:1:24","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"29351:3:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29344:3:24"},"nodeType":"YulFunctionCall","src":"29344:11:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"29299:2:24"},"nodeType":"YulFunctionCall","src":"29299:57:24"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"29291:4:24"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"29258:4:24","type":""},{"name":"len","nodeType":"YulTypedName","src":"29264:3:24","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"29272:4:24","type":""}],"src":"29196:166:24"},{"body":{"nodeType":"YulBlock","src":"29463:1256:24","statements":[{"nodeType":"YulVariableDeclaration","src":"29473:24:24","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29493:3:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29487:5:24"},"nodeType":"YulFunctionCall","src":"29487:10:24"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"29477:6:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"29540:22:24","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"29542:16:24"},"nodeType":"YulFunctionCall","src":"29542:18:24"},"nodeType":"YulExpressionStatement","src":"29542:18:24"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29512:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"29520:18:24","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29509:2:24"},"nodeType":"YulFunctionCall","src":"29509:30:24"},"nodeType":"YulIf","src":"29506:56:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29615:4:24"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29653:4:24"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"29647:5:24"},"nodeType":"YulFunctionCall","src":"29647:11:24"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"29621:25:24"},"nodeType":"YulFunctionCall","src":"29621:38:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"29661:6:24"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"29571:43:24"},"nodeType":"YulFunctionCall","src":"29571:97:24"},"nodeType":"YulExpressionStatement","src":"29571:97:24"},{"nodeType":"YulVariableDeclaration","src":"29677:18:24","value":{"kind":"number","nodeType":"YulLiteral","src":"29694:1:24","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"29681:9:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29704:23:24","value":{"kind":"number","nodeType":"YulLiteral","src":"29723:4:24","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"29708:11:24","type":""}]},{"nodeType":"YulAssignment","src":"29736:24:24","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"29749:11:24"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"29736:9:24"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"29806:656:24","statements":[{"nodeType":"YulVariableDeclaration","src":"29820:35:24","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29839:6:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29851:2:24","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"29847:3:24"},"nodeType":"YulFunctionCall","src":"29847:7:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29835:3:24"},"nodeType":"YulFunctionCall","src":"29835:20:24"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"29824:7:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29868:49:24","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29912:4:24"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"29882:29:24"},"nodeType":"YulFunctionCall","src":"29882:35:24"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"29872:6:24","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29930:10:24","value":{"kind":"number","nodeType":"YulLiteral","src":"29939:1:24","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"29934:1:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"30017:172:24","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30042:6:24"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30060:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30065:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30056:3:24"},"nodeType":"YulFunctionCall","src":"30056:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30050:5:24"},"nodeType":"YulFunctionCall","src":"30050:26:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30035:6:24"},"nodeType":"YulFunctionCall","src":"30035:42:24"},"nodeType":"YulExpressionStatement","src":"30035:42:24"},{"nodeType":"YulAssignment","src":"30094:24:24","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30108:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"30116:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30104:3:24"},"nodeType":"YulFunctionCall","src":"30104:14:24"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30094:6:24"}]},{"nodeType":"YulAssignment","src":"30135:40:24","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30152:9:24"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"30163:11:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30148:3:24"},"nodeType":"YulFunctionCall","src":"30148:27:24"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"30135:9:24"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29964:1:24"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"29967:7:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29961:2:24"},"nodeType":"YulFunctionCall","src":"29961:14:24"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29976:28:24","statements":[{"nodeType":"YulAssignment","src":"29978:24:24","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29987:1:24"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"29990:11:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29983:3:24"},"nodeType":"YulFunctionCall","src":"29983:19:24"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"29978:1:24"}]}]},"pre":{"nodeType":"YulBlock","src":"29957:3:24","statements":[]},"src":"29953:236:24"},{"body":{"nodeType":"YulBlock","src":"30237:166:24","statements":[{"nodeType":"YulVariableDeclaration","src":"30255:43:24","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30282:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30287:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30278:3:24"},"nodeType":"YulFunctionCall","src":"30278:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30272:5:24"},"nodeType":"YulFunctionCall","src":"30272:26:24"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"30259:9:24","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"30322:6:24"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"30334:9:24"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30361:1:24","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"30364:6:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30357:3:24"},"nodeType":"YulFunctionCall","src":"30357:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"30373:3:24","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30353:3:24"},"nodeType":"YulFunctionCall","src":"30353:24:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30383:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30379:3:24"},"nodeType":"YulFunctionCall","src":"30379:6:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"30349:3:24"},"nodeType":"YulFunctionCall","src":"30349:37:24"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30345:3:24"},"nodeType":"YulFunctionCall","src":"30345:42:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30330:3:24"},"nodeType":"YulFunctionCall","src":"30330:58:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30315:6:24"},"nodeType":"YulFunctionCall","src":"30315:74:24"},"nodeType":"YulExpressionStatement","src":"30315:74:24"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"30208:7:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"30217:6:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30205:2:24"},"nodeType":"YulFunctionCall","src":"30205:19:24"},"nodeType":"YulIf","src":"30202:201:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30423:4:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30437:1:24","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"30440:6:24"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30433:3:24"},"nodeType":"YulFunctionCall","src":"30433:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"30449:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30429:3:24"},"nodeType":"YulFunctionCall","src":"30429:22:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30416:6:24"},"nodeType":"YulFunctionCall","src":"30416:36:24"},"nodeType":"YulExpressionStatement","src":"30416:36:24"}]},"nodeType":"YulCase","src":"29799:663:24","value":{"kind":"number","nodeType":"YulLiteral","src":"29804:1:24","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"30479:234:24","statements":[{"nodeType":"YulVariableDeclaration","src":"30493:14:24","value":{"kind":"number","nodeType":"YulLiteral","src":"30506:1:24","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"30497:5:24","type":""}]},{"body":{"nodeType":"YulBlock","src":"30542:67:24","statements":[{"nodeType":"YulAssignment","src":"30560:35:24","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"30579:3:24"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"30584:9:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30575:3:24"},"nodeType":"YulFunctionCall","src":"30575:19:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30569:5:24"},"nodeType":"YulFunctionCall","src":"30569:26:24"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30560:5:24"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"30523:6:24"},"nodeType":"YulIf","src":"30520:89:24"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30629:4:24"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30688:5:24"},{"name":"newLen","nodeType":"YulIdentifier","src":"30695:6:24"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"30635:52:24"},"nodeType":"YulFunctionCall","src":"30635:67:24"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30622:6:24"},"nodeType":"YulFunctionCall","src":"30622:81:24"},"nodeType":"YulExpressionStatement","src":"30622:81:24"}]},"nodeType":"YulCase","src":"30471:242:24","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29779:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"29787:2:24","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"29776:2:24"},"nodeType":"YulFunctionCall","src":"29776:14:24"},"nodeType":"YulSwitch","src":"29769:944:24"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"29448:4:24","type":""},{"name":"src","nodeType":"YulTypedName","src":"29454:3:24","type":""}],"src":"29367:1352:24"},{"body":{"nodeType":"YulBlock","src":"30756:95:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30773:1:24","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30780:3:24","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"30785:10:24","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"30776:3:24"},"nodeType":"YulFunctionCall","src":"30776:20:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30766:6:24"},"nodeType":"YulFunctionCall","src":"30766:31:24"},"nodeType":"YulExpressionStatement","src":"30766:31:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30813:1:24","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30816:4:24","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30806:6:24"},"nodeType":"YulFunctionCall","src":"30806:15:24"},"nodeType":"YulExpressionStatement","src":"30806:15:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30837:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30840:4:24","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30830:6:24"},"nodeType":"YulFunctionCall","src":"30830:15:24"},"nodeType":"YulExpressionStatement","src":"30830:15:24"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"30724:127:24"},{"body":{"nodeType":"YulBlock","src":"31030:168:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31047:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31058:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31040:6:24"},"nodeType":"YulFunctionCall","src":"31040:21:24"},"nodeType":"YulExpressionStatement","src":"31040:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31081:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31092:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31077:3:24"},"nodeType":"YulFunctionCall","src":"31077:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"31097:2:24","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31070:6:24"},"nodeType":"YulFunctionCall","src":"31070:30:24"},"nodeType":"YulExpressionStatement","src":"31070:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31120:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31131:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31116:3:24"},"nodeType":"YulFunctionCall","src":"31116:18:24"},{"hexValue":"5065726b206e6f7420617661696c61626c65","kind":"string","nodeType":"YulLiteral","src":"31136:20:24","type":"","value":"Perk not available"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31109:6:24"},"nodeType":"YulFunctionCall","src":"31109:48:24"},"nodeType":"YulExpressionStatement","src":"31109:48:24"},{"nodeType":"YulAssignment","src":"31166:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31178:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31189:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31174:3:24"},"nodeType":"YulFunctionCall","src":"31174:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31166:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_35b870a42c7282702350db66df7d437f6522a5b93bebe0a17639729c86081e43__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31007:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31021:4:24","type":""}],"src":"30856:342:24"},{"body":{"nodeType":"YulBlock","src":"31377:169:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31394:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31405:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31387:6:24"},"nodeType":"YulFunctionCall","src":"31387:21:24"},"nodeType":"YulExpressionStatement","src":"31387:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31428:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31439:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31424:3:24"},"nodeType":"YulFunctionCall","src":"31424:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"31444:2:24","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31417:6:24"},"nodeType":"YulFunctionCall","src":"31417:30:24"},"nodeType":"YulExpressionStatement","src":"31417:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31467:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31478:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31463:3:24"},"nodeType":"YulFunctionCall","src":"31463:18:24"},{"hexValue":"5065726b206c696d6974206578636565646564","kind":"string","nodeType":"YulLiteral","src":"31483:21:24","type":"","value":"Perk limit exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31456:6:24"},"nodeType":"YulFunctionCall","src":"31456:49:24"},"nodeType":"YulExpressionStatement","src":"31456:49:24"},{"nodeType":"YulAssignment","src":"31514:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31526:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31537:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31522:3:24"},"nodeType":"YulFunctionCall","src":"31522:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31514:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_bac3770b00a955a75ca30eb19187adc5a87c84fb30c146cf6e4e40500f3a0763__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31354:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31368:4:24","type":""}],"src":"31203:343:24"},{"body":{"nodeType":"YulBlock","src":"31700:142:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31717:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31728:2:24","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31710:6:24"},"nodeType":"YulFunctionCall","src":"31710:21:24"},"nodeType":"YulExpressionStatement","src":"31710:21:24"},{"nodeType":"YulAssignment","src":"31740:53:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31766:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31778:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31789:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31774:3:24"},"nodeType":"YulFunctionCall","src":"31774:18:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"31748:17:24"},"nodeType":"YulFunctionCall","src":"31748:45:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31740:4:24"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31813:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"31824:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31809:3:24"},"nodeType":"YulFunctionCall","src":"31809:18:24"},{"name":"value1","nodeType":"YulIdentifier","src":"31829:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31802:6:24"},"nodeType":"YulFunctionCall","src":"31802:34:24"},"nodeType":"YulExpressionStatement","src":"31802:34:24"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31661:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31672:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31680:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31691:4:24","type":""}],"src":"31551:291:24"},{"body":{"nodeType":"YulBlock","src":"32021:170:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32038:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32049:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32031:6:24"},"nodeType":"YulFunctionCall","src":"32031:21:24"},"nodeType":"YulExpressionStatement","src":"32031:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32072:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32083:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32068:3:24"},"nodeType":"YulFunctionCall","src":"32068:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"32088:2:24","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32061:6:24"},"nodeType":"YulFunctionCall","src":"32061:30:24"},"nodeType":"YulExpressionStatement","src":"32061:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32111:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32122:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32107:3:24"},"nodeType":"YulFunctionCall","src":"32107:18:24"},{"hexValue":"4576656e7420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"32127:22:24","type":"","value":"Event already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32100:6:24"},"nodeType":"YulFunctionCall","src":"32100:50:24"},"nodeType":"YulExpressionStatement","src":"32100:50:24"},{"nodeType":"YulAssignment","src":"32159:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32171:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32182:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32167:3:24"},"nodeType":"YulFunctionCall","src":"32167:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32159:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_94d24e8ef4feb5369bd619a1aeb605e75b1632e448d9dc25268fd6f86ecffbe7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31998:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32012:4:24","type":""}],"src":"31847:344:24"},{"body":{"nodeType":"YulBlock","src":"32370:223:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32387:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32398:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32380:6:24"},"nodeType":"YulFunctionCall","src":"32380:21:24"},"nodeType":"YulExpressionStatement","src":"32380:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32421:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32432:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32417:3:24"},"nodeType":"YulFunctionCall","src":"32417:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"32437:2:24","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32410:6:24"},"nodeType":"YulFunctionCall","src":"32410:30:24"},"nodeType":"YulExpressionStatement","src":"32410:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32460:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32471:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32456:3:24"},"nodeType":"YulFunctionCall","src":"32456:18:24"},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e20","kind":"string","nodeType":"YulLiteral","src":"32476:34:24","type":"","value":"Max supply must be greater than "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32449:6:24"},"nodeType":"YulFunctionCall","src":"32449:62:24"},"nodeType":"YulExpressionStatement","src":"32449:62:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32531:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32542:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32527:3:24"},"nodeType":"YulFunctionCall","src":"32527:18:24"},{"hexValue":"30","kind":"string","nodeType":"YulLiteral","src":"32547:3:24","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32520:6:24"},"nodeType":"YulFunctionCall","src":"32520:31:24"},"nodeType":"YulExpressionStatement","src":"32520:31:24"},{"nodeType":"YulAssignment","src":"32560:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32572:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32583:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32568:3:24"},"nodeType":"YulFunctionCall","src":"32568:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32560:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32347:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32361:4:24","type":""}],"src":"32196:397:24"},{"body":{"nodeType":"YulBlock","src":"32772:177:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32789:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32800:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32782:6:24"},"nodeType":"YulFunctionCall","src":"32782:21:24"},"nodeType":"YulExpressionStatement","src":"32782:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32823:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32834:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32819:3:24"},"nodeType":"YulFunctionCall","src":"32819:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"32839:2:24","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32812:6:24"},"nodeType":"YulFunctionCall","src":"32812:30:24"},"nodeType":"YulExpressionStatement","src":"32812:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32862:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32873:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32858:3:24"},"nodeType":"YulFunctionCall","src":"32858:18:24"},{"hexValue":"4576656e74206d75737420626520696e2074686520667574757265","kind":"string","nodeType":"YulLiteral","src":"32878:29:24","type":"","value":"Event must be in the future"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32851:6:24"},"nodeType":"YulFunctionCall","src":"32851:57:24"},"nodeType":"YulExpressionStatement","src":"32851:57:24"},{"nodeType":"YulAssignment","src":"32917:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32929:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"32940:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32925:3:24"},"nodeType":"YulFunctionCall","src":"32925:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32917:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_b89d7f475b6259f538f5efec95307e131b8de0863046a31d443f665a7a5a9016__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32749:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32763:4:24","type":""}],"src":"32598:351:24"},{"body":{"nodeType":"YulBlock","src":"33128:179:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33145:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33156:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33138:6:24"},"nodeType":"YulFunctionCall","src":"33138:21:24"},"nodeType":"YulExpressionStatement","src":"33138:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33179:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33190:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33175:3:24"},"nodeType":"YulFunctionCall","src":"33175:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"33195:2:24","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33168:6:24"},"nodeType":"YulFunctionCall","src":"33168:30:24"},"nodeType":"YulExpressionStatement","src":"33168:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33218:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33229:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33214:3:24"},"nodeType":"YulFunctionCall","src":"33214:18:24"},{"hexValue":"4576656e7420656e64206d757374206265206166746572207374617274","kind":"string","nodeType":"YulLiteral","src":"33234:31:24","type":"","value":"Event end must be after start"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33207:6:24"},"nodeType":"YulFunctionCall","src":"33207:59:24"},"nodeType":"YulExpressionStatement","src":"33207:59:24"},{"nodeType":"YulAssignment","src":"33275:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33287:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33298:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33283:3:24"},"nodeType":"YulFunctionCall","src":"33283:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33275:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_277fb50e54ed9d01cadc455116af5a5662da4bcddac8a1d14e88750cf8f09a21__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33105:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33119:4:24","type":""}],"src":"32954:353:24"},{"body":{"nodeType":"YulBlock","src":"33486:170:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33503:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33514:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33496:6:24"},"nodeType":"YulFunctionCall","src":"33496:21:24"},"nodeType":"YulExpressionStatement","src":"33496:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33537:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33548:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33533:3:24"},"nodeType":"YulFunctionCall","src":"33533:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"33553:2:24","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33526:6:24"},"nodeType":"YulFunctionCall","src":"33526:30:24"},"nodeType":"YulExpressionStatement","src":"33526:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33576:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33587:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33572:3:24"},"nodeType":"YulFunctionCall","src":"33572:18:24"},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"33592:22:24","type":"","value":"Token does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33565:6:24"},"nodeType":"YulFunctionCall","src":"33565:50:24"},"nodeType":"YulExpressionStatement","src":"33565:50:24"},{"nodeType":"YulAssignment","src":"33624:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33636:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33647:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33632:3:24"},"nodeType":"YulFunctionCall","src":"33632:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33624:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33463:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33477:4:24","type":""}],"src":"33312:344:24"},{"body":{"nodeType":"YulBlock","src":"33835:165:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33852:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33863:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33845:6:24"},"nodeType":"YulFunctionCall","src":"33845:21:24"},"nodeType":"YulExpressionStatement","src":"33845:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33886:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33897:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33882:3:24"},"nodeType":"YulFunctionCall","src":"33882:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"33902:2:24","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33875:6:24"},"nodeType":"YulFunctionCall","src":"33875:30:24"},"nodeType":"YulExpressionStatement","src":"33875:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33925:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33936:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33921:3:24"},"nodeType":"YulFunctionCall","src":"33921:18:24"},{"hexValue":"4576656e74206e6f7420656e646564","kind":"string","nodeType":"YulLiteral","src":"33941:17:24","type":"","value":"Event not ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33914:6:24"},"nodeType":"YulFunctionCall","src":"33914:45:24"},"nodeType":"YulExpressionStatement","src":"33914:45:24"},{"nodeType":"YulAssignment","src":"33968:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33980:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"33991:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33976:3:24"},"nodeType":"YulFunctionCall","src":"33976:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33968:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f6471c55bb451e9909d9c64e8a4242fd18c5ad3c453d5c942294e6f65a14139__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33812:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33826:4:24","type":""}],"src":"33661:339:24"},{"body":{"nodeType":"YulBlock","src":"34179:165:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34196:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34207:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34189:6:24"},"nodeType":"YulFunctionCall","src":"34189:21:24"},"nodeType":"YulExpressionStatement","src":"34189:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34230:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34241:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34226:3:24"},"nodeType":"YulFunctionCall","src":"34226:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"34246:2:24","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34219:6:24"},"nodeType":"YulFunctionCall","src":"34219:30:24"},"nodeType":"YulExpressionStatement","src":"34219:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34269:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34280:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34265:3:24"},"nodeType":"YulFunctionCall","src":"34265:18:24"},{"hexValue":"4e6f207469636b6574206f776e6564","kind":"string","nodeType":"YulLiteral","src":"34285:17:24","type":"","value":"No ticket owned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34258:6:24"},"nodeType":"YulFunctionCall","src":"34258:45:24"},"nodeType":"YulExpressionStatement","src":"34258:45:24"},{"nodeType":"YulAssignment","src":"34312:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34324:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34335:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34320:3:24"},"nodeType":"YulFunctionCall","src":"34320:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34312:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_96dc51fde1aea3385dd20fd5aff15a7676fd42909b5789936f6c8ebd7c8beba6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34156:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34170:4:24","type":""}],"src":"34005:339:24"},{"body":{"nodeType":"YulBlock","src":"34523:169:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34540:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34551:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34533:6:24"},"nodeType":"YulFunctionCall","src":"34533:21:24"},"nodeType":"YulExpressionStatement","src":"34533:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34574:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34585:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34570:3:24"},"nodeType":"YulFunctionCall","src":"34570:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"34590:2:24","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34563:6:24"},"nodeType":"YulFunctionCall","src":"34563:30:24"},"nodeType":"YulExpressionStatement","src":"34563:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34613:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34624:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34609:3:24"},"nodeType":"YulFunctionCall","src":"34609:18:24"},{"hexValue":"5469636b657420616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"34629:21:24","type":"","value":"Ticket already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34602:6:24"},"nodeType":"YulFunctionCall","src":"34602:49:24"},"nodeType":"YulExpressionStatement","src":"34602:49:24"},{"nodeType":"YulAssignment","src":"34660:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34672:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34683:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34668:3:24"},"nodeType":"YulFunctionCall","src":"34668:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34660:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34500:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34514:4:24","type":""}],"src":"34349:343:24"},{"body":{"nodeType":"YulBlock","src":"34871:167:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34888:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34899:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34881:6:24"},"nodeType":"YulFunctionCall","src":"34881:21:24"},"nodeType":"YulExpressionStatement","src":"34881:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34922:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34933:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34918:3:24"},"nodeType":"YulFunctionCall","src":"34918:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"34938:2:24","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34911:6:24"},"nodeType":"YulFunctionCall","src":"34911:30:24"},"nodeType":"YulExpressionStatement","src":"34911:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34961:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"34972:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34957:3:24"},"nodeType":"YulFunctionCall","src":"34957:18:24"},{"hexValue":"5469636b6574206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"34977:19:24","type":"","value":"Ticket not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34950:6:24"},"nodeType":"YulFunctionCall","src":"34950:47:24"},"nodeType":"YulExpressionStatement","src":"34950:47:24"},{"nodeType":"YulAssignment","src":"35006:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35018:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35029:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35014:3:24"},"nodeType":"YulFunctionCall","src":"35014:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35006:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_ef3dc43bf8d0f6dc82cb7bc4c20234046cd1d83ed1f1ab830247dcd1def48bd5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34848:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34862:4:24","type":""}],"src":"34697:341:24"},{"body":{"nodeType":"YulBlock","src":"35217:226:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35234:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35245:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35227:6:24"},"nodeType":"YulFunctionCall","src":"35227:21:24"},"nodeType":"YulExpressionStatement","src":"35227:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35268:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35279:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35264:3:24"},"nodeType":"YulFunctionCall","src":"35264:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"35284:2:24","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35257:6:24"},"nodeType":"YulFunctionCall","src":"35257:30:24"},"nodeType":"YulExpressionStatement","src":"35257:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35307:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35318:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35303:3:24"},"nodeType":"YulFunctionCall","src":"35303:18:24"},{"hexValue":"43616e6e6f74207472616e73666572207469636b65747320647572696e672065","kind":"string","nodeType":"YulLiteral","src":"35323:34:24","type":"","value":"Cannot transfer tickets during e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35296:6:24"},"nodeType":"YulFunctionCall","src":"35296:62:24"},"nodeType":"YulExpressionStatement","src":"35296:62:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35378:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35389:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35374:3:24"},"nodeType":"YulFunctionCall","src":"35374:18:24"},{"hexValue":"76656e74","kind":"string","nodeType":"YulLiteral","src":"35394:6:24","type":"","value":"vent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35367:6:24"},"nodeType":"YulFunctionCall","src":"35367:34:24"},"nodeType":"YulExpressionStatement","src":"35367:34:24"},{"nodeType":"YulAssignment","src":"35410:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35422:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35433:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35418:3:24"},"nodeType":"YulFunctionCall","src":"35418:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35410:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_11756de43fa7685fed37905e74a1fd80a9141a5ccfbd4f69833397108a05a757__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35194:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35208:4:24","type":""}],"src":"35043:400:24"},{"body":{"nodeType":"YulBlock","src":"35622:236:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35639:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35650:2:24","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35632:6:24"},"nodeType":"YulFunctionCall","src":"35632:21:24"},"nodeType":"YulExpressionStatement","src":"35632:21:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35673:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35684:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35669:3:24"},"nodeType":"YulFunctionCall","src":"35669:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"35689:2:24","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35662:6:24"},"nodeType":"YulFunctionCall","src":"35662:30:24"},"nodeType":"YulExpressionStatement","src":"35662:30:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35712:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35723:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35708:3:24"},"nodeType":"YulFunctionCall","src":"35708:18:24"},{"hexValue":"5469636b65747320617265206e6f6e2d7472616e7366657261626c6520626566","kind":"string","nodeType":"YulLiteral","src":"35728:34:24","type":"","value":"Tickets are non-transferable bef"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35701:6:24"},"nodeType":"YulFunctionCall","src":"35701:62:24"},"nodeType":"YulExpressionStatement","src":"35701:62:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35783:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35794:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35779:3:24"},"nodeType":"YulFunctionCall","src":"35779:18:24"},{"hexValue":"6f7265206576656e7420656e6473","kind":"string","nodeType":"YulLiteral","src":"35799:16:24","type":"","value":"ore event ends"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35772:6:24"},"nodeType":"YulFunctionCall","src":"35772:44:24"},"nodeType":"YulExpressionStatement","src":"35772:44:24"},{"nodeType":"YulAssignment","src":"35825:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35837:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"35848:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35833:3:24"},"nodeType":"YulFunctionCall","src":"35833:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35825:4:24"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b3e10b14e83cb448e48e5d59a66437b07e9993475024a2c7e3baebc3a2f0789__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35599:9:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35613:4:24","type":""}],"src":"35448:410:24"},{"body":{"nodeType":"YulBlock","src":"36019:195:24","statements":[{"nodeType":"YulAssignment","src":"36029:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36041:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36052:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36037:3:24"},"nodeType":"YulFunctionCall","src":"36037:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36029:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36071:9:24"},{"name":"value0","nodeType":"YulIdentifier","src":"36082:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36064:6:24"},"nodeType":"YulFunctionCall","src":"36064:25:24"},"nodeType":"YulExpressionStatement","src":"36064:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36109:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36120:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36105:3:24"},"nodeType":"YulFunctionCall","src":"36105:18:24"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36129:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"36137:26:24","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36125:3:24"},"nodeType":"YulFunctionCall","src":"36125:39:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36098:6:24"},"nodeType":"YulFunctionCall","src":"36098:67:24"},"nodeType":"YulExpressionStatement","src":"36098:67:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36185:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36196:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36181:3:24"},"nodeType":"YulFunctionCall","src":"36181:18:24"},{"name":"value2","nodeType":"YulIdentifier","src":"36201:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36174:6:24"},"nodeType":"YulFunctionCall","src":"36174:34:24"},"nodeType":"YulExpressionStatement","src":"36174:34:24"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35972:9:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35983:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35991:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35999:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36010:4:24","type":""}],"src":"35863:351:24"},{"body":{"nodeType":"YulBlock","src":"36348:145:24","statements":[{"nodeType":"YulAssignment","src":"36358:26:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36370:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36381:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36366:3:24"},"nodeType":"YulFunctionCall","src":"36366:18:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36358:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36400:9:24"},{"name":"value0","nodeType":"YulIdentifier","src":"36411:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36393:6:24"},"nodeType":"YulFunctionCall","src":"36393:25:24"},"nodeType":"YulExpressionStatement","src":"36393:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36438:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36449:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36434:3:24"},"nodeType":"YulFunctionCall","src":"36434:18:24"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36458:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36474:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"36479:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36470:3:24"},"nodeType":"YulFunctionCall","src":"36470:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"36483:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36466:3:24"},"nodeType":"YulFunctionCall","src":"36466:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36454:3:24"},"nodeType":"YulFunctionCall","src":"36454:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36427:6:24"},"nodeType":"YulFunctionCall","src":"36427:60:24"},"nodeType":"YulExpressionStatement","src":"36427:60:24"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36309:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36320:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36328:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36339:4:24","type":""}],"src":"36219:274:24"},{"body":{"nodeType":"YulBlock","src":"36729:330:24","statements":[{"nodeType":"YulVariableDeclaration","src":"36739:29:24","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36757:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"36762:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"36753:3:24"},"nodeType":"YulFunctionCall","src":"36753:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"36766:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36749:3:24"},"nodeType":"YulFunctionCall","src":"36749:19:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"36743:2:24","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36784:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36799:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"36807:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36795:3:24"},"nodeType":"YulFunctionCall","src":"36795:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36777:6:24"},"nodeType":"YulFunctionCall","src":"36777:34:24"},"nodeType":"YulExpressionStatement","src":"36777:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36831:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36842:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36827:3:24"},"nodeType":"YulFunctionCall","src":"36827:18:24"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36851:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"36859:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36847:3:24"},"nodeType":"YulFunctionCall","src":"36847:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36820:6:24"},"nodeType":"YulFunctionCall","src":"36820:43:24"},"nodeType":"YulExpressionStatement","src":"36820:43:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36883:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36894:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36879:3:24"},"nodeType":"YulFunctionCall","src":"36879:18:24"},{"name":"value2","nodeType":"YulIdentifier","src":"36899:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36872:6:24"},"nodeType":"YulFunctionCall","src":"36872:34:24"},"nodeType":"YulExpressionStatement","src":"36872:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36926:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36937:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36922:3:24"},"nodeType":"YulFunctionCall","src":"36922:18:24"},{"name":"value3","nodeType":"YulIdentifier","src":"36942:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36915:6:24"},"nodeType":"YulFunctionCall","src":"36915:34:24"},"nodeType":"YulExpressionStatement","src":"36915:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36969:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"36980:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36965:3:24"},"nodeType":"YulFunctionCall","src":"36965:19:24"},{"kind":"number","nodeType":"YulLiteral","src":"36986:3:24","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36958:6:24"},"nodeType":"YulFunctionCall","src":"36958:32:24"},"nodeType":"YulExpressionStatement","src":"36958:32:24"},{"nodeType":"YulAssignment","src":"36999:54:24","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"37025:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37037:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37048:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37033:3:24"},"nodeType":"YulFunctionCall","src":"37033:19:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"37007:17:24"},"nodeType":"YulFunctionCall","src":"37007:46:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36999:4:24"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36666:9:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36677:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36685:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36693:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36701:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36709:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36720:4:24","type":""}],"src":"36498:561:24"},{"body":{"nodeType":"YulBlock","src":"37144:169:24","statements":[{"body":{"nodeType":"YulBlock","src":"37190:16:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37199:1:24","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"37202:1:24","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"37192:6:24"},"nodeType":"YulFunctionCall","src":"37192:12:24"},"nodeType":"YulExpressionStatement","src":"37192:12:24"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37165:7:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"37174:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37161:3:24"},"nodeType":"YulFunctionCall","src":"37161:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"37186:2:24","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37157:3:24"},"nodeType":"YulFunctionCall","src":"37157:32:24"},"nodeType":"YulIf","src":"37154:52:24"},{"nodeType":"YulVariableDeclaration","src":"37215:29:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37234:9:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37228:5:24"},"nodeType":"YulFunctionCall","src":"37228:16:24"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"37219:5:24","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37277:5:24"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"37253:23:24"},"nodeType":"YulFunctionCall","src":"37253:30:24"},"nodeType":"YulExpressionStatement","src":"37253:30:24"},{"nodeType":"YulAssignment","src":"37292:15:24","value":{"name":"value","nodeType":"YulIdentifier","src":"37302:5:24"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37292:6:24"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37110:9:24","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37121:7:24","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37133:6:24","type":""}],"src":"37064:249:24"},{"body":{"nodeType":"YulBlock","src":"37649:496:24","statements":[{"nodeType":"YulVariableDeclaration","src":"37659:29:24","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37677:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"37682:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37673:3:24"},"nodeType":"YulFunctionCall","src":"37673:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"37686:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37669:3:24"},"nodeType":"YulFunctionCall","src":"37669:19:24"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"37663:2:24","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37704:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37719:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"37727:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37715:3:24"},"nodeType":"YulFunctionCall","src":"37715:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37697:6:24"},"nodeType":"YulFunctionCall","src":"37697:34:24"},"nodeType":"YulExpressionStatement","src":"37697:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37751:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37762:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37747:3:24"},"nodeType":"YulFunctionCall","src":"37747:18:24"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37771:6:24"},{"name":"_1","nodeType":"YulIdentifier","src":"37779:2:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37767:3:24"},"nodeType":"YulFunctionCall","src":"37767:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37740:6:24"},"nodeType":"YulFunctionCall","src":"37740:43:24"},"nodeType":"YulExpressionStatement","src":"37740:43:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37803:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37814:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37799:3:24"},"nodeType":"YulFunctionCall","src":"37799:18:24"},{"kind":"number","nodeType":"YulLiteral","src":"37819:3:24","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37792:6:24"},"nodeType":"YulFunctionCall","src":"37792:31:24"},"nodeType":"YulExpressionStatement","src":"37792:31:24"},{"nodeType":"YulVariableDeclaration","src":"37832:71:24","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37875:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37887:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37898:3:24","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37883:3:24"},"nodeType":"YulFunctionCall","src":"37883:19:24"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"37846:28:24"},"nodeType":"YulFunctionCall","src":"37846:57:24"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"37836:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37923:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"37934:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37919:3:24"},"nodeType":"YulFunctionCall","src":"37919:18:24"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"37943:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"37951:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37939:3:24"},"nodeType":"YulFunctionCall","src":"37939:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37912:6:24"},"nodeType":"YulFunctionCall","src":"37912:50:24"},"nodeType":"YulExpressionStatement","src":"37912:50:24"},{"nodeType":"YulVariableDeclaration","src":"37971:58:24","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38014:6:24"},{"name":"tail_1","nodeType":"YulIdentifier","src":"38022:6:24"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"37985:28:24"},"nodeType":"YulFunctionCall","src":"37985:44:24"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"37975:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38049:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38060:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38045:3:24"},"nodeType":"YulFunctionCall","src":"38045:19:24"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"38070:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"38078:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38066:3:24"},"nodeType":"YulFunctionCall","src":"38066:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38038:6:24"},"nodeType":"YulFunctionCall","src":"38038:51:24"},"nodeType":"YulExpressionStatement","src":"38038:51:24"},{"nodeType":"YulAssignment","src":"38098:41:24","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38124:6:24"},{"name":"tail_2","nodeType":"YulIdentifier","src":"38132:6:24"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"38106:17:24"},"nodeType":"YulFunctionCall","src":"38106:33:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38098:4:24"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37586:9:24","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37597:6:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37605:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37613:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37621:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37629:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37640:4:24","type":""}],"src":"37318:827:24"},{"body":{"nodeType":"YulBlock","src":"38335:232:24","statements":[{"nodeType":"YulAssignment","src":"38345:27:24","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38357:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38368:3:24","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38353:3:24"},"nodeType":"YulFunctionCall","src":"38353:19:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38345:4:24"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38388:9:24"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38403:6:24"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38419:3:24","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"38424:1:24","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38415:3:24"},"nodeType":"YulFunctionCall","src":"38415:11:24"},{"kind":"number","nodeType":"YulLiteral","src":"38428:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38411:3:24"},"nodeType":"YulFunctionCall","src":"38411:19:24"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38399:3:24"},"nodeType":"YulFunctionCall","src":"38399:32:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38381:6:24"},"nodeType":"YulFunctionCall","src":"38381:51:24"},"nodeType":"YulExpressionStatement","src":"38381:51:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38452:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38463:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38448:3:24"},"nodeType":"YulFunctionCall","src":"38448:18:24"},{"name":"value1","nodeType":"YulIdentifier","src":"38468:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38441:6:24"},"nodeType":"YulFunctionCall","src":"38441:34:24"},"nodeType":"YulExpressionStatement","src":"38441:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38495:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38506:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38491:3:24"},"nodeType":"YulFunctionCall","src":"38491:18:24"},{"name":"value2","nodeType":"YulIdentifier","src":"38511:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38484:6:24"},"nodeType":"YulFunctionCall","src":"38484:34:24"},"nodeType":"YulExpressionStatement","src":"38484:34:24"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38538:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38549:2:24","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38534:3:24"},"nodeType":"YulFunctionCall","src":"38534:18:24"},{"name":"value3","nodeType":"YulIdentifier","src":"38554:6:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38527:6:24"},"nodeType":"YulFunctionCall","src":"38527:34:24"},"nodeType":"YulExpressionStatement","src":"38527:34:24"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38280:9:24","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38291:6:24","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38299:6:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38307:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38315:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38326:4:24","type":""}],"src":"38150:417:24"},{"body":{"nodeType":"YulBlock","src":"38801:236:24","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38818:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38829:2:24","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38811:6:24"},"nodeType":"YulFunctionCall","src":"38811:21:24"},"nodeType":"YulExpressionStatement","src":"38811:21:24"},{"nodeType":"YulVariableDeclaration","src":"38841:70:24","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38884:6:24"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38896:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38907:2:24","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38892:3:24"},"nodeType":"YulFunctionCall","src":"38892:18:24"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"38855:28:24"},"nodeType":"YulFunctionCall","src":"38855:56:24"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"38845:6:24","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38931:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"38942:2:24","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38927:3:24"},"nodeType":"YulFunctionCall","src":"38927:18:24"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"38951:6:24"},{"name":"headStart","nodeType":"YulIdentifier","src":"38959:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38947:3:24"},"nodeType":"YulFunctionCall","src":"38947:22:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38920:6:24"},"nodeType":"YulFunctionCall","src":"38920:50:24"},"nodeType":"YulExpressionStatement","src":"38920:50:24"},{"nodeType":"YulAssignment","src":"38979:52:24","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39016:6:24"},{"name":"tail_1","nodeType":"YulIdentifier","src":"39024:6:24"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"38987:28:24"},"nodeType":"YulFunctionCall","src":"38987:44:24"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38979:4:24"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38762:9:24","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38773:6:24","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38781:6:24","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38792:4:24","type":""}],"src":"38572:465:24"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_string_memory_ptr_t_uint96_t_address__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_string_memory_ptr_t_uint96_t_address__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), _1)\n        let tail_1 := abi_encode_string(value5, add(headStart, _1))\n        mstore(add(headStart, 192), sub(tail_1, headStart))\n        tail := abi_encode_string(value6, tail_1)\n        mstore(add(headStart, 224), and(value7, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 256), and(value8, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_uint96(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint96(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_uint96(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value5 := abi_decode_string(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_TicketState_$8490__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3)) { panic_error_0x21() }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_addresst_uint96(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value5 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value6 := abi_decode_address(add(headStart, 192))\n        value7 := abi_decode_uint96(add(headStart, 224))\n    }\n    function abi_encode_enum_TicketTier(value, pos)\n    {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_TicketTier_$8435_t_string_memory_ptr_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        abi_encode_enum_TicketTier(value0, headStart)\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_array_string_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_enum$_TicketTier_$8435t_uint256t_uint256t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        if iszero(lt(value, 5)) { revert(0, 0) }\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value5 := abi_decode_array_string_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 192))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value6 := abi_decode_array_string_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_array_string_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        let updated_pos := add(pos, _1)\n        let pos_1 := updated_pos\n        pos := updated_pos\n        let tail := add(pos_1, shl(5, length))\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, pos_1))\n            tail := abi_encode_string(mload(srcPtr), tail)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_struct$_TierConfig_$8470_memory_ptr__to_t_struct$_TierConfig_$8470_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        abi_encode_enum_TicketTier(mload(value0), add(headStart, 32))\n        let memberValue0 := mload(add(value0, 32))\n        mstore(add(headStart, 64), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        let memberValue0_1 := mload(add(value0, 128))\n        let _1 := not(31)\n        mstore(add(headStart, 160), add(sub(tail_1, headStart), _1))\n        let tail_2 := abi_encode_array_string_dyn(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value0, 160))\n        mstore(add(headStart, 0xc0), add(sub(tail_2, headStart), _1))\n        tail := abi_encode_array_string_dyn(memberValue0_2, tail_2)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Event does not exist\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_3e20c9da962f777b0551d44751bf068d7e59b2701da404259aa62c226527bbee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No seat assigned\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_f3222e7037719a4fc56db58c108b1cf82e39b8c08c1b986be3d9f843b32f0815__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty cannot exceed 100%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint96__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_b8444a3075f560e820cb6544081238af96f12c1ede1ac53a5afa99682837bcbc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Event is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1ec8899d2902b8b43ff32dd5c5b62c13bf08e7326d315b4dcb4dfad42f5682fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid tier\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_eea54bd5ed93eb5544084db3cff6dfa8db8c4c0cbb06865979ee2d3aa8301a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Event sold out\")\n        tail := add(headStart, 96)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_35b870a42c7282702350db66df7d437f6522a5b93bebe0a17639729c86081e43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Perk not available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bac3770b00a955a75ca30eb19187adc5a87c84fb30c146cf6e4e40500f3a0763__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Perk limit exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_94d24e8ef4feb5369bd619a1aeb605e75b1632e448d9dc25268fd6f86ecffbe7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Event already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Max supply must be greater than \")\n        mstore(add(headStart, 96), \"0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b89d7f475b6259f538f5efec95307e131b8de0863046a31d443f665a7a5a9016__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Event must be in the future\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_277fb50e54ed9d01cadc455116af5a5662da4bcddac8a1d14e88750cf8f09a21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Event end must be after start\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0f6471c55bb451e9909d9c64e8a4242fd18c5ad3c453d5c942294e6f65a14139__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Event not ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_96dc51fde1aea3385dd20fd5aff15a7676fd42909b5789936f6c8ebd7c8beba6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No ticket owned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Ticket already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef3dc43bf8d0f6dc82cb7bc4c20234046cd1d83ed1f1ab830247dcd1def48bd5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Ticket not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11756de43fa7685fed37905e74a1fd80a9141a5ccfbd4f69833397108a05a757__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Cannot transfer tickets during e\")\n        mstore(add(headStart, 96), \"vent\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5b3e10b14e83cb448e48e5d59a66437b07e9993475024a2c7e3baebc3a2f0789__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Tickets are non-transferable bef\")\n        mstore(add(headStart, 96), \"ore event ends\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n}","id":24,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102525760003560e01c8063715018a611610146578063bc2336e2116100c3578063e985e9c511610087578063e985e9c51461063e578063edb2b21414610651578063f242432a14610664578063f2fde38b14610677578063f5298aca1461068a578063fe6ad9d51461069d57600080fd5b8063bc2336e21461058d578063bd85b039146105b0578063c33c66fa146105d0578063e1313346146105f2578063e41394931461062b57600080fd5b806395d89b411161010a57806395d89b411461051e578063a22cb46514610526578063a8cb2f3714610539578063aa7c4df514610567578063b4611fa81461057a57600080fd5b8063715018a6146104b257806373f20eb6146104ba57806385af5762146104cd5780638920dd14146104e05780638da5cb5b1461050357600080fd5b80632a55205a116101d45780634e1273f4116101985780634e1273f41461040f5780634f558e791461042f57806355f804b3146104515780635bcd5dfb146104645780636b20c4541461049f57600080fd5b80632a55205a146103825780632eb2c2d6146103b457806334bcadb6146103c9578063417ac869146103e957806347fb430f146103fc57600080fd5b8063103f770f1161021b578063103f770f146102f0578063166cc9441461031857806318160ddd146103385780632432ada514610340578063268bad9b1461036057600080fd5b8062fdd58e1461025757806301ffc9a71461027d57806306fdde03146102a05780630b791430146102b55780630e89341c146102dd575b600080fd5b61026a610265366004613d6e565b6106bd565b6040519081526020015b60405180910390f35b61029061028b366004613dae565b6106e5565b6040519015158152602001610274565b6102a86106f0565b6040516102749190613e1b565b6102c86102c3366004613e2e565b61077e565b60405161027499989796959493929190613e47565b6102a86102eb366004613e2e565b6108f6565b6103036102fe366004613f77565b610b5b565b60408051928352602083019190915201610274565b61026a610326366004613e2e565b600f6020526000908152604090205481565b60055461026a565b61026a61034e366004613e2e565b60136020526000908152604090205481565b61037361036e366004613fcd565b610c67565b60405161027493929190613fef565b610395610390366004613fcd565b610ec5565b604080516001600160a01b039093168352602083019190915201610274565b6103c76103c23660046140c0565b610f4a565b005b61026a6103d7366004613e2e565b60126020526000908152604090205481565b6103c76103f7366004614180565b610fb1565b61026a61040a3660046141bc565b6110d9565b61042261041d3660046142c8565b61176a565b6040516102749190614366565b61029061043d366004613e2e565b600090815260046020526040902054151590565b6103c761045f366004614379565b61183e565b6104926104723660046143b5565b600d60209081526000928352604080842090915290825290205460ff1681565b60405161027491906143f7565b6103c76104ad366004614411565b611856565b6103c76118ba565b6103c76104c836600461447a565b6118ce565b6103c76104db3660046144d8565b611a1e565b6104f36104ee366004613fcd565b611da7565b6040516102749493929190614597565b6003546040516001600160a01b039091168152602001610274565b6102a8611e67565b6103c76105343660046145da565b611e74565b6102906105473660046143b5565b600c60209081526000928352604080842090915290825290205460ff1681565b610290610575366004614604565b611e7f565b6103c761058836600461463d565b6121f8565b6105a061059b366004613fcd565b612376565b6040516102749493929190614679565b61026a6105be366004613e2e565b60009081526004602052604090205490565b6105e36105de366004613f77565b612544565b604051610274939291906146c6565b6104926106003660046143b5565b6000918252600d602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6103c76106393660046146eb565b612614565b61029061064c36600461471e565b612897565b6103c761065f3660046147c7565b6128c5565b6103c7610672366004614884565b612a49565b6103c76106853660046148e8565b612d5a565b6103c7610698366004614903565b612d98565b6106b06106ab366004613fcd565b612dce565b604051610274919061498b565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006106df82613104565b600880546106fd90614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461072990614a11565b80156107765780601f1061074b57610100808354040283529160200191610776565b820191906000526020600020905b81548152906001019060200180831161075957829003601f168201915b505050505081565b600b602052600090815260409020805460018201546002830154600384015460048501805494959394929360ff8084169461010090940416929091906107c390614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef90614a11565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b50505050509080600501805461085190614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461087d90614a11565b80156108ca5780601f1061089f576101008083540402835291602001916108ca565b820191906000526020600020905b8154815290600101906020018083116108ad57829003601f168201915b505050600690930154919250506001600160601b038116906001600160a01b03600160601b9091041689565b60606000610907620f424084614a61565b6000818152600b602052604090205490915061093e5760405162461bcd60e51b815260040161093590614a83565b60405180910390fd5b6000818152600b6020908152604080832081516101208101835281548152600182015493810193909352600281015491830191909152600381015460ff80821615156060850152610100909104161515608083015260048101805460a0840191906109a890614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546109d490614a11565b8015610a215780601f106109f657610100808354040283529160200191610a21565b820191906000526020600020905b815481529060010190602001808311610a0457829003601f168201915b50505050508152602001600582018054610a3a90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6690614a11565b8015610ab35780601f10610a8857610100808354040283529160200191610ab3565b820191906000526020600020905b815481529060010190602001808311610a9657829003601f168201915b5050509183525050600691909101546001600160601b0381166020830152600160601b90046001600160a01b031660409091015260c08101515190915015801590610b015750806040015142115b15610b115760c001519392505050565b60a08101515115610b275760a001519392505050565b600a610b3285613129565b604051602001610b43929190614ab1565b60405160208183030381529060405292505050919050565b60008381526011602090815260408083206001600160a01b0386168452909152808220905182918291610b8f908690614b38565b9081526020016040518091039020604051806060016040529081600082018054610bb890614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610be490614a11565b8015610c315780601f10610c0657610100808354040283529160200191610c31565b820191906000526020600020905b815481529060010190602001808311610c1457829003601f168201915b50505050508152602001600182015481526020016002820154815250509050806020015181604001519250925050935093915050565b60608060606000601060008781526020019081526020016000206000868152602001908152602001600020604051806080016040529081600082018054610cad90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd990614a11565b8015610d265780601f10610cfb57610100808354040283529160200191610d26565b820191906000526020600020905b815481529060010190602001808311610d0957829003601f168201915b50505050508152602001600182018054610d3f90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6b90614a11565b8015610db85780601f10610d8d57610100808354040283529160200191610db8565b820191906000526020600020905b815481529060010190602001808311610d9b57829003601f168201915b50505050508152602001600282018054610dd190614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054610dfd90614a11565b8015610e4a5780601f10610e1f57610100808354040283529160200191610e4a565b820191906000526020600020905b815481529060010190602001808311610e2d57829003601f168201915b50505091835250506003919091015460ff1615156020909101526060810151909150610eab5760405162461bcd60e51b815260206004820152601060248201526f139bc81cd9585d08185cdcda59db995960821b6044820152606401610935565b805160208201516040909201519097919650945092505050565b600082815260076020526040812080548291906001600160a01b03811690600160a01b90046001600160601b031681610f195750506006546001600160a01b03811690600160a01b90046001600160601b03165b6000612710610f316001600160601b03841689614b54565b610f3b9190614a61565b92989297509195505050505050565b336001600160a01b0386168114801590610f6b5750610f698682612897565b155b15610f9c5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610935565b610fa986868686866131bb565b505050505050565b610fb961321b565b6000838152600b6020526040902054610fe45760405162461bcd60e51b815260040161093590614a83565b612710816001600160601b0316111561103f5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c74792063616e6e6f742065786365656420313030250000000000006044820152606401610935565b6000838152600b602052604090206001600160601b0382166001600160a01b038416600160601b026bffffffffffffffffffffffff191617600690910155611088838383613248565b604080516001600160a01b03841681526001600160601b038316602082015284917fbefc93e7daa33253e132c907f20544f15e5e331b7f4e917cabee1d6097a1f1f8910160405180910390a2505050565b60006110e361321b565b6000878152600b6020526040902060030154610100900460ff1661113f5760405162461bcd60e51b81526020600482015260136024820152724576656e74206973206e6f742061637469766560681b6044820152606401610935565b6000878152600f6020526040902054861061118b5760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103a34b2b960a11b6044820152606401610935565b6001600160a01b0385166111e15760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606401610935565b6000878152600e60209081526040808320898452909152808220815160c081019092528054829060ff16600481111561121c5761121c6143e1565b600481111561122d5761122d6143e1565b815260200160018201805461124190614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461126d90614a11565b80156112ba5780601f1061128f576101008083540402835291602001916112ba565b820191906000526020600020905b81548152906001019060200180831161129d57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156113a857838290600052602060002001805461131b90614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461134790614a11565b80156113945780601f1061136957610100808354040283529160200191611394565b820191906000526020600020905b81548152906001019060200180831161137757829003601f168201915b5050505050815260200190600101906112fc565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156114815783829060005260206000200180546113f490614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461142090614a11565b801561146d5780601f106114425761010080835404028352916020019161146d565b820191906000526020600020905b81548152906001019060200180831161145057829003601f168201915b5050505050815260200190600101906113d5565b50505091525050600089815260136020526040812054919250906114a88a620f4240614b54565b6114b29190614b6b565b60008a81526013602052604081208054929350906114cf83614b7e565b90915550506000898152600b60209081526040808320546004909252909120541061152d5760405162461bcd60e51b815260206004820152600e60248201526d115d995b9d081cdbdb19081bdd5d60921b6044820152606401610935565b611549878260016040518060200160405280600081525061330a565b60008181526012602090815260408083208b90558b8352600d82528083206001600160a01b038b1684529091529020805460ff19169055855115611654576040805160808101825287815260208082018890528183018790526001606083015260008c81526010825283812085825290915291909120815181906115cd9082614bdd565b50602082015160018201906115e29082614bdd565b50604082015160028201906115f79082614bdd565b50606091909101516003909101805460ff191691151591909117905560405181908a907f88257bb4915cfaf23ff1f49a4d5278601267800249071a71f74369a6f35b72b49061164b908a908a908a90613fef565b60405180910390a35b60005b8260a00151518110156117185760008360a00151828151811061167c5761167c614c9c565b6020908102919091018101516040805160608101825282815260018185015260008183018190528f8152601185528281206001600160a01b038f168252909452928190209051919350906116d1908490614b38565b908152604051908190036020019020815181906116ee9082614bdd565b5060208201516001820155604090910151600290910155508061171081614b7e565b915050611657565b50866001600160a01b0316818a7f4fe0f5bb11eb6ab81c428fb83261719e5b22f84b3e1942cd491c3777504bb8518b60405161175691815260200190565b60405180910390a498975050505050505050565b6060815183511461179b5781518351604051635b05999160e01b815260048101929092526024820152604401610935565b600083516001600160401b038111156117b6576117b6613ec2565b6040519080825280602002602001820160405280156117df578160200160208202803683370190505b50905060005b845181101561183657602080820286010151611809906020808402870101516106bd565b82828151811061181b5761181b614c9c565b602090810291909101015261182f81614b7e565b90506117e5565b509392505050565b61184661321b565b600a6118528282614bdd565b5050565b6001600160a01b038316331480159061187657506118748333612897565b155b156118aa57335b60405163711bec9160e11b81526001600160a01b0391821660048201529084166024820152604401610935565b6118b5838383613367565b505050565b6118c261321b565b6118cc60006133ad565b565b6118d661321b565b60008481526011602090815260408083206001600160a01b03871684529091528082209051611906908590614b38565b90815260200160405180910390209050600081600101541161195f5760405162461bcd60e51b81526020600482015260126024820152715065726b206e6f7420617661696c61626c6560701b6044820152606401610935565b80600101548282600201546119749190614b6b565b11156119b85760405162461bcd60e51b815260206004820152601360248201527214195c9ac81b1a5b5a5d08195e18d959591959606a1b6044820152606401610935565b818160020160008282546119cc9190614b6b565b92505081905550836001600160a01b0316857f4e3e5d9908b5bd9975f87efcebca93c1b24a2b205aa71fc34300ab7bf7e16b908585604051611a0f929190614cb2565b60405180910390a35050505050565b611a2661321b565b6000888152600b602052604090205415611a795760405162461bcd60e51b81526020600482015260146024820152734576656e7420616c72656164792065786973747360601b6044820152606401610935565b60008711611ad35760405162461bcd60e51b815260206004820152602160248201527f4d617820737570706c79206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610935565b428611611b225760405162461bcd60e51b815260206004820152601b60248201527f4576656e74206d75737420626520696e207468652066757475726500000000006044820152606401610935565b858511611b715760405162461bcd60e51b815260206004820152601d60248201527f4576656e7420656e64206d7573742062652061667465722073746172740000006044820152606401610935565b612710816001600160601b03161115611bcc5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c74792063616e6e6f742065786365656420313030250000000000006044820152606401610935565b604051806101200160405280888152602001878152602001868152602001600015158152602001600115158152602001858152602001848152602001826001600160601b03168152602001836001600160a01b0316815250600b60008a815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a0820151816004019081611caa9190614bdd565b5060c08201516005820190611cbf9082614bdd565b5060e0820151610100909201516001600160a01b0316600160601b026001600160601b0392831617600690910155811615801590611d0557506001600160a01b03821615155b15611d6257611d15888383613248565b604080516001600160a01b03841681526001600160601b038316602082015289917fbefc93e7daa33253e132c907f20544f15e5e331b7f4e917cabee1d6097a1f1f8910160405180910390a25b604080518881526020810188905289917f06168e40fac2576e22d73ab2e9efa79b4e7530dd3dd411ab7d8862d04be798a2910160405180910390a25050505050505050565b600e6020908152600092835260408084209091529082529020805460018201805460ff9092169291611dd890614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0490614a11565b8015611e515780601f10611e2657610100808354040283529160200191611e51565b820191906000526020600020905b815481529060010190602001808311611e3457829003601f168201915b5050505050908060020154908060030154905084565b600980546106fd90614a11565b6118523383836133ff565b600082815260046020526040812054611ed15760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610935565b600083815260126020908152604080832054878452600e8352818420818552909252808320815160c081019092528054929392829060ff166004811115611f1a57611f1a6143e1565b6004811115611f2b57611f2b6143e1565b8152602001600182018054611f3f90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054611f6b90614a11565b8015611fb85780601f10611f8d57610100808354040283529160200191611fb8565b820191906000526020600020905b815481529060010190602001808311611f9b57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156120a657838290600052602060002001805461201990614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461204590614a11565b80156120925780601f1061206757610100808354040283529160200191612092565b820191906000526020600020905b81548152906001019060200180831161207557829003601f168201915b505050505081526020019060010190611ffa565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b8282101561217f5783829060005260206000200180546120f290614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461211e90614a11565b801561216b5780601f106121405761010080835404028352916020019161216b565b820191906000526020600020905b81548152906001019060200180831161214e57829003601f168201915b5050505050815260200190600101906120d3565b5050505081525050905060005b8160800151518110156121e9578480519060200120826080015182815181106121b7576121b7614c9c565b602002602001015180519060200120036121d757600193505050506121f1565b806121e181614b7e565b91505061218c565b506000925050505b9392505050565b61220061321b565b6000828152600b602052604090206002015442116122525760405162461bcd60e51b815260206004820152600f60248201526e115d995b9d081b9bdd08195b991959608a1b6044820152606401610935565b60005b81518110156118b5576000838152600d6020526040812083516001929085908590811061228457612284614c9c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1660028111156122bc576122bc6143e1565b03612364576000838152600d602052604081208351600292908590859081106122e7576122e7614c9c565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19166001836002811115612324576123246143e1565b021790555082837ff4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d600260405161235b91906143f7565b60405180910390a35b8061236e81614b7e565b915050612255565b601060209081526000928352604080842090915290825290208054819061239c90614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546123c890614a11565b80156124155780601f106123ea57610100808354040283529160200191612415565b820191906000526020600020905b8154815290600101906020018083116123f857829003601f168201915b50505050509080600101805461242a90614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461245690614a11565b80156124a35780601f10612478576101008083540402835291602001916124a3565b820191906000526020600020905b81548152906001019060200180831161248657829003601f168201915b5050505050908060020180546124b890614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546124e490614a11565b80156125315780601f1061250657610100808354040283529160200191612531565b820191906000526020600020905b81548152906001019060200180831161251457829003601f168201915b5050506003909301549192505060ff1684565b601160209081526000938452604080852082529284529190922082518084018301805192815290830193909201929092209190528054819061258590614a11565b80601f01602080910402602001604051908101604052809291908181526020018280546125b190614a11565b80156125fe5780601f106125d3576101008083540402835291602001916125fe565b820191906000526020600020905b8154815290600101906020018083116125e157829003601f168201915b5050505050908060010154908060020154905083565b61261c61321b565b600061262883856106bd565b116126675760405162461bcd60e51b815260206004820152600f60248201526e139bc81d1a58dad95d081bdddb9959608a1b6044820152606401610935565b6000838152600c602090815260408083206001600160a01b038616845290915290205460ff16156126d05760405162461bcd60e51b8152602060048201526013602482015272151a58dad95d08185b1c9958591e481d5cd959606a1b6044820152606401610935565b6000838152600d602090815260408083206001600160a01b038616845290915281205460ff166002811115612707576127076143e1565b146127485760405162461bcd60e51b81526020600482015260116024820152705469636b6574206e6f742061637469766560781b6044820152606401610935565b6000838152600c602090815260408083206001600160a01b03861684529091529020805460ff1916600117905580156127ee576000838152600d602090815260408083206001600160a01b0386168452909152902080546002919060ff1916600183021790555082837ff4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d60026040516127e191906143f7565b60405180910390a361285c565b6000838152600d602090815260408083206001600160a01b0386168452909152902080546001919060ff19168280021790555082837ff4245df30944233e7208c51c270455d1128b5ec5c18d623367b49e7254214b9d600160405161285391906143f7565b60405180910390a35b6040516001600160a01b0383169084907f07c2221c844690cb15e32907258d38446cd4a17bc9b84e2069cd955615d547fd90600090a3505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6128cd61321b565b6000878152600b60205260409020546128f85760405162461bcd60e51b815260040161093590614a83565b6000878152600f60205260409081902054815160c081019092529080876004811115612926576129266143e1565b815260208082018a90526040808301899052606083018890526080830187905260a090920185905260008b8152600e82528281208582529091522081518154829060ff1916600183600481111561297f5761297f6143e1565b0217905550602082015160018201906129989082614bdd565b506040820151600282015560608201516003820155608082015180516129c8916004840191602090910190613c95565b5060a082015180516129e4916005840191602090910190613c95565b5050506000888152600f60205260408120805491612a0183614b7e565b919050555080887f73f2c5150dd3bafcdfcfd66cdd6938bc381635e48cebe16c6d424dfcf68fe85489604051612a379190613e1b565b60405180910390a35050505050505050565b6001600160a01b0385161580612a6657506001600160a01b038416155b80612a7e57506003546001600160a01b038681169116145b15612a9557612a908585858585613495565b612d53565b6000612aa4620f424085614a61565b6000818152600b6020908152604080832081516101208101835281548152600182015493810193909352600281015491830191909152600381015460ff80821615156060850152610100909104161515608083015260048101805494955092939192909160a084019190612b1790614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612b4390614a11565b8015612b905780601f10612b6557610100808354040283529160200191612b90565b820191906000526020600020905b815481529060010190602001808311612b7357829003601f168201915b50505050508152602001600582018054612ba990614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612bd590614a11565b8015612c225780601f10612bf757610100808354040283529160200191612c22565b820191906000526020600020905b815481529060010190602001808311612c0557829003601f168201915b5050509183525050600691909101546001600160601b038116602080840191909152600160601b9091046001600160a01b0316604090920191909152810151909150421080612c745750806040015142115b612ccc5760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f74207472616e73666572207469636b65747320647572696e6720656044820152631d995b9d60e21b6064820152608401610935565b806060015180612ce0575080604001514210155b612d435760405162461bcd60e51b815260206004820152602e60248201527f5469636b65747320617265206e6f6e2d7472616e7366657261626c652062656660448201526d6f7265206576656e7420656e647360901b6064820152608401610935565b612d508787878787613495565b50505b5050505050565b612d6261321b565b6001600160a01b038116612d8c57604051631e4fbdf760e01b815260006004820152602401610935565b612d95816133ad565b50565b6001600160a01b0383163314801590612db85750612db68333612897565b155b15612dc3573361187d565b6118b58383836134f4565b612e086040805160c08101909152806000815260200160608152602001600081526020016000815260200160608152602001606081525090565b6000838152600f60205260409020548210612e545760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103a34b2b960a11b6044820152606401610935565b6000838152600e6020908152604080832085845290915290819020815160c081019092528054829060ff166004811115612e9057612e906143e1565b6004811115612ea157612ea16143e1565b8152602001600182018054612eb590614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612ee190614a11565b8015612f2e5780601f10612f0357610100808354040283529160200191612f2e565b820191906000526020600020905b815481529060010190602001808311612f1157829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561301c578382906000526020600020018054612f8f90614a11565b80601f0160208091040260200160405190810160405280929190818152602001828054612fbb90614a11565b80156130085780601f10612fdd57610100808354040283529160200191613008565b820191906000526020600020905b815481529060010190602001808311612feb57829003601f168201915b505050505081526020019060010190612f70565b50505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b828210156130f557838290600052602060002001805461306890614a11565b80601f016020809104026020016040519081016040528092919081815260200182805461309490614a11565b80156130e15780601f106130b6576101008083540402835291602001916130e1565b820191906000526020600020905b8154815290600101906020018083116130c457829003601f168201915b505050505081526020019060010190613049565b50505091525090949350505050565b60006001600160e01b0319821663152a902d60e11b14806106df57506106df8261355c565b60606000613136836135ac565b60010190506000816001600160401b0381111561315557613155613ec2565b6040519080825280601f01601f19166020018201604052801561317f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461318957509392505050565b6001600160a01b0384166131e557604051632bfa23e760e11b815260006004820152602401610935565b6001600160a01b03851661320e57604051626a0d4560e21b815260006004820152602401610935565b612d538585858585613684565b6003546001600160a01b031633146118cc5760405163118cdaa760e01b8152336004820152602401610935565b6127106001600160601b03821681101561328e5760405163dfd1fc1b60e01b8152600481018590526001600160601b038316602482015260448101829052606401610935565b6001600160a01b0383166132bf57604051634b4f842960e11b81526004810185905260006024820152604401610935565b506040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600790529190942093519051909116600160a01b029116179055565b6001600160a01b03841661333457604051632bfa23e760e11b815260006004820152602401610935565b60408051600180825260208201869052818301908152606082018590526080820190925290610fa9600087848487613684565b6001600160a01b03831661339057604051626a0d4560e21b815260006004820152602401610935565b6118b5836000848460405180602001604052806000815250613684565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166134285760405162ced3e160e81b815260006004820152602401610935565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b336001600160a01b03861681148015906134b657506134b48682612897565b155b156134e75760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610935565b610fa986868686866136d7565b6001600160a01b03831661351d57604051626a0d4560e21b815260006004820152602401610935565b604080516001808252602082018590528183019081526060820184905260a08201909252600060808201818152919291612d5391879185908590613684565b60006001600160e01b03198216636cdb3d1360e11b148061358d57506001600160e01b031982166303a24d0760e21b145b806106df57506301ffc9a760e01b6001600160e01b03198316146106df565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106135eb5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310613617576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061363557662386f26fc10000830492506010015b6305f5e100831061364d576305f5e100830492506008015b612710831061366157612710830492506004015b60648310613673576064830492506002015b600a83106106df5760010192915050565b6136908585858561375c565b6001600160a01b03841615612d5357825133906001036136c957602084810151908401516136c283898985858961376e565b5050610fa9565b610fa9818787878787613892565b6001600160a01b03841661370157604051632bfa23e760e11b815260006004820152602401610935565b6001600160a01b03851661372a57604051626a0d4560e21b815260006004820152602401610935565b60408051600180825260208201869052818301908152606082018590526080820190925290612d508787848487613684565b6137688484848461397b565b50505050565b6001600160a01b0384163b15610fa95760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906137b29089908990889088908890600401614cd4565b6020604051808303816000875af19250505080156137ed575060408051601f3d908101601f191682019092526137ea91810190614d19565b60015b613856573d80801561381b576040519150601f19603f3d011682016040523d82523d6000602084013e613820565b606091505b50805160000361384e57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610935565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14612d5057604051632bfa23e760e11b81526001600160a01b0386166004820152602401610935565b6001600160a01b0384163b15610fa95760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906138d69089908990889088908890600401614d36565b6020604051808303816000875af1925050508015613911575060408051601f3d908101601f1916820190925261390e91810190614d19565b60015b61393f573d80801561381b576040519150601f19603f3d011682016040523d82523d6000602084013e613820565b6001600160e01b0319811663bc197c8160e01b14612d5057604051632bfa23e760e11b81526001600160a01b0386166004820152602401610935565b61398784848484613a78565b6001600160a01b038416613a10576000805b83518110156139f657602081810284810182015190860182015160009081526004909252604082208054919283926139d2908490614b6b565b909155506139e290508184614b6b565b925050806139ef90614b7e565b9050613999565b508060056000828254613a099190614b6b565b9091555050505b6001600160a01b038316613768576000805b8351811015613a67576020818102848101820151908601820151600090815260049092526040909120805482900390559190910190613a6081614b7e565b9050613a22565b506005805491909103905550505050565b8051825114613aa75781518151604051635b05999160e01b815260048101929092526024820152604401610935565b3360005b8351811015613bb6576020818102858101820151908501909101516001600160a01b03881615613b5e576000828152602081815260408083206001600160a01b038c16845290915290205481811015613b37576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610935565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615613ba3576000828152602081815260408083206001600160a01b038b16845290915281208054839290613b9d908490614b6b565b90915550505b505080613baf90614b7e565b9050613aab565b508251600103613c375760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051613c28929190918252602082015260400190565b60405180910390a45050612d53565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051613c86929190614d94565b60405180910390a45050505050565b828054828255906000526020600020908101928215613cdb579160200282015b82811115613cdb5782518290613ccb9082614bdd565b5091602001919060010190613cb5565b50613ce7929150613ceb565b5090565b80821115613ce7576000613cff8282613d08565b50600101613ceb565b508054613d1490614a11565b6000825580601f10613d24575050565b601f016020900490600052602060002090810190612d9591905b80821115613ce75760008155600101613d3e565b80356001600160a01b0381168114613d6957600080fd5b919050565b60008060408385031215613d8157600080fd5b613d8a83613d52565b946020939093013593505050565b6001600160e01b031981168114612d9557600080fd5b600060208284031215613dc057600080fd5b81356121f181613d98565b60005b83811015613de6578181015183820152602001613dce565b50506000910152565b60008151808452613e07816020860160208601613dcb565b601f01601f19169290920160200192915050565b6020815260006121f16020830184613def565b600060208284031215613e4057600080fd5b5035919050565b60006101208b83528a6020840152896040840152881515606084015287151560808401528060a0840152613e7d81840188613def565b905082810360c0840152613e918187613def565b6001600160601b039590951660e084015250506001600160a01b039190911661010090910152979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613f0057613f00613ec2565b604052919050565b600082601f830112613f1957600080fd5b81356001600160401b03811115613f3257613f32613ec2565b613f45601f8201601f1916602001613ed8565b818152846020838601011115613f5a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613f8c57600080fd5b83359250613f9c60208501613d52565b915060408401356001600160401b03811115613fb757600080fd5b613fc386828701613f08565b9150509250925092565b60008060408385031215613fe057600080fd5b50508035926020909101359150565b6060815260006140026060830186613def565b82810360208401526140148186613def565b905082810360408401526140288185613def565b9695505050505050565b60006001600160401b0382111561404b5761404b613ec2565b5060051b60200190565b600082601f83011261406657600080fd5b8135602061407b61407683614032565b613ed8565b82815260059290921b8401810191818101908684111561409a57600080fd5b8286015b848110156140b5578035835291830191830161409e565b509695505050505050565b600080600080600060a086880312156140d857600080fd5b6140e186613d52565b94506140ef60208701613d52565b935060408601356001600160401b038082111561410b57600080fd5b61411789838a01614055565b9450606088013591508082111561412d57600080fd5b61413989838a01614055565b9350608088013591508082111561414f57600080fd5b5061415c88828901613f08565b9150509295509295909350565b80356001600160601b0381168114613d6957600080fd5b60008060006060848603121561419557600080fd5b833592506141a560208501613d52565b91506141b360408501614169565b90509250925092565b60008060008060008060c087890312156141d557600080fd5b86359550602087013594506141ec60408801613d52565b935060608701356001600160401b038082111561420857600080fd5b6142148a838b01613f08565b9450608089013591508082111561422a57600080fd5b6142368a838b01613f08565b935060a089013591508082111561424c57600080fd5b5061425989828a01613f08565b9150509295509295509295565b600082601f83011261427757600080fd5b8135602061428761407683614032565b82815260059290921b840181019181810190868411156142a657600080fd5b8286015b848110156140b5576142bb81613d52565b83529183019183016142aa565b600080604083850312156142db57600080fd5b82356001600160401b03808211156142f257600080fd5b6142fe86838701614266565b9350602085013591508082111561431457600080fd5b5061432185828601614055565b9150509250929050565b600081518084526020808501945080840160005b8381101561435b5781518752958201959082019060010161433f565b509495945050505050565b6020815260006121f1602083018461432b565b60006020828403121561438b57600080fd5b81356001600160401b038111156143a157600080fd5b6143ad84828501613f08565b949350505050565b600080604083850312156143c857600080fd5b823591506143d860208401613d52565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061440b5761440b6143e1565b91905290565b60008060006060848603121561442657600080fd5b61442f84613d52565b925060208401356001600160401b038082111561444b57600080fd5b61445787838801614055565b9350604086013591508082111561446d57600080fd5b50613fc386828701614055565b6000806000806080858703121561449057600080fd5b843593506144a060208601613d52565b925060408501356001600160401b038111156144bb57600080fd5b6144c787828801613f08565b949793965093946060013593505050565b600080600080600080600080610100898b0312156144f557600080fd5b8835975060208901359650604089013595506060890135945060808901356001600160401b038082111561452857600080fd5b6145348c838d01613f08565b955060a08b013591508082111561454a57600080fd5b506145578b828c01613f08565b93505061456660c08a01613d52565b915061457460e08a01614169565b90509295985092959890939650565b60058110614593576145936143e1565b9052565b6145a18186614583565b6080602082015260006145b76080830186613def565b6040830194909452506060015292915050565b80358015158114613d6957600080fd5b600080604083850312156145ed57600080fd5b6145f683613d52565b91506143d8602084016145ca565b60008060006060848603121561461957600080fd5b833592506020840135915060408401356001600160401b03811115613fb757600080fd5b6000806040838503121561465057600080fd5b8235915060208301356001600160401b0381111561466d57600080fd5b61432185828601614266565b60808152600061468c6080830187613def565b828103602084015261469e8187613def565b905082810360408401526146b28186613def565b915050821515606083015295945050505050565b6060815260006146d96060830186613def565b60208301949094525060400152919050565b60008060006060848603121561470057600080fd5b8335925061471060208501613d52565b91506141b3604085016145ca565b6000806040838503121561473157600080fd5b61473a83613d52565b91506143d860208401613d52565b600082601f83011261475957600080fd5b8135602061476961407683614032565b82815260059290921b8401810191818101908684111561478857600080fd5b8286015b848110156140b55780356001600160401b038111156147ab5760008081fd5b6147b98986838b0101613f08565b84525091830191830161478c565b600080600080600080600060e0888a0312156147e257600080fd5b8735965060208801356001600160401b038082111561480057600080fd5b61480c8b838c01613f08565b975060408a013591506005821061482257600080fd5b909550606089013594506080890135935060a0890135908082111561484657600080fd5b6148528b838c01614748565b935060c08a013591508082111561486857600080fd5b506148758a828b01614748565b91505092959891949750929550565b600080600080600060a0868803121561489c57600080fd5b6148a586613d52565b94506148b360208701613d52565b9350604086013592506060860135915060808601356001600160401b038111156148dc57600080fd5b61415c88828901613f08565b6000602082840312156148fa57600080fd5b6121f182613d52565b60008060006060848603121561491857600080fd5b61492184613d52565b95602085013595506040909401359392505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561497e57828403895261496c848351613def565b98850198935090840190600101614954565b5091979650505050505050565b6020815261499d602082018351614583565b6000602083015160c060408401526149b860e0840182613def565b905060408401516060840152606084015160808401526080840151601f19808584030160a08601526149ea8383614936565b925060a08601519150808584030160c086015250614a088282614936565b95945050505050565b600181811c90821680614a2557607f821691505b602082108103614a4557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082614a7e57634e487b7160e01b600052601260045260246000fd5b500490565b602080825260149082015273115d995b9d08191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b6000808454614abf81614a11565b60018281168015614ad75760018114614aec57614b1b565b60ff1984168752821515830287019450614b1b565b8860005260208060002060005b85811015614b125781548a820152908401908201614af9565b50505082870194505b505050508351614b2f818360208801613dcb565b01949350505050565b60008251614b4a818460208701613dcb565b9190910192915050565b80820281158282048414176106df576106df614a4b565b808201808211156106df576106df614a4b565b600060018201614b9057614b90614a4b565b5060010190565b601f8211156118b557600081815260208120601f850160051c81016020861015614bbe5750805b601f850160051c820191505b81811015610fa957828155600101614bca565b81516001600160401b03811115614bf657614bf6613ec2565b614c0a81614c048454614a11565b84614b97565b602080601f831160018114614c3f5760008415614c275750858301515b600019600386901b1c1916600185901b178555610fa9565b600085815260208120601f198616915b82811015614c6e57888601518255948401946001909101908401614c4f565b5085821015614c8c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b604081526000614cc56040830185613def565b90508260208301529392505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090614d0e90830184613def565b979650505050505050565b600060208284031215614d2b57600080fd5b81516121f181613d98565b6001600160a01b0386811682528516602082015260a060408201819052600090614d629083018661432b565b8281036060840152614d74818661432b565b90508281036080840152614d888185613def565b98975050505050505050565b604081526000614da7604083018561432b565b8281036020840152614a08818561432b56fea26469706673582212204d2b29f4f84d1f82bdbe58039510a172ed841a39c02e22a51d4194cd1440ca9c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x252 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xBC2336E2 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0xEDB2B214 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x68A JUMPI DUP1 PUSH4 0xFE6AD9D5 EQ PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC2336E2 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xC33C66FA EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xE1313346 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xE4139493 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xA8CB2F37 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xAA7C4DF5 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xB4611FA8 EQ PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x73F20EB6 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x85AF5762 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x8920DD14 EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x5BCD5DFB EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A55205A EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x34BCADB6 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0x417AC869 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x47FB430F EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103F770F GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x103F770F EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x166CC944 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x2432ADA5 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x268BAD9B EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB791430 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D6E JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x3DAE JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x3E1B JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E47 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x26A JUMP JUMPDEST PUSH2 0x26A PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x373 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH2 0x395 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x40C0 JUMP JUMPDEST PUSH2 0xF4A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x4180 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x41BC JUMP JUMPDEST PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x422 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x42C8 JUMP JUMPDEST PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x4366 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x4379 JUMP JUMPDEST PUSH2 0x183E JUMP JUMPDEST PUSH2 0x492 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x4411 JUMP JUMPDEST PUSH2 0x1856 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x447A JUMP JUMPDEST PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x44D8 JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4597 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x274 JUMP JUMPDEST PUSH2 0x2A8 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x45DA JUMP JUMPDEST PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x4604 JUMP JUMPDEST PUSH2 0x1E7F JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x463D JUMP JUMPDEST PUSH2 0x21F8 JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4679 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x5BE CALLDATASIZE PUSH1 0x4 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0x5DE CALLDATASIZE PUSH1 0x4 PUSH2 0x3F77 JUMP JUMPDEST PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x46C6 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x600 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B5 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x46EB JUMP JUMPDEST PUSH2 0x2614 JUMP JUMPDEST PUSH2 0x290 PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x471E JUMP JUMPDEST PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x65F CALLDATASIZE PUSH1 0x4 PUSH2 0x47C7 JUMP JUMPDEST PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x4884 JUMP JUMPDEST PUSH2 0x2A49 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x48E8 JUMP JUMPDEST PUSH2 0x2D5A JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x698 CALLDATASIZE PUSH1 0x4 PUSH2 0x4903 JUMP JUMPDEST PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x6B0 PUSH2 0x6AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCD JUMP JUMPDEST PUSH2 0x2DCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x498B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DF DUP3 PUSH2 0x3104 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x776 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x74B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x776 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x759 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 PUSH1 0xFF DUP1 DUP5 AND SWAP5 PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7C3 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x811 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x851 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x87D SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x89F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x6 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x907 PUSH3 0xF4240 DUP5 PUSH2 0x4A61 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x4A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 PUSH2 0x9A8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xA3A SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA66 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAB3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA88 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAB3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA96 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD MLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB01 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP GT JUMPDEST ISZERO PUSH2 0xB11 JUMPI PUSH1 0xC0 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD MLOAD ISZERO PUSH2 0xB27 JUMPI PUSH1 0xA0 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH2 0xB32 DUP6 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB43 SWAP3 SWAP2 SWAP1 PUSH2 0x4AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 DUP3 SWAP2 PUSH2 0xB8F SWAP1 DUP7 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xBB8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBE4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC06 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xCAD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCD9 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD3F SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD6B SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xDD1 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81CD9585D08185CDCDA59DB9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 PUSH2 0xF19 JUMPI POP POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xF31 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND DUP10 PUSH2 0x4B54 JUMP JUMPDEST PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x4A61 JUMP JUMPDEST SWAP3 SWAP9 SWAP3 SWAP8 POP SWAP2 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xF6B JUMPI POP PUSH2 0xF69 DUP7 DUP3 PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF9C JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0xFA9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x31BB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFB9 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x4A83 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x103F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031303025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1088 DUP4 DUP4 DUP4 PUSH2 0x3248 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP2 PUSH32 0xBEFC93E7DAA33253E132C907F20544F15E5E331B7F4E917CABEE1D6097A1F1F8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E3 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4576656E74206973206E6F7420616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 LT PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103A34B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x11E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x43E1 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x122D JUMPI PUSH2 0x122D PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1241 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x126D SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x128F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x129D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x13A8 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x131B SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1347 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1394 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1394 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1377 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12FC JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1481 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x13F4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1420 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x146D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1442 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x146D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1450 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x13D5 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x14A8 DUP11 PUSH3 0xF4240 PUSH2 0x4B54 JUMP JUMPDEST PUSH2 0x14B2 SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x14CF DUP4 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x115D995B9D081CDBDB19081BDD5D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x1549 DUP8 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x330A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 SWAP1 SSTORE DUP12 DUP4 MSTORE PUSH1 0xD DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP6 MLOAD ISZERO PUSH2 0x1654 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP8 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x10 DUP3 MSTORE DUP4 DUP2 KECCAK256 DUP6 DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x15CD SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x15E2 SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x15F7 SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 DUP11 SWAP1 PUSH32 0x88257BB4915CFAF23FF1F49A4D5278601267800249071A71F74369A6F35B72B4 SWAP1 PUSH2 0x164B SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x3FEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x0 JUMPDEST DUP3 PUSH1 0xA0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1718 JUMPI PUSH1 0x0 DUP4 PUSH1 0xA0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x167C JUMPI PUSH2 0x167C PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP2 DUP6 ADD MSTORE PUSH1 0x0 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE DUP16 DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND DUP3 MSTORE SWAP1 SWAP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 SWAP4 POP SWAP1 PUSH2 0x16D1 SWAP1 DUP5 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x16EE SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP DUP1 PUSH2 0x1710 DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1657 JUMP JUMPDEST POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP11 PUSH32 0x4FE0F5BB11EB6AB81C428FB83261719E5B22F84B3E1942CD491C3777504BB851 DUP12 PUSH1 0x40 MLOAD PUSH2 0x1756 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x179B JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x17B6 JUMPI PUSH2 0x17B6 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1836 JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x1809 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x6BD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x181B JUMPI PUSH2 0x181B PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x182F DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x17E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1846 PUSH2 0x321B JUMP JUMPDEST PUSH1 0xA PUSH2 0x1852 DUP3 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1876 JUMPI POP PUSH2 0x1874 DUP4 CALLER PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18AA JUMPI CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH2 0x3367 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x18C2 PUSH2 0x321B JUMP JUMPDEST PUSH2 0x18CC PUSH1 0x0 PUSH2 0x33AD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x18D6 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1906 SWAP1 DUP6 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0x195F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5065726B206E6F7420617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST GT ISZERO PUSH2 0x19B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14195C9AC81B1A5B5A5D08195E18D959591959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19CC SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x4E3E5D9908B5BD9975F87EFCEBCA93C1B24A2B205AA71FC34300AB7BF7E16B90 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A0F SWAP3 SWAP2 SWAP1 PUSH2 0x4CB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A26 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1A79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4576656E7420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST TIMESTAMP DUP7 GT PUSH2 0x1B22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E74206D75737420626520696E20746865206675747572650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST DUP6 DUP6 GT PUSH2 0x1B71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420656E64206D757374206265206166746572207374617274000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x1BCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C74792063616E6E6F74206578636565642031303025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH2 0x1CBF SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x100 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND OR PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D05 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D15 DUP9 DUP4 DUP4 PUSH2 0x3248 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP10 SWAP2 PUSH32 0xBEFC93E7DAA33253E132C907F20544F15E5E331B7F4E917CABEE1D6097A1F1F8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP10 SWAP2 PUSH32 0x6168E40FAC2576E22D73AB2E9EFA79B4E7530DD3DD411AB7D8862D04BE798A2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x1DD8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E04 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E51 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E26 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E51 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E34 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x4A11 JUMP JUMPDEST PUSH2 0x1852 CALLER DUP4 DUP4 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1ED1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP8 DUP5 MSTORE PUSH1 0xE DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP2 DUP6 MSTORE SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP4 SWAP3 DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F1A PUSH2 0x43E1 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2B PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1F3F SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F6B SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x20A6 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2019 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2045 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2092 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2067 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2092 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2075 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1FFA JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x217F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x20F2 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x211E SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x216B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2140 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x216B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x214E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x20D3 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x21E9 JUMPI DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x80 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21B7 JUMPI PUSH2 0x21B7 PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x21D7 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x21F1 JUMP JUMPDEST DUP1 PUSH2 0x21E1 DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x218C JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2200 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x2252 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x115D995B9D081B9BDD08195B991959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x18B5 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 MLOAD PUSH1 0x1 SWAP3 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x2284 JUMPI PUSH2 0x2284 PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22BC JUMPI PUSH2 0x22BC PUSH2 0x43E1 JUMP JUMPDEST SUB PUSH2 0x2364 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP3 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x22E7 JUMPI PUSH2 0x22E7 PUSH2 0x4C9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2324 JUMPI PUSH2 0x2324 PUSH2 0x43E1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 DUP4 PUSH32 0xF4245DF30944233E7208C51C270455D1128B5EC5C18D623367B49E7254214B9D PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 PUSH2 0x236E DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2255 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x239C SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23C8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x242A SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2456 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x24B8 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x24E4 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2531 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2506 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2531 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2514 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 MSTORE DUP1 SLOAD DUP2 SWAP1 PUSH2 0x2585 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25B1 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x25FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x25FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x261C PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2628 DUP4 DUP6 PUSH2 0x6BD JUMP JUMPDEST GT PUSH2 0x2667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BC81D1A58DAD95D081BDDDB9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151A58DAD95D08185B1C9958591E481D5CD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2707 JUMPI PUSH2 0x2707 PUSH2 0x43E1 JUMP JUMPDEST EQ PUSH2 0x2748 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5469636B6574206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x27EE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 MUL OR SWAP1 SSTORE POP DUP3 DUP4 PUSH32 0xF4245DF30944233E7208C51C270455D1128B5EC5C18D623367B49E7254214B9D PUSH1 0x2 PUSH1 0x40 MLOAD PUSH2 0x27E1 SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x285C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP DUP3 DUP4 PUSH32 0xF4245DF30944233E7208C51C270455D1128B5EC5C18D623367B49E7254214B9D PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x2853 SWAP2 SWAP1 PUSH2 0x43F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 SWAP1 PUSH32 0x7C2221C844690CB15E32907258D38446CD4A17BC9B84E2069CD955615D547FD SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x28CD PUSH2 0x321B JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x28F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x935 SWAP1 PUSH2 0x4A83 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 DUP1 DUP8 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2926 JUMPI PUSH2 0x2926 PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 SWAP1 SWAP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP6 DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x297F JUMPI PUSH2 0x297F PUSH2 0x43E1 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x2998 SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x29C8 SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3C95 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x29E4 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3C95 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2A01 DUP4 PUSH2 0x4B7E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP9 PUSH32 0x73F2C5150DD3BAFCDFCFD66CDD6938BC381635E48CEBE16C6D424DFCF68FE854 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2A37 SWAP2 SWAP1 PUSH2 0x3E1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 PUSH2 0x2A66 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO JUMPDEST DUP1 PUSH2 0x2A7E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x2A95 JUMPI PUSH2 0x2A90 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3495 JUMP JUMPDEST PUSH2 0x2D53 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA4 PUSH3 0xF4240 DUP6 PUSH2 0x4A61 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH2 0x120 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 PUSH2 0x2B17 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B43 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2B90 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B65 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B90 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B73 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x2BA9 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BD5 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD MLOAD SWAP1 SWAP2 POP TIMESTAMP LT DUP1 PUSH2 0x2C74 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP GT JUMPDEST PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E73666572207469636B65747320647572696E672065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1D995B9D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP1 PUSH2 0x2CE0 JUMPI POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x2D43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5469636B65747320617265206E6F6E2D7472616E7366657261626C6520626566 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F7265206576656E7420656E6473 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2D50 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3495 JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2D62 PUSH2 0x321B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2D8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2D95 DUP2 PUSH2 0x33AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x2DB8 JUMPI POP PUSH2 0x2DB6 DUP4 CALLER PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2DC3 JUMPI CALLER PUSH2 0x187D JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH2 0x34F4 JUMP JUMPDEST PUSH2 0x2E08 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x2E54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103A34B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2E90 JUMPI PUSH2 0x2E90 PUSH2 0x43E1 JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2EA1 JUMPI PUSH2 0x2EA1 PUSH2 0x43E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2EB5 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EE1 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F2E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F2E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F11 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x301C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x2F8F SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2FBB SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3008 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FDD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3008 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FEB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2F70 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x30F5 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x3068 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3094 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3049 JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x6DF JUMPI POP PUSH2 0x6DF DUP3 PUSH2 0x355C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3136 DUP4 PUSH2 0x35AC JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3155 JUMPI PUSH2 0x3155 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x317F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x3189 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x31E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x320E JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2D53 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x328E JUMPI PUSH1 0x40 MLOAD PUSH4 0xDFD1FC1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x32BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B4F8429 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 SWAP7 DUP8 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP5 KECCAK256 SWAP4 MLOAD SWAP1 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3334 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xFA9 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x18B5 DUP4 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3428 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x34B6 JUMPI POP PUSH2 0x34B4 DUP7 DUP3 PUSH2 0x2897 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x34E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0xFA9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x351D JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH2 0x2D53 SWAP2 DUP8 SWAP2 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3684 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x358D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x6DF JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x35EB JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3617 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3635 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x364D JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3661 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3673 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6DF JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3690 DUP6 DUP6 DUP6 DUP6 PUSH2 0x375C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x2D53 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0x36C9 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0x36C2 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x376E JUMP JUMPDEST POP POP PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0xFA9 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x3892 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x372A JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x2D50 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x3684 JUMP JUMPDEST PUSH2 0x3768 DUP5 DUP5 DUP5 DUP5 PUSH2 0x397B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x37B2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4CD4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x37ED JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x37EA SWAP2 DUP2 ADD SWAP1 PUSH2 0x4D19 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3856 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x381B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3820 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x384E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x2D50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x38D6 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x4D36 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3911 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x390E SWAP2 DUP2 ADD SWAP1 PUSH2 0x4D19 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x393F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x381B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x2D50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x935 JUMP JUMPDEST PUSH2 0x3987 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3A78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3A10 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x39F6 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x39D2 SWAP1 DUP5 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x39E2 SWAP1 POP DUP2 DUP5 PUSH2 0x4B6B JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x39EF SWAP1 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x3999 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3A09 SWAP2 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3768 JUMPI PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3A67 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP7 ADD DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3A60 DUP2 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x3A22 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x3AA7 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x935 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3BB6 JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x3B5E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x3B37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x3BA3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3B9D SWAP1 DUP5 SWAP1 PUSH2 0x4B6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x3BAF SWAP1 PUSH2 0x4B7E JUMP JUMPDEST SWAP1 POP PUSH2 0x3AAB JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x3C37 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3C28 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x2D53 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3C86 SWAP3 SWAP2 SWAP1 PUSH2 0x4D94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3CDB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3CDB JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0x3CCB SWAP1 DUP3 PUSH2 0x4BDD JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3CB5 JUMP JUMPDEST POP PUSH2 0x3CE7 SWAP3 SWAP2 POP PUSH2 0x3CEB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3CE7 JUMPI PUSH1 0x0 PUSH2 0x3CFF DUP3 DUP3 PUSH2 0x3D08 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3CEB JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3D14 SWAP1 PUSH2 0x4A11 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x3D24 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D95 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3CE7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3D3E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8A DUP4 PUSH2 0x3D52 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2D95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21F1 DUP2 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DE6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DCE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3E07 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3DCB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE DUP8 ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x3E7D DUP2 DUP5 ADD DUP9 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3E91 DUP2 DUP8 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0xE0 DUP5 ADD MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH2 0x100 SWAP1 SWAP2 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3F00 JUMPI PUSH2 0x3F00 PUSH2 0x3EC2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3F32 JUMPI PUSH2 0x3F32 PUSH2 0x3EC2 JUMP JUMPDEST PUSH2 0x3F45 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3ED8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3F5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3F8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x3F9C PUSH1 0x20 DUP6 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FC3 DUP7 DUP3 DUP8 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4002 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4014 DUP2 DUP7 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4028 DUP2 DUP6 PUSH2 0x3DEF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x404B JUMPI PUSH2 0x404B PUSH2 0x3EC2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x407B PUSH2 0x4076 DUP4 PUSH2 0x4032 JUMP JUMPDEST PUSH2 0x3ED8 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x409A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x409E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x40D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40E1 DUP7 PUSH2 0x3D52 JUMP JUMPDEST SWAP5 POP PUSH2 0x40EF PUSH1 0x20 DUP8 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x410B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4117 DUP10 DUP4 DUP11 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x412D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4139 DUP10 DUP4 DUP11 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x414F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415C DUP9 DUP3 DUP10 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x41A5 PUSH1 0x20 DUP6 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 PUSH1 0x40 DUP6 ADD PUSH2 0x4169 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x41D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH2 0x41EC PUSH1 0x40 DUP9 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4214 DUP11 DUP4 DUP12 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x422A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4236 DUP11 DUP4 DUP12 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x424C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4259 DUP10 DUP3 DUP11 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4287 PUSH2 0x4076 DUP4 PUSH2 0x4032 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x42A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI PUSH2 0x42BB DUP2 PUSH2 0x3D52 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x42AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x42F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42FE DUP7 DUP4 DUP8 ADD PUSH2 0x4266 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4321 DUP6 DUP3 DUP7 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x435B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x433F JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x21F1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x432B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x438B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x43A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43AD DUP5 DUP3 DUP6 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x43C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x43D8 PUSH1 0x20 DUP5 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x440B JUMPI PUSH2 0x440B PUSH2 0x43E1 JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x442F DUP5 PUSH2 0x3D52 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x444B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4457 DUP8 DUP4 DUP9 ADD PUSH2 0x4055 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x446D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FC3 DUP7 DUP3 DUP8 ADD PUSH2 0x4055 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x44A0 PUSH1 0x20 DUP7 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44C7 DUP8 DUP3 DUP9 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x44F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4534 DUP13 DUP4 DUP14 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x454A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4557 DUP12 DUP3 DUP13 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x4566 PUSH1 0xC0 DUP11 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x4574 PUSH1 0xE0 DUP11 ADD PUSH2 0x4169 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x4593 JUMPI PUSH2 0x4593 PUSH2 0x43E1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x45A1 DUP2 DUP7 PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x45B7 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x45ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45F6 DUP4 PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x43D8 PUSH1 0x20 DUP5 ADD PUSH2 0x45CA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x466D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4321 DUP6 DUP3 DUP7 ADD PUSH2 0x4266 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x468C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x3DEF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x469E DUP2 DUP8 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x46B2 DUP2 DUP7 PUSH2 0x3DEF JUMP JUMPDEST SWAP2 POP POP DUP3 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x46D9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x4710 PUSH1 0x20 DUP6 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B3 PUSH1 0x40 DUP6 ADD PUSH2 0x45CA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x473A DUP4 PUSH2 0x3D52 JUMP JUMPDEST SWAP2 POP PUSH2 0x43D8 PUSH1 0x20 DUP5 ADD PUSH2 0x3D52 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4769 PUSH2 0x4076 DUP4 PUSH2 0x4032 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x4788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x40B5 JUMPI DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x47AB JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x47B9 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x3F08 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x478C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x47E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x480C DUP12 DUP4 DUP13 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH1 0x5 DUP3 LT PUSH2 0x4822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x4846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4852 DUP12 DUP4 DUP13 ADD PUSH2 0x4748 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4875 DUP11 DUP3 DUP12 ADD PUSH2 0x4748 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x489C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48A5 DUP7 PUSH2 0x3D52 JUMP JUMPDEST SWAP5 POP PUSH2 0x48B3 PUSH1 0x20 DUP8 ADD PUSH2 0x3D52 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x48DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x415C DUP9 DUP3 DUP10 ADD PUSH2 0x3F08 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F1 DUP3 PUSH2 0x3D52 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4918 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4921 DUP5 PUSH2 0x3D52 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP4 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x497E JUMPI DUP3 DUP5 SUB DUP10 MSTORE PUSH2 0x496C DUP5 DUP4 MLOAD PUSH2 0x3DEF JUMP JUMPDEST SWAP9 DUP6 ADD SWAP9 SWAP4 POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4954 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x499D PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH2 0x4583 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x49B8 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP1 DUP6 DUP5 SUB ADD PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x49EA DUP4 DUP4 PUSH2 0x4936 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP6 DUP5 SUB ADD PUSH1 0xC0 DUP7 ADD MSTORE POP PUSH2 0x4A08 DUP3 DUP3 PUSH2 0x4936 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4A25 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4A45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4A7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x115D995B9D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x4ABF DUP2 PUSH2 0x4A11 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x4AD7 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x4AEC JUMPI PUSH2 0x4B1B JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x4B1B JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4B12 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x4AF9 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x4B2F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x3DCB JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4B4A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3DCB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6DF JUMPI PUSH2 0x6DF PUSH2 0x4A4B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6DF JUMPI PUSH2 0x6DF PUSH2 0x4A4B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x4B90 JUMPI PUSH2 0x4B90 PUSH2 0x4A4B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18B5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x4BBE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFA9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4BCA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4BF6 JUMPI PUSH2 0x4BF6 PUSH2 0x3EC2 JUMP JUMPDEST PUSH2 0x4C0A DUP2 PUSH2 0x4C04 DUP5 SLOAD PUSH2 0x4A11 JUMP JUMPDEST DUP5 PUSH2 0x4B97 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4C3F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4C27 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C6E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x4C4F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4C8C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4CC5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3DEF JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4D0E SWAP1 DUP4 ADD DUP5 PUSH2 0x3DEF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x21F1 DUP2 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x4D62 SWAP1 DUP4 ADD DUP7 PUSH2 0x432B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4D74 DUP2 DUP7 PUSH2 0x432B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x4D88 DUP2 DUP6 PUSH2 0x3DEF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x4DA7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x432B JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x4A08 DUP2 DUP6 PUSH2 0x432B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0x2B 0x29 DELEGATECALL 0xF8 0x4D 0x1F DUP3 0xBD 0xBE PC SUB SWAP6 LT LOG1 PUSH19 0xED841A39C02E22A51D4194CD1440CA9C64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"961:15848:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:132:3;;;;;;:::i;:::-;;:::i;:::-;;;597:25:24;;;585:2;570:18;2187:132:3;;;;;;;;16381:197:23;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:24;;1177:22;1159:41;;1147:2;1132:18;16381:197:23;1019:187:24;1111:40:23;;;:::i;:::-;;;;;;;:::i;3207:43::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;15239:766::-;;;;;;:::i;:::-;;:::i;13570:308::-;;;;;;:::i;:::-;;:::i;:::-;;;;4732:25:24;;;4788:2;4773:18;;4766:34;;;;4705:18;13570:308:23;4558:248:24;3533:49:23;;;;;;:::i;:::-;;;;;;;;;;;;;;1211:100:7;1289:15;;1211:100;;4067:52:23;;;;;;:::i;:::-;;;;;;;;;;;;;;13944:387;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2330:657:10:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5807:32:24;;;5789:51;;5871:2;5856:18;;5849:34;;;;5762:18;2330:657:10;5615:274:24;3820:429:3;;;;;;:::i;:::-;;:::i;:::-;;3964:46:23;;;;;;:::i;:::-;;;;;;;;;;;;;;14676:472;;;;;;:::i;:::-;;:::i;7471:1857::-;;;;;;:::i;:::-;;:::i;2476:552:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16207:117:23:-;;;;;;:::i;:::-;16270:4;1131:16:7;;;:12;:16;;;;;;-1:-1:-1;;;16207:117:23;16052:99;;;;;;:::i;:::-;;:::i;3325:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;681:313:6:-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;10309:506:23:-;;;;;;:::i;:::-;;:::i;5127:1431::-;;;;;;:::i;:::-;;:::i;3459:68::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;15071:51:24;;15059:2;15044:18;1638:85:0;14925:203:24;1157:29:23;;;:::i;3063:144:3:-;;;;;;:::i;:::-;;:::i;3256:63:23:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;10892:523;;;;;;:::i;:::-;;:::i;12786:500::-;;;;;;:::i;:::-;;:::i;3680:77::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1043:111:7:-;;;;;;:::i;:::-;1105:7;1131:16;;;:12;:16;;;;;;;1043:111;3831:94:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;13362:146::-;;;;;;:::i;:::-;13442:11;13472:21;;;:12;:21;;;;;;;;-1:-1:-1;;;;;13472:29:23;;;;;;;;;;;;;;;13362:146;9423:810;;;;;;:::i;:::-;;:::i;3242:157:3:-;;;;;;:::i;:::-;;:::i;6626:747:23:-;;;;;;:::i;:::-;;:::i;11668:1007::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;394:281:6:-;;;;;;:::i;:::-;;:::i;14386:214:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2187:132:3:-;2264:7;2290:13;;;;;;;;;;;-1:-1:-1;;;;;2290:22:3;;;;;;;;;;2187:132;;;;;:::o;16381:197:23:-;16508:4;16535:36;16559:11;16535:23;:36::i;1111:40::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3207:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3207:43:23;;;;;;;-1:-1:-1;;;;;;;3207:43:23;;;-1:-1:-1;;;;;;;;3207:43:23;;;;;:::o;15239:766::-;15299:13;15324:15;15342:17;15352:7;15342;:17;:::i;:::-;15405:1;15377:15;;;:6;:15;;;;;:25;15324:35;;-1:-1:-1;15369:62:23;;;;-1:-1:-1;;;15369:62:23;;;;;;;:::i;:::-;;;;;;;;;15442:26;15471:15;;;:6;:15;;;;;;;;15442:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15442:44:23;;;-1:-1:-1;;15442:44:23;;;;;;-1:-1:-1;;;;;15442:44:23;;;;;;-1:-1:-1;;;15442:44:23;;-1:-1:-1;;;;;15442:44:23;;;;;;15654:29;;;;15648:43;15654:29;;-1:-1:-1;15648:47:23;;;;:108;;;15729:9;:27;;;15711:15;:45;15648:108;15644:175;;;15779:29;;;;15239:766;-1:-1:-1;;;15239:766:23:o;15644:175::-;15839:21;;;;15833:35;:39;15829:98;;15895:21;;;;15239:766;-1:-1:-1;;;15239:766:23:o;15829:98::-;15968:8;15978:18;:7;:16;:18::i;:::-;15951:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15937:61;;;;15239:766;;;:::o;13570:308::-;13703:19;13782:21;;;:12;:21;;;;;;;;-1:-1:-1;;;;;13782:29:23;;;;;;;;;;:39;;13703:19;;;;13782:39;;13812:8;;13782:39;:::i;:::-;;;;;;;;;;;;;13752:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13839:4;:16;;;13857:4;:13;;;13831:40;;;;;13570:308;;;;;;:::o;13944:387::-;14052:21;14075:17;14094:18;14128:32;14163:15;:24;14179:7;14163:24;;;;;;;;;;;:33;14188:7;14163:33;;;;;;;;;;;14128:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14128:68:23;;;-1:-1:-1;;14128:68:23;;;;;;;;;;;;;;;14214:19;;;;14128:68;;-1:-1:-1;14206:48:23;;;;-1:-1:-1;;;14206:48:23;;25700:2:24;14206:48:23;;;25682:21:24;25739:2;25719:18;;;25712:30;-1:-1:-1;;;25758:18:24;;;25751:46;25814:18;;14206:48:23;25498:340:24;14206:48:23;14272:18;;14292:14;;;;14308:15;;;;;14272:18;;14292:14;;-1:-1:-1;14308:15:23;-1:-1:-1;13944:387:23;-1:-1:-1;;;13944:387:23:o;2330:657:10:-;2438:16;2517:26;;;:17;:26;;;;;2579:21;;2438:16;;2517:26;-1:-1:-1;;;;;2579:21:10;;;-1:-1:-1;;;2635:28:10;;-1:-1:-1;;;;;2635:28:10;2579:21;2674:173;;-1:-1:-1;;2741:19:10;:28;-1:-1:-1;;;;;2741:28:10;;;-1:-1:-1;;;2801:35:10;;-1:-1:-1;;;;;2801:35:10;2674:173;2857:21;3345:5;2882:27;-1:-1:-1;;;;;2882:27:10;;:9;:27;:::i;:::-;2881:49;;;;:::i;:::-;2949:15;;;;-1:-1:-1;2330:657:10;;-1:-1:-1;;;;;;2330:657:10:o;3820:429:3:-;735:10:13;-1:-1:-1;;;;;4057:14:3;;;;;;;:49;;;4076:30;4093:4;4099:6;4076:16;:30::i;:::-;4075:31;4057:49;4053:129;;;4129:42;;-1:-1:-1;;;4129:42:3;;-1:-1:-1;;;;;26246:15:24;;;4129:42:3;;;26228:34:24;26298:15;;26278:18;;;26271:43;26163:18;;4129:42:3;26016:304:24;4053:129:3;4191:51;4214:4;4220:2;4224:3;4229:6;4237:4;4191:22;:51::i;:::-;4004:245;3820:429;;;;;:::o;14676:472:23:-;1531:13:0;:11;:13::i;:::-;14819:1:23::1;14791:15:::0;;;:6:::1;:15;::::0;;;;:25;14783:62:::1;;;;-1:-1:-1::0;;;14783:62:23::1;;;;;;;:::i;:::-;14877:5;14863:10;-1:-1:-1::0;;;;;14863:19:23::1;;;14855:58;;;::::0;-1:-1:-1;;;14855:58:23;;26527:2:24;14855:58:23::1;::::0;::::1;26509:21:24::0;26566:2;26546:18;;;26539:30;26605:28;26585:18;;;26578:56;26651:18;;14855:58:23::1;26325:350:24::0;14855:58:23::1;14924:15;::::0;;;:6:::1;:15;::::0;;;;-1:-1:-1;;;;;14978:39:23;::::1;-1:-1:-1::0;;;;;14924:44:23;::::1;-1:-1:-1::0;;;14924:44:23::1;-1:-1:-1::0;;14978:39:23;::::1;14924:32;::::0;;::::1;14978:39:::0;15028:48:::1;14931:7:::0;14959:9;15007:10;15028:16:::1;:48::i;:::-;15092:49;::::0;;-1:-1:-1;;;;;26870:32:24;;26852:51;;-1:-1:-1;;;;;26939:39:24;;26934:2;26919:18;;26912:67;15110:7:23;;15092:49:::1;::::0;26825:18:24;15092:49:23::1;;;;;;;14676:472:::0;;;:::o;7471:1857::-;7695:7;1531:13:0;:11;:13::i;:::-;7722:15:23::1;::::0;;;:6:::1;:15;::::0;;;;:22:::1;;::::0;::::1;::::0;::::1;;;7714:54;;;::::0;-1:-1:-1;;;7714:54:23;;27192:2:24;7714:54:23::1;::::0;::::1;27174:21:24::0;27231:2;27211:18;;;27204:30;-1:-1:-1;;;27250:18:24;;;27243:49;27309:18;;7714:54:23::1;26990:343:24::0;7714:54:23::1;7795:23;::::0;;;:14:::1;:23;::::0;;;;;7786:32;::::1;7778:57;;;::::0;-1:-1:-1;;;7778:57:23;;27540:2:24;7778:57:23::1;::::0;::::1;27522:21:24::0;27579:2;27559:18;;;27552:30;-1:-1:-1;;;27598:18:24;;;27591:42;27650:18;;7778:57:23::1;27338:336:24::0;7778:57:23::1;-1:-1:-1::0;;;;;7853:23:23;::::1;7845:61;;;::::0;-1:-1:-1;;;7845:61:23;;27881:2:24;7845:61:23::1;::::0;::::1;27863:21:24::0;27920:2;27900:18;;;27893:30;27959:27;27939:18;;;27932:55;28004:18;;7845:61:23::1;27679:349:24::0;7845:61:23::1;7917:28;7948:19:::0;;;:10:::1;:19;::::0;;;;;;;:27;;;;;;;;;7917:58;;::::1;::::0;::::1;::::0;;;;;;;::::1;;;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;7917:58:23;;-1:-1:-1;;8049:15:23::1;8089:26:::0;;;:17:::1;:26;::::0;;;;;7917:58;;-1:-1:-1;8049:15:23;8068:17:::1;8107:7:::0;8078::::1;8068:17;:::i;:::-;8067:48;;;;:::i;:::-;8125:26;::::0;;;:17:::1;:26;::::0;;;;:28;;8049:66;;-1:-1:-1;8125:26:23;:28:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;8239:15:23::1;::::0;;;:6:::1;:15;::::0;;;;;;;:25;1131:12:7;:16;;;;;;;8216:48:23::1;8195:109;;;::::0;-1:-1:-1;;;8195:109:23;;28505:2:24;8195:109:23::1;::::0;::::1;28487:21:24::0;28544:2;28524:18;;;28517:30;-1:-1:-1;;;28563:18:24;;;28556:44;28617:18;;8195:109:23::1;28303:338:24::0;8195:109:23::1;8342:32;8348:9;8359:7;8368:1;8342:32;;;;;;;;;;;::::0;:5:::1;:32::i;:::-;8384:20;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;;8423:21;;;:12:::1;:21:::0;;;;;-1:-1:-1;;;;;8423:32:23;::::1;::::0;;;;;;;:53;;-1:-1:-1;;8423:53:23::1;::::0;;8526:21;;:25;8522:311:::1;;8603:150;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;8734:4:::1;8603:150:::0;;;;-1:-1:-1;8567:24:23;;;:15:::1;:24:::0;;;;;:33;;;;;;;;;;:186;;:33;;:186:::1;::::0;:33;:186:::1;:::i;:::-;-1:-1:-1::0;8567:186:23::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;8567:186:23::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;8567:186:23::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;8567:186:23::1;::::0;::::1;;::::0;;;::::1;::::0;;8772:50:::1;::::0;8794:7;;8785;;8772:50:::1;::::0;::::1;::::0;8803:7;;8812:3;;8817:4;;8772:50:::1;:::i;:::-;;;;;;;;8522:311;8876:9;8871:361;8895:10;:24;;;:31;8891:1;:35;8871:361;;;8947:22;8972:10;:24;;;8997:1;8972:27;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;9058:163:::1;::::0;;::::1;::::0;::::1;::::0;;;;;9141:1:::1;9058:163:::0;;::::1;::::0;-1:-1:-1;9058:163:23;;;;;;9013:21;;;:12:::1;:21:::0;;;;;-1:-1:-1;;;;;9013:32:23;::::1;::::0;;;;;;;;;:42;;8972:27;;-1:-1:-1;9013:32:23;:42:::1;::::0;8972:27;;9013:42:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:208;;:42;;:208:::1;::::0;:42;:208:::1;:::i;:::-;-1:-1:-1::0;9013:208:23::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;8928:3:23;::::1;::::0;::::1;:::i;:::-;;;;8871:361;;;;9278:9;-1:-1:-1::0;;;;;9247:49:23::1;9269:7;9260;9247:49;9289:6;9247:49;;;;597:25:24::0;;585:2;570:18;;451:177;9247:49:23::1;;;;;;;;9314:7:::0;7471:1857;-1:-1:-1;;;;;;;;7471:1857:23:o;2476:552:3:-;2600:16;2651:3;:10;2632:8;:15;:29;2628:121;;2710:10;;2722:15;;2684:54;;-1:-1:-1;;;2684:54:3;;;;;4732:25:24;;;;4773:18;;;4766:34;4705:18;;2684:54:3;4558:248:24;2628:121:3;2759:30;2806:8;:15;-1:-1:-1;;;;;2792:30:3;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2792:30:3;;2759:63;;2838:9;2833:158;2857:8;:15;2853:1;:19;2833:158;;;17259:4:11;17250:14;;;17230:35;;;17224:42;2912:68:3;;17259:4:11;17250:14;;;17230:35;;;17224:42;2187:132:3;:::i;2912:68::-;2893:13;2907:1;2893:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2874:3;;;:::i;:::-;;;2833:158;;;-1:-1:-1;3008:13:3;2476:552;-1:-1:-1;;;2476:552:3:o;16052:99:23:-;1531:13:0;:11;:13::i;:::-;16125:8:23::1;:19;16136:8:::0;16125;:19:::1;:::i;:::-;;16052:99:::0;:::o;681:313:6:-;-1:-1:-1;;;;;793:23:6;;735:10:13;793:23:6;;;;:67;;-1:-1:-1;821:39:6;838:7;735:10:13;3242:157:3;:::i;821:39:6:-;820:40;793:67;789:156;;;735:10:13;912:12:6;883:51;;-1:-1:-1;;;883:51:6;;-1:-1:-1;;;;;26246:15:24;;;883:51:6;;;26228:34:24;26298:15;;;26278:18;;;26271:43;26163:18;;883:51:6;26016:304:24;789:156:6;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;10309:506:23:-;1531:13:0;:11;:13::i;:::-;10478:28:23::1;10509:21:::0;;;:12:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;10509:35:23;::::1;::::0;;;;;;;;:45;;::::1;::::0;10545:8;;10509:45:::1;:::i;:::-;;;;;;;;;;;;;10478:76;;10591:1;10572:4;:16;;;:20;10564:51;;;::::0;-1:-1:-1;;;10564:51:23;;31058:2:24;10564:51:23::1;::::0;::::1;31040:21:24::0;31097:2;31077:18;;;31070:30;-1:-1:-1;;;31116:18:24;;;31109:48;31174:18;;10564:51:23::1;30856:342:24::0;10564:51:23::1;10661:4;:16;;;10649:8;10633:4;:13;;;:24;;;;:::i;:::-;:44;;10625:76;;;::::0;-1:-1:-1;;;10625:76:23;;31405:2:24;10625:76:23::1;::::0;::::1;31387:21:24::0;31444:2;31424:18;;;31417:30;-1:-1:-1;;;31463:18:24;;;31456:49;31522:18;;10625:76:23::1;31203:343:24::0;10625:76:23::1;10729:8;10712:4;:13;;;:25;;;;;;;:::i;:::-;;;;;;;;10775:12;-1:-1:-1::0;;;;;10753:55:23::1;10766:7;10753:55;10789:8;10799;10753:55;;;;;;;:::i;:::-;;;;;;;;10468:347;10309:506:::0;;;;:::o;5127:1431::-;1531:13:0;:11;:13::i;:::-;5449:15:23::1;::::0;;;:6:::1;:15;::::0;;;;:25;:30;5441:63:::1;;;::::0;-1:-1:-1;;;5441:63:23;;32049:2:24;5441:63:23::1;::::0;::::1;32031:21:24::0;32088:2;32068:18;;;32061:30;-1:-1:-1;;;32107:18:24;;;32100:50;32167:18;;5441:63:23::1;31847:344:24::0;5441:63:23::1;5534:1;5522:9;:13;5514:59;;;::::0;-1:-1:-1;;;5514:59:23;;32398:2:24;5514:59:23::1;::::0;::::1;32380:21:24::0;32437:2;32417:18;;;32410:30;32476:34;32456:18;;;32449:62;-1:-1:-1;;;32527:18:24;;;32520:31;32568:19;;5514:59:23::1;32196:397:24::0;5514:59:23::1;5608:15;5591:14;:32;5583:72;;;::::0;-1:-1:-1;;;5583:72:23;;32800:2:24;5583:72:23::1;::::0;::::1;32782:21:24::0;32839:2;32819:18;;;32812:30;32878:29;32858:18;;;32851:57;32925:18;;5583:72:23::1;32598:351:24::0;5583:72:23::1;5693:14;5673:17;:34;5665:76;;;::::0;-1:-1:-1;;;5665:76:23;;33156:2:24;5665:76:23::1;::::0;::::1;33138:21:24::0;33195:2;33175:18;;;33168:30;33234:31;33214:18;;;33207:59;33283:18;;5665:76:23::1;32954:353:24::0;5665:76:23::1;5773:5;5759:10;-1:-1:-1::0;;;;;5759:19:23::1;;;5751:58;;;::::0;-1:-1:-1;;;5751:58:23;;26527:2:24;5751:58:23::1;::::0;::::1;26509:21:24::0;26566:2;26546:18;;;26539:30;26605:28;26585:18;;;26578:56;26651:18;;5751:58:23::1;26325:350:24::0;5751:58:23::1;5838:384;;;;;;;;5873:9;5838:384;;;;5912:14;5838:384;;;;5959:17;5838:384;;;;6004:5;5838:384;;;;;;6031:4;5838:384;;;;;;6062:11;5838:384;;;;6108:19;5838:384;;;;6153:10;-1:-1:-1::0;;;;;5838:384:23::1;;;;;6195:16;-1:-1:-1::0;;;;;5838:384:23::1;;;::::0;5820:6:::1;:15;5827:7;5820:15;;;;;;;;;;;:402;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5820:402:23::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;5820:402:23::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;5820:402:23::1;-1:-1:-1::0;;;5820:402:23::1;-1:-1:-1::0;;;;;5820:402:23;;::::1;;;::::0;;::::1;::::0;6283:14;::::1;::::0;;;;:48:::1;;-1:-1:-1::0;;;;;;6301:30:23;::::1;::::0;::::1;6283:48;6279:209;;;6347:55;6364:7;6373:16;6391:10;6347:16;:55::i;:::-;6421:56;::::0;;-1:-1:-1;;;;;26870:32:24;;26852:51;;-1:-1:-1;;;;;26939:39:24;;26934:2;26919:18;;26912:67;6439:7:23;;6421:56:::1;::::0;26825:18:24;6421:56:23::1;;;;;;;6279:209;6503:48;::::0;;4732:25:24;;;4788:2;4773:18;;4766:34;;;6516:7:23;;6503:48:::1;::::0;4705:18:24;6503:48:23::1;;;;;;;5127:1431:::0;;;;;;;;:::o;3459:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1157:29::-;;;;;;;:::i;3063:144:3:-;3148:52;735:10:13;3181:8:3;3191;3148:18;:52::i;10892:523:23:-;10992:4;1131:16:7;;;:12;:16;;;;;;11008:48:23;;;;-1:-1:-1;;;11008:48:23;;33514:2:24;11008:48:23;;;33496:21:24;33553:2;33533:18;;;33526:30;-1:-1:-1;;;33572:18:24;;;33565:50;33632:18;;11008:48:23;33312:344:24;11008:48:23;11067:14;11084:20;;;:11;:20;;;;;;;;;11145:19;;;:10;:19;;;;;:27;;;;;;;;;11114:58;;;;;;;;;;11084:20;;11067:14;11114:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11188:9;11183:203;11207:10;:22;;;:29;11203:1;:33;11183:203;;;11324:4;11308:22;;;;;;11277:10;:22;;;11300:1;11277:25;;;;;;;;:::i;:::-;;;;;;;11261:43;;;;;;:69;11257:119;;11357:4;11350:11;;;;;;;11257:119;11238:3;;;;:::i;:::-;;;;11183:203;;;;11403:5;11396:12;;;;10892:523;;;;;;:::o;12786:500::-;1531:13:0;:11;:13::i;:::-;12919:15:23::1;::::0;;;:6:::1;:15;::::0;;;;:33:::1;;::::0;12901:15:::1;:51;12893:79;;;::::0;-1:-1:-1;;;12893:79:23;;33863:2:24;12893:79:23::1;::::0;::::1;33845:21:24::0;33902:2;33882:18;;;33875:30;-1:-1:-1;;;33921:18:24;;;33914:45;33976:18;;12893:79:23::1;33661:339:24::0;12893:79:23::1;12988:9;12983:297;13007:7;:14;13003:1;:18;12983:297;;;13046:21;::::0;;;:12:::1;:21;::::0;;;;13068:10;;13083:16:::1;::::0;13046:21;13068:7;;13076:1;;13068:10;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;13046:33:23::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;13046:33:23;;::::1;;:53;::::0;::::1;;;;;;:::i;:::-;::::0;13042:228:::1;;13119:21;::::0;;;:12:::1;:21;::::0;;;;13141:10;;13155:20:::1;::::0;13119:21;13141:7;;13149:1;;13141:10;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;13119:33:23::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;13119:33:23;:56;;-1:-1:-1;;13119:56:23::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;13225:7;13216;13198:57;13234:20;13198:57;;;;;;:::i;:::-;;;;;;;;13042:228;13023:3:::0;::::1;::::0;::::1;:::i;:::-;;;;12983:297;;3680:77:::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3680:77:23;;;;;;;-1:-1:-1;;3680:77:23;;;:::o;3831:94::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9423:810::-;1531:13:0;:11;:13::i;:::-;9579:1:23::1;9544:32;9554:12;9568:7;9544:9;:32::i;:::-;:36;9536:64;;;::::0;-1:-1:-1;;;9536:64:23;;34207:2:24;9536:64:23::1;::::0;::::1;34189:21:24::0;34246:2;34226:18;;;34219:30;-1:-1:-1;;;34265:18:24;;;34258:45;34320:18;;9536:64:23::1;34005:339:24::0;9536:64:23::1;9619:20;::::0;;;:11:::1;:20;::::0;;;;;;;-1:-1:-1;;;;;9619:34:23;::::1;::::0;;;;;;;;::::1;;9618:35;9610:67;;;::::0;-1:-1:-1;;;9610:67:23;;34551:2:24;9610:67:23::1;::::0;::::1;34533:21:24::0;34590:2;34570:18;;;34563:30;-1:-1:-1;;;34609:18:24;;;34602:49;34668:18;;9610:67:23::1;34349:343:24::0;9610:67:23::1;9734:18;9695:21:::0;;;:12:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;9695:35:23;::::1;::::0;;;;;;;;::::1;;:57;::::0;::::1;;;;;;:::i;:::-;;9687:87;;;::::0;-1:-1:-1;;;9687:87:23;;34899:2:24;9687:87:23::1;::::0;::::1;34881:21:24::0;34938:2;34918:18;;;34911:30;-1:-1:-1;;;34957:18:24;;;34950:47;35014:18;;9687:87:23::1;34697:341:24::0;9687:87:23::1;9785:20;::::0;;;:11:::1;:20;::::0;;;;;;;-1:-1:-1;;;;;9785:34:23;::::1;::::0;;;;;;;:41;;-1:-1:-1;;9785:41:23::1;9822:4;9785:41;::::0;;9837:341;::::1;;;9876:21;::::0;;;:12:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;9876:35:23;::::1;::::0;;;;;;;:58;;9914:20:::1;::::0;9876:35;-1:-1:-1;;9876:58:23::1;::::0;9914:20;9876:58:::1;;;;;9980:7;9971;9953:57;9989:20;9953:57;;;;;;:::i;:::-;;;;;;;;9837:341;;;10041:21;::::0;;;:12:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;10041:35:23;::::1;::::0;;;;;;;:54;;10079:16:::1;::::0;10041:35;-1:-1:-1;;10041:54:23::1;10079:16:::0;;10041:54:::1;;;;;10141:7;10132;10114:53;10150:16;10114:53;;;;;;:::i;:::-;;;;;;;;9837:341;10193:33;::::0;-1:-1:-1;;;;;10193:33:23;::::1;::::0;10204:7;;10193:33:::1;::::0;;;::::1;9423:810:::0;;;:::o;3242:157:3:-;-1:-1:-1;;;;;3355:27:3;;;3332:4;3355:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3242:157::o;6626:747:23:-;1531:13:0;:11;:13::i;:::-;6930:1:23::1;6902:15:::0;;;:6:::1;:15;::::0;;;;:25;6894:62:::1;;;;-1:-1:-1::0;;;6894:62:23::1;;;;;;;:::i;:::-;6967:14;6984:23:::0;;;:14:::1;:23;::::0;;;;;;;7048:228;;::::1;::::0;::::1;::::0;;;6984:23;7048:228;7079:4;7048:228:::1;::::0;::::1;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7018:19:23;;;:10:::1;:19:::0;;;;;:27;;;;;;;:258;;;;:27;;-1:-1:-1;;7018:258:23::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;7018:258:23::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;7018:258:23::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;7018:258:23::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;7287:23:23::1;::::0;;;:14:::1;:23;::::0;;;;:25;;;::::1;::::0;::::1;:::i;:::-;;;;;;7349:6;7340:7;7328:38;7357:8;7328:38;;;;;;:::i;:::-;;;;;;;;6884:489;6626:747:::0;;;;;;;:::o;11668:1007::-;-1:-1:-1;;;;;11879:18:23;;;;:38;;-1:-1:-1;;;;;;11901:16:23;;;11879:38;:57;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;11921:15:23;;;1710:6:0;;11921:15:23;11879:57;11875:157;;;11952:49;11975:4;11981:2;11985;11989:5;11996:4;11952:22;:49::i;:::-;12015:7;;11875:157;12042:15;12060:12;12065:7;12060:2;:12;:::i;:::-;12116:26;12145:15;;;:6;:15;;;;;;;;12116:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12042:30;;-1:-1:-1;12116:26:23;;:44;;12145:15;;12116:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12116:44:23;;;-1:-1:-1;;12116:44:23;;;;;;-1:-1:-1;;;;;12116:44:23;;;;;;;;;;-1:-1:-1;;;12116:44:23;;;-1:-1:-1;;;;;12116:44:23;;;;;;;;;12254:24;;;;;-1:-1:-1;12236:15:23;:42;;:91;;;12300:9;:27;;;12282:15;:45;12236:91;12215:174;;;;-1:-1:-1;;;12215:174:23;;35245:2:24;12215:174:23;;;35227:21:24;35284:2;35264:18;;;35257:30;35323:34;35303:18;;;35296:62;-1:-1:-1;;;35374:18:24;;;35367:34;35418:19;;12215:174:23;35043:400:24;12215:174:23;12464:9;:22;;;:72;;;;12509:9;:27;;;12490:15;:46;;12464:72;12443:165;;;;-1:-1:-1;;;12443:165:23;;35650:2:24;12443:165:23;;;35632:21:24;35689:2;35669:18;;;35662:30;35728:34;35708:18;;;35701:62;-1:-1:-1;;;35779:18:24;;;35772:44;35833:19;;12443:165:23;35448:410:24;12443:165:23;12619:49;12642:4;12648:2;12652;12656:5;12663:4;12619:22;:49::i;:::-;11828:847;;11668:1007;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;15071:51:24::0;15044:18;;2672:31:0::1;14925:203:24::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;394:281:6:-;-1:-1:-1;;;;;481:23:6;;735:10:13;481:23:6;;;;:67;;-1:-1:-1;509:39:6;526:7;735:10:13;3242:157:3;:::i;509:39:6:-;508:40;481:67;477:156;;;735:10:13;600:12:6;656:96:13;477:156:6;643:25;649:7;658:2;662:5;643;:25::i;14386:214:23:-;14463:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14463:17:23;14509:23;;;;:14;:23;;;;;;14500:32;;14492:57;;;;-1:-1:-1;;;14492:57:23;;27540:2:24;14492:57:23;;;27522:21:24;27579:2;27559:18;;;27552:30;-1:-1:-1;;;27598:18:24;;;27591:42;27650:18;;14492:57:23;27338:336:24;14492:57:23;14566:19;;;;:10;:19;;;;;;;;:27;;;;;;;;;;14559:34;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14559:34:23;;-1:-1:-1;14559:34:23;;14386:214;-1:-1:-1;;;;14386:214:23:o;2082:213:10:-;2184:4;-1:-1:-1;;;;;;2207:41:10;;-1:-1:-1;;;2207:41:10;;:81;;;2252:36;2276:11;2252:23;:36::i;1308:634:17:-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;-1:-1:-1;;;;;1488:18:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:17;-1:-1:-1;1465:41:17;-1:-1:-1;1595:30:17;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:17;-1:-1:-1;;;1782:2:17;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:17;1652:247;1863:21;-1:-1:-1;1919:6:17;1308:634;-1:-1:-1;;;1308:634:17:o;8831:445:3:-;-1:-1:-1;;;;;9024:16:3;;9020:88;;9063:34;;-1:-1:-1;;;9063:34:3;;9094:1;9063:34;;;15071:51:24;15044:18;;9063:34:3;14925:203:24;9020:88:3;-1:-1:-1;;;;;9121:18:3;;9117:88;;9162:32;;-1:-1:-1;;;9162:32:3;;9191:1;9162:32;;;15071:51:24;15044:18;;9162:32:3;14925:203:24;9117:88:3;9214:55;9241:4;9247:2;9251:3;9256:6;9264:4;9214:26;:55::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:13;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:13;1901:40:0;;;15071:51:24;15044:18;;1901:40:0;14925:203:24;4559:543:10;3345:5;-1:-1:-1;;;;;4721:26:10;;;-1:-1:-1;4717:180:10;;;4824:62;;-1:-1:-1;;;4824:62:10;;;;;36064:25:24;;;-1:-1:-1;;;;;36125:39:24;;36105:18;;;36098:67;36181:18;;;36174:34;;;36037:18;;4824:62:10;35863:351:24;4717:180:10;-1:-1:-1;;;;;4910:22:10;;4906:115;;4955:55;;-1:-1:-1;;;4955:55:10;;;;;36393:25:24;;;5007:1:10;36434:18:24;;;36427:60;36366:18;;4955:55:10;36219:274:24;4906:115:10;-1:-1:-1;5060:35:10;;;;;;;;-1:-1:-1;;;;;5060:35:10;;;;;-1:-1:-1;;;;;5060:35:10;;;;;;;;;;-1:-1:-1;5031:26:10;;;:17;:26;;;;;;:64;;;;;;;-1:-1:-1;;;5031:64:10;;;;;;4559:543::o;10562:346:3:-;-1:-1:-1;;;;;10658:16:3;;10654:88;;10697:34;;-1:-1:-1;;;10697:34:3;;10728:1;10697:34;;;15071:51:24;15044:18;;10697:34:3;14925:203:24;10654:88:3;13782:4;13776:11;;13852:1;13837:17;;;13983:4;13971:17;;13964:35;;;14100:17;;;14130;;;13623:23;14167:17;;14160:35;;;14303:17;;;14290:31;;;13776:11;10840:61;-1:-1:-1;10879:2:3;13776:11;14100:17;10896:4;10840:26;:61::i;12600:265::-;-1:-1:-1;;;;;12704:18:3;;12700:88;;12745:32;;-1:-1:-1;;;12745:32:3;;12774:1;12745:32;;;15071:51:24;15044:18;;12745:32:3;14925:203:24;12700:88:3;12797:61;12824:4;12838:1;12842:3;12847:6;12797:61;;;;;;;;;;;;:26;:61::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;13084:315:3:-;-1:-1:-1;;;;;13191:22:3;;13187:94;;13236:34;;-1:-1:-1;;;13236:34:3;;13267:1;13236:34;;;15071:51:24;15044:18;;13236:34:3;14925:203:24;13187:94:3;-1:-1:-1;;;;;13290:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13290:46:3;;;;;;;;;;13351:41;;1159::24;;;13351::3;;1132:18:24;13351:41:3;;;;;;;13084:315;;;:::o;3434:351::-;735:10:13;-1:-1:-1;;;;;3600:14:3;;;;;;;:49;;;3619:30;3636:4;3642:6;3619:16;:30::i;:::-;3618:31;3600:49;3596:129;;;3672:42;;-1:-1:-1;;;3672:42:3;;-1:-1:-1;;;;;26246:15:24;;;3672:42:3;;;26228:34:24;26298:15;;26278:18;;;26271:43;26163:18;;3672:42:3;26016:304:24;3596:129:3;3734:44;3752:4;3758:2;3762;3766:5;3773:4;3734:17;:44::i;11915:329::-;-1:-1:-1;;;;;11994:18:3;;11990:88;;12035:32;;-1:-1:-1;;;12035:32:3;;12064:1;12035:32;;;15071:51:24;15044:18;;12035:32:3;14925:203:24;11990:88:3;13782:4;13776:11;;13852:1;13837:17;;;13983:4;13971:17;;13964:35;;;14100:17;;;14130;;;13623:23;14167:17;;14160:35;;;12176:61;;;;;;-1:-1:-1;14303:17:3;;;12176:61;;;13776:11;;14100:17;12176:61;;12203:4;;13776:11;;14100:17;;12176:26;:61::i;1345:305::-;1447:4;-1:-1:-1;;;;;;1482:41:3;;-1:-1:-1;;;1482:41:3;;:109;;-1:-1:-1;;;;;;;1539:52:3;;-1:-1:-1;;;1539:52:3;1482:109;:161;;;-1:-1:-1;;;;;;;;;;829:40:18;;;1607:36:3;730:146:18;29154:916:20;29207:7;;-1:-1:-1;;;29282:17:20;;29278:103;;-1:-1:-1;;;29319:17:20;;;-1:-1:-1;29364:2:20;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:20;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:20;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:20;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:20;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:20;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:20:o;6810:700:3:-;7011:30;7019:4;7025:2;7029:3;7034:6;7011:7;:30::i;:::-;-1:-1:-1;;;;;7055:16:3;;;7051:453;;7136:10;;735::13;;7150:1:3;7136:15;7132:362;;17259:4:11;17230:35;;;17224:42;17230:35;;;17224:42;7289:72:3;7325:8;7335:4;7341:2;17224:42:11;;7356:4:3;7289:35;:72::i;:::-;7153:223;;7132:362;;;7400:79;7441:8;7451:4;7457:2;7461:3;7466:6;7474:4;7400:40;:79::i;7967:463::-;-1:-1:-1;;;;;8089:16:3;;8085:88;;8128:34;;-1:-1:-1;;;8128:34:3;;8159:1;8128:34;;;15071:51:24;15044:18;;8128:34:3;14925:203:24;8085:88:3;-1:-1:-1;;;;;8186:18:3;;8182:88;;8227:32;;-1:-1:-1;;;8227:32:3;;8256:1;8227:32;;;15071:51:24;15044:18;;8227:32:3;14925:203:24;8182:88:3;13782:4;13776:11;;13852:1;13837:17;;;13983:4;13971:17;;13964:35;;;14100:17;;;14130;;;13623:23;14167:17;;14160:35;;;14303:17;;;14290:31;;;13776:11;8368:55;8395:4;8401:2;13776:11;14100:17;8418:4;8368:26;:55::i;16584:223:23:-;16764:36;16778:4;16784:2;16788:3;16793:6;16764:13;:36::i;:::-;16584:223;;;;:::o;1006:961:9:-;-1:-1:-1;;;;;1205:14:9;;;:18;1201:760;;1243:71;;-1:-1:-1;;;1243:71:9;;-1:-1:-1;;;;;1243:38:9;;;;;:71;;1282:8;;1292:4;;1298:2;;1302:5;;1309:4;;1243:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1243:71:9;;;;;;;;-1:-1:-1;;1243:71:9;;;;;;;;;;;;:::i;:::-;;;1239:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:6;:13;1630:1;1613:18;1609:328;;1718:41;;-1:-1:-1;;;1718:41:9;;-1:-1:-1;;;;;15089:32:24;;1718:41:9;;;15071:51:24;15044:18;;1718:41:9;14925:203:24;1609:328:9;1889:6;1883:13;1876:4;1868:6;1864:17;1857:40;1239:712;-1:-1:-1;;;;;;1363:55:9;;-1:-1:-1;;;1363:55:9;1359:189;;1488:41;;-1:-1:-1;;;1488:41:9;;-1:-1:-1;;;;;15089:32:24;;1488:41:9;;;15071:51:24;15044:18;;1488:41:9;14925:203:24;2523:1028:9;-1:-1:-1;;;;;2747:14:9;;;:18;2743:802;;2785:78;;-1:-1:-1;;;2785:78:9;;-1:-1:-1;;;;;2785:43:9;;;;;:78;;2829:8;;2839:4;;2845:3;;2850:6;;2858:4;;2785:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2785:78:9;;;;;;;;-1:-1:-1;;2785:78:9;;;;;;;;;;;;:::i;:::-;;;2781:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2942:60:9;;-1:-1:-1;;;2942:60:9;2938:194;;3072:41;;-1:-1:-1;;;3072:41:9;;-1:-1:-1;;;;;15089:32:24;;3072:41:9;;;15071:51:24;15044:18;;3072:41:9;14925:203:24;1544:1594:7;1708:36;1722:4;1728:2;1732:3;1737:6;1708:13;:36::i;:::-;-1:-1:-1;;;;;1759:18:7;;1755:571;;1793:22;1838:9;1833:331;1857:3;:10;1853:1;:14;1833:331;;;17259:4:11;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;17224:42;1892:13:7;2060:39;;;:12;:39;;;;;;:48;;17224:42:11;;;;2060:48:7;;17224:42:11;;2060:48:7;:::i;:::-;;;;-1:-1:-1;2126:23:7;;-1:-1:-1;2144:5:7;2126:23;;:::i;:::-;;;1874:290;1869:3;;;;:::i;:::-;;;1833:331;;;;2301:14;2282:15;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1755:571:7;-1:-1:-1;;;;;2340:16:7;;2336:796;;2372:22;2417:9;2412:497;2436:3;:10;2432:1;:14;2412:497;;;17259:4:11;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;17224:42;2471:13:7;2672:39;;;:12;:39;;;;;;;:48;;;;;;;2853:23;;;;;2448:3;17250:14:11;2448:3:7;:::i;:::-;;;2412:497;;;-1:-1:-1;3074:15:7;:33;;;;;;;;1544:1594;;;;:::o;4950:1281:3:-;5085:6;:13;5071:3;:10;:27;5067:117;;5147:10;;5159:13;;5121:52;;-1:-1:-1;;;5121:52:3;;;;;4732:25:24;;;;4773:18;;;4766:34;4705:18;;5121:52:3;4558:248:24;5067:117:3;735:10:13;5194:16:3;5236:691;5260:3;:10;5256:1;:14;5236:691;;;17259:4:11;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;;17224:42;-1:-1:-1;;;;;5406:18:3;;;5402:420;;5444:19;5466:13;;;;;;;;;;;-1:-1:-1;;;;;5466:19:3;;;;;;;;;;5507;;;5503:129;;;5557:56;;-1:-1:-1;;;5557:56:3;;-1:-1:-1;;;;;38399:32:24;;5557:56:3;;;38381:51:24;38448:18;;;38441:34;;;38491:18;;;38484:34;;;38534:18;;;38527:34;;;38353:19;;5557:56:3;38150:417:24;5503:129:3;5748:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5748:19:3;;;;;;;;;5770;;;;5748:41;;5402:420;-1:-1:-1;;;;;5840:16:3;;;5836:81;;5876:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5876:17:3;;;;;;;;;:26;;5897:5;;5876:9;:26;;5897:5;;5876:26;:::i;:::-;;;;-1:-1:-1;;5836:81:3;5277:650;;5272:3;;;;:::i;:::-;;;5236:691;;;;5941:3;:10;5955:1;5941:15;5937:288;;17259:4:11;17230:35;;17224:42;5972:10:3;;17259:4:11;17230:35;;17224:42;5972:38:3;;-1:-1:-1;6118:2:3;-1:-1:-1;;;;;6087:45:3;6112:4;-1:-1:-1;;;;;6087:45:3;6102:8;-1:-1:-1;;;;;6087:45:3;;6122:2;6126:5;6087:45;;;;;;4732:25:24;;;4788:2;4773:18;;4766:34;4720:2;4705:18;;4558:248;6087:45:3;;;;;;;;5958:185;;5937:288;;;6198:2;-1:-1:-1;;;;;6168:46:3;6192:4;-1:-1:-1;;;;;6168:46:3;6182:8;-1:-1:-1;;;;;6168:46:3;;6202:3;6207:6;6168:46;;;;;;;:::i;:::-;;;;;;;;5057:1174;4950:1281;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:24;82:20;;-1:-1:-1;;;;;131:31:24;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:24:o;633:131::-;-1:-1:-1;;;;;;707:32:24;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:250::-;1296:1;1306:113;1320:6;1317:1;1314:13;1306:113;;;1396:11;;;1390:18;1377:11;;;1370:39;1342:2;1335:10;1306:113;;;-1:-1:-1;;1453:1:24;1435:16;;1428:27;1211:250::o;1466:271::-;1508:3;1546:5;1540:12;1573:6;1568:3;1561:19;1589:76;1658:6;1651:4;1646:3;1642:14;1635:4;1628:5;1624:16;1589:76;:::i;:::-;1719:2;1698:15;-1:-1:-1;;1694:29:24;1685:39;;;;1726:4;1681:50;;1466:271;-1:-1:-1;;1466:271:24:o;1742:220::-;1891:2;1880:9;1873:21;1854:4;1911:45;1952:2;1941:9;1937:18;1929:6;1911:45;:::i;1967:180::-;2026:6;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;-1:-1:-1;2118:23:24;;1967:180;-1:-1:-1;1967:180:24:o;2152:984::-;2494:4;2523:3;2553:6;2542:9;2535:25;2596:6;2591:2;2580:9;2576:18;2569:34;2639:6;2634:2;2623:9;2619:18;2612:34;2696:6;2689:14;2682:22;2677:2;2666:9;2662:18;2655:50;2756:6;2749:14;2742:22;2736:3;2725:9;2721:19;2714:51;2802:2;2796:3;2785:9;2781:19;2774:31;2828:45;2869:2;2858:9;2854:18;2846:6;2828:45;:::i;:::-;2814:59;;2922:9;2914:6;2910:22;2904:3;2893:9;2889:19;2882:51;2950:33;2976:6;2968;2950:33;:::i;:::-;-1:-1:-1;;;;;3020:39:24;;;;3014:3;2999:19;;2992:68;-1:-1:-1;;;;;;;3097:32:24;;;;3091:3;3076:19;;;3069:61;2942:41;2152:984;-1:-1:-1;;;;;;;2152:984:24:o;3141:127::-;3202:10;3197:3;3193:20;3190:1;3183:31;3233:4;3230:1;3223:15;3257:4;3254:1;3247:15;3273:275;3344:2;3338:9;3409:2;3390:13;;-1:-1:-1;;3386:27:24;3374:40;;-1:-1:-1;;;;;3429:34:24;;3465:22;;;3426:62;3423:88;;;3491:18;;:::i;:::-;3527:2;3520:22;3273:275;;-1:-1:-1;3273:275:24:o;3553:531::-;3596:5;3649:3;3642:4;3634:6;3630:17;3626:27;3616:55;;3667:1;3664;3657:12;3616:55;3703:6;3690:20;-1:-1:-1;;;;;3725:2:24;3722:26;3719:52;;;3751:18;;:::i;:::-;3795:55;3838:2;3819:13;;-1:-1:-1;;3815:27:24;3844:4;3811:38;3795:55;:::i;:::-;3875:2;3866:7;3859:19;3921:3;3914:4;3909:2;3901:6;3897:15;3893:26;3890:35;3887:55;;;3938:1;3935;3928:12;3887:55;4003:2;3996:4;3988:6;3984:17;3977:4;3968:7;3964:18;3951:55;4051:1;4026:16;;;4044:4;4022:27;4015:38;;;;4030:7;3553:531;-1:-1:-1;;;3553:531:24:o;4089:464::-;4176:6;4184;4192;4245:2;4233:9;4224:7;4220:23;4216:32;4213:52;;;4261:1;4258;4251:12;4213:52;4297:9;4284:23;4274:33;;4326:38;4360:2;4349:9;4345:18;4326:38;:::i;:::-;4316:48;;4415:2;4404:9;4400:18;4387:32;-1:-1:-1;;;;;4434:6:24;4431:30;4428:50;;;4474:1;4471;4464:12;4428:50;4497;4539:7;4530:6;4519:9;4515:22;4497:50;:::i;:::-;4487:60;;;4089:464;;;;;:::o;4811:248::-;4879:6;4887;4940:2;4928:9;4919:7;4915:23;4911:32;4908:52;;;4956:1;4953;4946:12;4908:52;-1:-1:-1;;4979:23:24;;;5049:2;5034:18;;;5021:32;;-1:-1:-1;4811:248:24:o;5064:546::-;5309:2;5298:9;5291:21;5272:4;5335:45;5376:2;5365:9;5361:18;5353:6;5335:45;:::i;:::-;5428:9;5420:6;5416:22;5411:2;5400:9;5396:18;5389:50;5462:33;5488:6;5480;5462:33;:::i;:::-;5448:47;;5543:9;5535:6;5531:22;5526:2;5515:9;5511:18;5504:50;5571:33;5597:6;5589;5571:33;:::i;:::-;5563:41;5064:546;-1:-1:-1;;;;;;5064:546:24:o;5894:183::-;5954:4;-1:-1:-1;;;;;5979:6:24;5976:30;5973:56;;;6009:18;;:::i;:::-;-1:-1:-1;6054:1:24;6050:14;6066:4;6046:25;;5894:183::o;6082:662::-;6136:5;6189:3;6182:4;6174:6;6170:17;6166:27;6156:55;;6207:1;6204;6197:12;6156:55;6243:6;6230:20;6269:4;6293:60;6309:43;6349:2;6309:43;:::i;:::-;6293:60;:::i;:::-;6387:15;;;6473:1;6469:10;;;;6457:23;;6453:32;;;6418:12;;;;6497:15;;;6494:35;;;6525:1;6522;6515:12;6494:35;6561:2;6553:6;6549:15;6573:142;6589:6;6584:3;6581:15;6573:142;;;6655:17;;6643:30;;6693:12;;;;6606;;6573:142;;;-1:-1:-1;6733:5:24;6082:662;-1:-1:-1;;;;;;6082:662:24:o;6749:944::-;6903:6;6911;6919;6927;6935;6988:3;6976:9;6967:7;6963:23;6959:33;6956:53;;;7005:1;7002;6995:12;6956:53;7028:29;7047:9;7028:29;:::i;:::-;7018:39;;7076:38;7110:2;7099:9;7095:18;7076:38;:::i;:::-;7066:48;;7165:2;7154:9;7150:18;7137:32;-1:-1:-1;;;;;7229:2:24;7221:6;7218:14;7215:34;;;7245:1;7242;7235:12;7215:34;7268:61;7321:7;7312:6;7301:9;7297:22;7268:61;:::i;:::-;7258:71;;7382:2;7371:9;7367:18;7354:32;7338:48;;7411:2;7401:8;7398:16;7395:36;;;7427:1;7424;7417:12;7395:36;7450:63;7505:7;7494:8;7483:9;7479:24;7450:63;:::i;:::-;7440:73;;7566:3;7555:9;7551:19;7538:33;7522:49;;7596:2;7586:8;7583:16;7580:36;;;7612:1;7609;7602:12;7580:36;;7635:52;7679:7;7668:8;7657:9;7653:24;7635:52;:::i;:::-;7625:62;;;6749:944;;;;;;;;:::o;7698:179::-;7765:20;;-1:-1:-1;;;;;7814:38:24;;7804:49;;7794:77;;7867:1;7864;7857:12;7882:326;7958:6;7966;7974;8027:2;8015:9;8006:7;8002:23;7998:32;7995:52;;;8043:1;8040;8033:12;7995:52;8079:9;8066:23;8056:33;;8108:38;8142:2;8131:9;8127:18;8108:38;:::i;:::-;8098:48;;8165:37;8198:2;8187:9;8183:18;8165:37;:::i;:::-;8155:47;;7882:326;;;;;:::o;8213:956::-;8347:6;8355;8363;8371;8379;8387;8440:3;8428:9;8419:7;8415:23;8411:33;8408:53;;;8457:1;8454;8447:12;8408:53;8493:9;8480:23;8470:33;;8550:2;8539:9;8535:18;8522:32;8512:42;;8573:38;8607:2;8596:9;8592:18;8573:38;:::i;:::-;8563:48;;8662:2;8651:9;8647:18;8634:32;-1:-1:-1;;;;;8726:2:24;8718:6;8715:14;8712:34;;;8742:1;8739;8732:12;8712:34;8765:50;8807:7;8798:6;8787:9;8783:22;8765:50;:::i;:::-;8755:60;;8868:3;8857:9;8853:19;8840:33;8824:49;;8898:2;8888:8;8885:16;8882:36;;;8914:1;8911;8904:12;8882:36;8937:52;8981:7;8970:8;8959:9;8955:24;8937:52;:::i;:::-;8927:62;;9042:3;9031:9;9027:19;9014:33;8998:49;;9072:2;9062:8;9059:16;9056:36;;;9088:1;9085;9078:12;9056:36;;9111:52;9155:7;9144:8;9133:9;9129:24;9111:52;:::i;:::-;9101:62;;;8213:956;;;;;;;;:::o;9174:668::-;9228:5;9281:3;9274:4;9266:6;9262:17;9258:27;9248:55;;9299:1;9296;9289:12;9248:55;9335:6;9322:20;9361:4;9385:60;9401:43;9441:2;9401:43;:::i;9385:60::-;9479:15;;;9565:1;9561:10;;;;9549:23;;9545:32;;;9510:12;;;;9589:15;;;9586:35;;;9617:1;9614;9607:12;9586:35;9653:2;9645:6;9641:15;9665:148;9681:6;9676:3;9673:15;9665:148;;;9747:23;9766:3;9747:23;:::i;:::-;9735:36;;9791:12;;;;9698;;9665:148;;9847:595;9965:6;9973;10026:2;10014:9;10005:7;10001:23;9997:32;9994:52;;;10042:1;10039;10032:12;9994:52;10082:9;10069:23;-1:-1:-1;;;;;10152:2:24;10144:6;10141:14;10138:34;;;10168:1;10165;10158:12;10138:34;10191:61;10244:7;10235:6;10224:9;10220:22;10191:61;:::i;:::-;10181:71;;10305:2;10294:9;10290:18;10277:32;10261:48;;10334:2;10324:8;10321:16;10318:36;;;10350:1;10347;10340:12;10318:36;;10373:63;10428:7;10417:8;10406:9;10402:24;10373:63;:::i;:::-;10363:73;;;9847:595;;;;;:::o;10447:435::-;10500:3;10538:5;10532:12;10565:6;10560:3;10553:19;10591:4;10620:2;10615:3;10611:12;10604:19;;10657:2;10650:5;10646:14;10678:1;10688:169;10702:6;10699:1;10696:13;10688:169;;;10763:13;;10751:26;;10797:12;;;;10832:15;;;;10724:1;10717:9;10688:169;;;-1:-1:-1;10873:3:24;;10447:435;-1:-1:-1;;;;;10447:435:24:o;10887:261::-;11066:2;11055:9;11048:21;11029:4;11086:56;11138:2;11127:9;11123:18;11115:6;11086:56;:::i;11153:322::-;11222:6;11275:2;11263:9;11254:7;11250:23;11246:32;11243:52;;;11291:1;11288;11281:12;11243:52;11331:9;11318:23;-1:-1:-1;;;;;11356:6:24;11353:30;11350:50;;;11396:1;11393;11386:12;11350:50;11419;11461:7;11452:6;11441:9;11437:22;11419:50;:::i;:::-;11409:60;11153:322;-1:-1:-1;;;;11153:322:24:o;11480:254::-;11548:6;11556;11609:2;11597:9;11588:7;11584:23;11580:32;11577:52;;;11625:1;11622;11615:12;11577:52;11661:9;11648:23;11638:33;;11690:38;11724:2;11713:9;11709:18;11690:38;:::i;:::-;11680:48;;11480:254;;;;;:::o;11739:127::-;11800:10;11795:3;11791:20;11788:1;11781:31;11831:4;11828:1;11821:15;11855:4;11852:1;11845:15;11871:247;12019:2;12004:18;;12052:1;12041:13;;12031:47;;12058:18;;:::i;:::-;12087:25;;;11871:247;:::o;12123:669::-;12250:6;12258;12266;12319:2;12307:9;12298:7;12294:23;12290:32;12287:52;;;12335:1;12332;12325:12;12287:52;12358:29;12377:9;12358:29;:::i;:::-;12348:39;;12438:2;12427:9;12423:18;12410:32;-1:-1:-1;;;;;12502:2:24;12494:6;12491:14;12488:34;;;12518:1;12515;12508:12;12488:34;12541:61;12594:7;12585:6;12574:9;12570:22;12541:61;:::i;:::-;12531:71;;12655:2;12644:9;12640:18;12627:32;12611:48;;12684:2;12674:8;12671:16;12668:36;;;12700:1;12697;12690:12;12668:36;;12723:63;12778:7;12767:8;12756:9;12752:24;12723:63;:::i;12797:533::-;12893:6;12901;12909;12917;12970:3;12958:9;12949:7;12945:23;12941:33;12938:53;;;12987:1;12984;12977:12;12938:53;13023:9;13010:23;13000:33;;13052:38;13086:2;13075:9;13071:18;13052:38;:::i;:::-;13042:48;;13141:2;13130:9;13126:18;13113:32;-1:-1:-1;;;;;13160:6:24;13157:30;13154:50;;;13200:1;13197;13190:12;13154:50;13223;13265:7;13256:6;13245:9;13241:22;13223:50;:::i;:::-;12797:533;;;;-1:-1:-1;13213:60:24;;13320:2;13305:18;13292:32;;-1:-1:-1;;;12797:533:24:o;13335:966::-;13476:6;13484;13492;13500;13508;13516;13524;13532;13585:3;13573:9;13564:7;13560:23;13556:33;13553:53;;;13602:1;13599;13592:12;13553:53;13638:9;13625:23;13615:33;;13695:2;13684:9;13680:18;13667:32;13657:42;;13746:2;13735:9;13731:18;13718:32;13708:42;;13797:2;13786:9;13782:18;13769:32;13759:42;;13852:3;13841:9;13837:19;13824:33;-1:-1:-1;;;;;13917:2:24;13909:6;13906:14;13903:34;;;13933:1;13930;13923:12;13903:34;13956:50;13998:7;13989:6;13978:9;13974:22;13956:50;:::i;:::-;13946:60;;14059:3;14048:9;14044:19;14031:33;14015:49;;14089:2;14079:8;14076:16;14073:36;;;14105:1;14102;14095:12;14073:36;;14128:52;14172:7;14161:8;14150:9;14146:24;14128:52;:::i;:::-;14118:62;;;14199:39;14233:3;14222:9;14218:19;14199:39;:::i;:::-;14189:49;;14257:38;14290:3;14279:9;14275:19;14257:38;:::i;:::-;14247:48;;13335:966;;;;;;;;;;;:::o;14306:141::-;14388:1;14381:5;14378:12;14368:46;;14394:18;;:::i;:::-;14423;;14306:141::o;14452:468::-;14680:45;14715:9;14707:6;14680:45;:::i;:::-;14761:3;14756:2;14745:9;14741:18;14734:31;14661:4;14782:46;14823:3;14812:9;14808:19;14800:6;14782:46;:::i;:::-;14859:2;14844:18;;14837:34;;;;-1:-1:-1;14902:2:24;14887:18;14880:34;14774:54;14452:468;-1:-1:-1;;14452:468:24:o;15133:160::-;15198:20;;15254:13;;15247:21;15237:32;;15227:60;;15283:1;15280;15273:12;15298:254;15363:6;15371;15424:2;15412:9;15403:7;15399:23;15395:32;15392:52;;;15440:1;15437;15430:12;15392:52;15463:29;15482:9;15463:29;:::i;:::-;15453:39;;15511:35;15542:2;15531:9;15527:18;15511:35;:::i;15557:458::-;15644:6;15652;15660;15713:2;15701:9;15692:7;15688:23;15684:32;15681:52;;;15729:1;15726;15719:12;15681:52;15765:9;15752:23;15742:33;;15822:2;15811:9;15807:18;15794:32;15784:42;;15877:2;15866:9;15862:18;15849:32;-1:-1:-1;;;;;15896:6:24;15893:30;15890:50;;;15936:1;15933;15926:12;16020:416;16113:6;16121;16174:2;16162:9;16153:7;16149:23;16145:32;16142:52;;;16190:1;16187;16180:12;16142:52;16226:9;16213:23;16203:33;;16287:2;16276:9;16272:18;16259:32;-1:-1:-1;;;;;16306:6:24;16303:30;16300:50;;;16346:1;16343;16336:12;16300:50;16369:61;16422:7;16413:6;16402:9;16398:22;16369:61;:::i;16441:629::-;16708:3;16697:9;16690:22;16671:4;16735:46;16776:3;16765:9;16761:19;16753:6;16735:46;:::i;:::-;16829:9;16821:6;16817:22;16812:2;16801:9;16797:18;16790:50;16863:33;16889:6;16881;16863:33;:::i;:::-;16849:47;;16944:9;16936:6;16932:22;16927:2;16916:9;16912:18;16905:50;16972:33;16998:6;16990;16972:33;:::i;:::-;16964:41;;;17055:6;17048:14;17041:22;17036:2;17025:9;17021:18;17014:50;16441:629;;;;;;;:::o;17075:362::-;17280:2;17269:9;17262:21;17243:4;17300:45;17341:2;17330:9;17326:18;17318:6;17300:45;:::i;:::-;17376:2;17361:18;;17354:34;;;;-1:-1:-1;17419:2:24;17404:18;17397:34;17292:53;17075:362;-1:-1:-1;17075:362:24:o;17442:322::-;17516:6;17524;17532;17585:2;17573:9;17564:7;17560:23;17556:32;17553:52;;;17601:1;17598;17591:12;17553:52;17637:9;17624:23;17614:33;;17666:38;17700:2;17689:9;17685:18;17666:38;:::i;:::-;17656:48;;17723:35;17754:2;17743:9;17739:18;17723:35;:::i;17769:260::-;17837:6;17845;17898:2;17886:9;17877:7;17873:23;17869:32;17866:52;;;17914:1;17911;17904:12;17866:52;17937:29;17956:9;17937:29;:::i;:::-;17927:39;;17985:38;18019:2;18008:9;18004:18;17985:38;:::i;18034:888::-;18087:5;18140:3;18133:4;18125:6;18121:17;18117:27;18107:55;;18158:1;18155;18148:12;18107:55;18194:6;18181:20;18220:4;18244:60;18260:43;18300:2;18260:43;:::i;18244:60::-;18338:15;;;18424:1;18420:10;;;;18408:23;;18404:32;;;18369:12;;;;18448:15;;;18445:35;;;18476:1;18473;18466:12;18445:35;18512:2;18504:6;18500:15;18524:369;18540:6;18535:3;18532:15;18524:369;;;18626:3;18613:17;-1:-1:-1;;;;;18649:11:24;18646:35;18643:125;;;18722:1;18751:2;18747;18740:14;18643:125;18793:57;18846:3;18841:2;18827:11;18819:6;18815:24;18811:33;18793:57;:::i;:::-;18781:70;;-1:-1:-1;18871:12:24;;;;18557;;18524:369;;18927:1180;19135:6;19143;19151;19159;19167;19175;19183;19236:3;19224:9;19215:7;19211:23;19207:33;19204:53;;;19253:1;19250;19243:12;19204:53;19289:9;19276:23;19266:33;;19350:2;19339:9;19335:18;19322:32;-1:-1:-1;;;;;19414:2:24;19406:6;19403:14;19400:34;;;19430:1;19427;19420:12;19400:34;19453:50;19495:7;19486:6;19475:9;19471:22;19453:50;:::i;:::-;19443:60;;19553:2;19542:9;19538:18;19525:32;19512:45;;19586:1;19579:5;19576:12;19566:40;;19602:1;19599;19592:12;19566:40;19625:5;;-1:-1:-1;19677:2:24;19662:18;;19649:32;;-1:-1:-1;19728:3:24;19713:19;;19700:33;;-1:-1:-1;19786:3:24;19771:19;;19758:33;;19803:16;;;19800:36;;;19832:1;19829;19822:12;19800:36;19855:62;19909:7;19898:8;19887:9;19883:24;19855:62;:::i;:::-;19845:72;;19970:3;19959:9;19955:19;19942:33;19926:49;;20000:2;19990:8;19987:16;19984:36;;;20016:1;20013;20006:12;19984:36;;20039:62;20093:7;20082:8;20071:9;20067:24;20039:62;:::i;:::-;20029:72;;;18927:1180;;;;;;;;;;:::o;20112:607::-;20216:6;20224;20232;20240;20248;20301:3;20289:9;20280:7;20276:23;20272:33;20269:53;;;20318:1;20315;20308:12;20269:53;20341:29;20360:9;20341:29;:::i;:::-;20331:39;;20389:38;20423:2;20412:9;20408:18;20389:38;:::i;:::-;20379:48;;20474:2;20463:9;20459:18;20446:32;20436:42;;20525:2;20514:9;20510:18;20497:32;20487:42;;20580:3;20569:9;20565:19;20552:33;-1:-1:-1;;;;;20600:6:24;20597:30;20594:50;;;20640:1;20637;20630:12;20594:50;20663;20705:7;20696:6;20685:9;20681:22;20663:50;:::i;20724:186::-;20783:6;20836:2;20824:9;20815:7;20811:23;20807:32;20804:52;;;20852:1;20849;20842:12;20804:52;20875:29;20894:9;20875:29;:::i;20915:322::-;20992:6;21000;21008;21061:2;21049:9;21040:7;21036:23;21032:32;21029:52;;;21077:1;21074;21067:12;21029:52;21100:29;21119:9;21100:29;:::i;:::-;21090:39;21176:2;21161:18;;21148:32;;-1:-1:-1;21227:2:24;21212:18;;;21199:32;;20915:322;-1:-1:-1;;;20915:322:24:o;21242:616::-;21294:3;21332:5;21326:12;21359:6;21354:3;21347:19;21385:4;21426:2;21421:3;21417:12;21451:11;21478;21471:18;;21528:6;21525:1;21521:14;21514:5;21510:26;21498:38;;21570:2;21563:5;21559:14;21591:1;21601:231;21615:6;21612:1;21609:13;21601:231;;;21686:5;21680:4;21676:16;21671:3;21664:29;21714:38;21747:4;21738:6;21732:13;21714:38;:::i;:::-;21810:12;;;;21706:46;-1:-1:-1;21775:15:24;;;;21637:1;21630:9;21601:231;;;-1:-1:-1;21848:4:24;;21242:616;-1:-1:-1;;;;;;;21242:616:24:o;21863:965::-;22048:2;22037:9;22030:21;22060:61;22117:2;22106:9;22102:18;22093:6;22087:13;22060:61;:::i;:::-;22011:4;22168:2;22160:6;22156:15;22150:22;22208:4;22203:2;22192:9;22188:18;22181:32;22236:52;22283:3;22272:9;22268:19;22254:12;22236:52;:::i;:::-;22222:66;;22342:2;22334:6;22330:15;22324:22;22319:2;22308:9;22304:18;22297:50;22402:2;22394:6;22390:15;22384:22;22378:3;22367:9;22363:19;22356:51;22456:3;22448:6;22444:16;22438:23;22484:2;22480:7;22552:2;22540:9;22532:6;22528:22;22524:31;22518:3;22507:9;22503:19;22496:60;22579:51;22623:6;22607:14;22579:51;:::i;:::-;22565:65;;22679:3;22671:6;22667:16;22661:23;22639:45;;22750:2;22738:9;22730:6;22726:22;22722:31;22715:4;22704:9;22700:20;22693:61;;22771:51;22815:6;22799:14;22771:51;:::i;:::-;22763:59;21863:965;-1:-1:-1;;;;;21863:965:24:o;22833:380::-;22912:1;22908:12;;;;22955;;;22976:61;;23030:4;23022:6;23018:17;23008:27;;22976:61;23083:2;23075:6;23072:14;23052:18;23049:38;23046:161;;23129:10;23124:3;23120:20;23117:1;23110:31;23164:4;23161:1;23154:15;23192:4;23189:1;23182:15;23046:161;;22833:380;;;:::o;23350:127::-;23411:10;23406:3;23402:20;23399:1;23392:31;23442:4;23439:1;23432:15;23466:4;23463:1;23456:15;23482:217;23522:1;23548;23538:132;;23592:10;23587:3;23583:20;23580:1;23573:31;23627:4;23624:1;23617:15;23655:4;23652:1;23645:15;23538:132;-1:-1:-1;23684:9:24;;23482:217::o;23704:344::-;23906:2;23888:21;;;23945:2;23925:18;;;23918:30;-1:-1:-1;;;23979:2:24;23964:18;;23957:50;24039:2;24024:18;;23704:344::o;24179:1020::-;24355:3;24384:1;24417:6;24411:13;24447:36;24473:9;24447:36;:::i;:::-;24502:1;24519:18;;;24546:133;;;;24693:1;24688:356;;;;24512:532;;24546:133;-1:-1:-1;;24579:24:24;;24567:37;;24652:14;;24645:22;24633:35;;24624:45;;;-1:-1:-1;24546:133:24;;24688:356;24719:6;24716:1;24709:17;24749:4;24794:2;24791:1;24781:16;24819:1;24833:165;24847:6;24844:1;24841:13;24833:165;;;24925:14;;24912:11;;;24905:35;24968:16;;;;24862:10;;24833:165;;;24837:3;;;25027:6;25022:3;25018:16;25011:23;;24512:532;;;;;25075:6;25069:13;25091:68;25150:8;25145:3;25138:4;25130:6;25126:17;25091:68;:::i;:::-;25175:18;;24179:1020;-1:-1:-1;;;;24179:1020:24:o;25204:289::-;25335:3;25373:6;25367:13;25389:66;25448:6;25443:3;25436:4;25428:6;25424:17;25389:66;:::i;:::-;25471:16;;;;;25204:289;-1:-1:-1;;25204:289:24:o;25843:168::-;25916:9;;;25947;;25964:15;;;25958:22;;25944:37;25934:71;;25985:18;;:::i;28033:125::-;28098:9;;;28119:10;;;28116:36;;;28132:18;;:::i;28163:135::-;28202:3;28223:17;;;28220:43;;28243:18;;:::i;:::-;-1:-1:-1;28290:1:24;28279:13;;28163:135::o;28646:545::-;28748:2;28743:3;28740:11;28737:448;;;28784:1;28809:5;28805:2;28798:17;28854:4;28850:2;28840:19;28924:2;28912:10;28908:19;28905:1;28901:27;28895:4;28891:38;28960:4;28948:10;28945:20;28942:47;;;-1:-1:-1;28983:4:24;28942:47;29038:2;29033:3;29029:12;29026:1;29022:20;29016:4;29012:31;29002:41;;29093:82;29111:2;29104:5;29101:13;29093:82;;;29156:17;;;29137:1;29126:13;29093:82;;29367:1352;29493:3;29487:10;-1:-1:-1;;;;;29512:6:24;29509:30;29506:56;;;29542:18;;:::i;:::-;29571:97;29661:6;29621:38;29653:4;29647:11;29621:38;:::i;:::-;29615:4;29571:97;:::i;:::-;29723:4;;29787:2;29776:14;;29804:1;29799:663;;;;30506:1;30523:6;30520:89;;;-1:-1:-1;30575:19:24;;;30569:26;30520:89;-1:-1:-1;;29324:1:24;29320:11;;;29316:24;29312:29;29302:40;29348:1;29344:11;;;29299:57;30622:81;;29769:944;;29799:663;24126:1;24119:14;;;24163:4;24150:18;;-1:-1:-1;;29835:20:24;;;29953:236;29967:7;29964:1;29961:14;29953:236;;;30056:19;;;30050:26;30035:42;;30148:27;;;;30116:1;30104:14;;;;29983:19;;29953:236;;;29957:3;30217:6;30208:7;30205:19;30202:201;;;30278:19;;;30272:26;-1:-1:-1;;30361:1:24;30357:14;;;30373:3;30353:24;30349:37;30345:42;30330:58;30315:74;;30202:201;-1:-1:-1;;;;;30449:1:24;30433:14;;;30429:22;30416:36;;-1:-1:-1;29367:1352:24:o;30724:127::-;30785:10;30780:3;30776:20;30773:1;30766:31;30816:4;30813:1;30806:15;30840:4;30837:1;30830:15;31551:291;31728:2;31717:9;31710:21;31691:4;31748:45;31789:2;31778:9;31774:18;31766:6;31748:45;:::i;:::-;31740:53;;31829:6;31824:2;31813:9;31809:18;31802:34;31551:291;;;;;:::o;36498:561::-;-1:-1:-1;;;;;36795:15:24;;;36777:34;;36847:15;;36842:2;36827:18;;36820:43;36894:2;36879:18;;36872:34;;;36937:2;36922:18;;36915:34;;;36757:3;36980;36965:19;;36958:32;;;36720:4;;37007:46;;37033:19;;37025:6;37007:46;:::i;:::-;36999:54;36498:561;-1:-1:-1;;;;;;;36498:561:24:o;37064:249::-;37133:6;37186:2;37174:9;37165:7;37161:23;37157:32;37154:52;;;37202:1;37199;37192:12;37154:52;37234:9;37228:16;37253:30;37277:5;37253:30;:::i;37318:827::-;-1:-1:-1;;;;;37715:15:24;;;37697:34;;37767:15;;37762:2;37747:18;;37740:43;37677:3;37814:2;37799:18;;37792:31;;;37640:4;;37846:57;;37883:19;;37875:6;37846:57;:::i;:::-;37951:9;37943:6;37939:22;37934:2;37923:9;37919:18;37912:50;37985:44;38022:6;38014;37985:44;:::i;:::-;37971:58;;38078:9;38070:6;38066:22;38060:3;38049:9;38045:19;38038:51;38106:33;38132:6;38124;38106:33;:::i;:::-;38098:41;37318:827;-1:-1:-1;;;;;;;;37318:827:24:o;38572:465::-;38829:2;38818:9;38811:21;38792:4;38855:56;38907:2;38896:9;38892:18;38884:6;38855:56;:::i;:::-;38959:9;38951:6;38947:22;38942:2;38931:9;38927:18;38920:50;38987:44;39024:6;39016;38987:44;:::i"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","batchTransformToSouvenirs(uint256,address[])":"b4611fa8","burn(address,uint256,uint256)":"f5298aca","burnBatch(address,uint256[],uint256[])":"6b20c454","canAccessArea(uint256,uint256,string)":"aa7c4df5","consumePerk(uint256,address,string,uint256)":"73f20eb6","createEvent(uint256,uint256,uint256,uint256,string,string,address,uint96)":"85af5762","createTier(uint256,string,uint8,uint256,uint256,string[],string[])":"edb2b214","eventTierCount(uint256)":"166cc944","eventTiers(uint256,uint256)":"8920dd14","eventTokenCounter(uint256)":"2432ada5","events(uint256)":"0b791430","exists(uint256)":"4f558e79","getPerkStatus(uint256,address,string)":"103f770f","getSeatAssignment(uint256,uint256)":"268bad9b","getTicketState(uint256,address)":"e1313346","getTierInfo(uint256,uint256)":"fe6ad9d5","isApprovedForAll(address,address)":"e985e9c5","mintTicketWithTier(uint256,uint256,address,string,string,string)":"47fb430f","name()":"06fdde03","owner()":"8da5cb5b","perkTracking(uint256,address,string)":"c33c66fa","renounceOwnership()":"715018a6","royaltyInfo(uint256,uint256)":"2a55205a","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","seatAssignments(uint256,uint256)":"bc2336e2","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","ticketStates(uint256,address)":"5bcd5dfb","tokenToTier(uint256)":"34bcadb6","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","transferOwnership(address)":"f2fde38b","updateRoyalty(uint256,address,uint96)":"417ac869","uri(uint256)":"0e89341c","useTicket(uint256,address,bool)":"e4139493","usedTickets(uint256,address)":"a8cb2f37"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventTimestamp\",\"type\":\"uint256\"}],\"name\":\"EventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"perkName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"PerkConsumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"royaltyBps\",\"type\":\"uint96\"}],\"name\":\"RoyaltyConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"section\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"row\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"seat\",\"type\":\"string\"}],\"name\":\"SeatAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"name\":\"TicketMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum UnchainedTickets.TicketState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"TicketTransformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TicketUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tierName\",\"type\":\"string\"}],\"name\":\"TierCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"}],\"name\":\"batchTransformToSouvenirs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"area\",\"type\":\"string\"}],\"name\":\"canAccessArea\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ticketHolder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"perkName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"consumePerk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"souvenirMetadataURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyBps\",\"type\":\"uint96\"}],\"name\":\"createEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tierName\",\"type\":\"string\"},{\"internalType\":\"enum UnchainedTickets.TicketTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceCents\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"accessAreas\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"includedPerks\",\"type\":\"string[]\"}],\"name\":\"createTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventTierCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventTiers\",\"outputs\":[{\"internalType\":\"enum UnchainedTickets.TicketTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"tierName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceCents\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventEndTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"souvenirMetadataURI\",\"type\":\"string\"},{\"internalType\":\"uint96\",\"name\":\"royaltyBps\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"perkName\",\"type\":\"string\"}],\"name\":\"getPerkStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"consumed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSeatAssignment\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"section\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"row\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"seat\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getTicketState\",\"outputs\":[{\"internalType\":\"enum UnchainedTickets.TicketState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"name\":\"getTierInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum UnchainedTickets.TicketTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"tierName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceCents\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"accessAreas\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"includedPerks\",\"type\":\"string[]\"}],\"internalType\":\"struct UnchainedTickets.TierConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"section\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"row\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"seat\",\"type\":\"string\"}],\"name\":\"mintTicketWithTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"perkTracking\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"perkName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"consumed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seatAssignments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"section\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"row\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"seat\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"assigned\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketStates\",\"outputs\":[{\"internalType\":\"enum UnchainedTickets.TicketState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyBps\",\"type\":\"uint96\"}],\"name\":\"updateRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ticketHolder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"transformToSouvenir\",\"type\":\"bool\"}],\"name\":\"useTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usedTickets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Advanced ERC1155 NFT contract for event tickets on Base blockchain\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for a specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"batchTransformToSouvenirs(uint256,address[])\":{\"details\":\"Transform all tickets for an event to souvenirs (batch operation post-event)\"},\"canAccessArea(uint256,uint256,string)\":{\"details\":\"Check if holder can access a specific area\"},\"consumePerk(uint256,address,string,uint256)\":{\"details\":\"Consume a perk (e.g., redeem a free beer)\"},\"createEvent(uint256,uint256,uint256,uint256,string,string,address,uint96)\":{\"details\":\"Create a new event with ticket supply and royalty configuration\"},\"createTier(uint256,string,uint8,uint256,uint256,string[],string[])\":{\"details\":\"Create a ticket tier for an event\"},\"exists(uint256)\":{\"details\":\"Check if token exists\"},\"getPerkStatus(uint256,address,string)\":{\"details\":\"Get perk consumption status\"},\"getSeatAssignment(uint256,uint256)\":{\"details\":\"Get seat assignment for a token\"},\"getTicketState(uint256,address)\":{\"details\":\"Get ticket state (ACTIVE, USED, SOUVENIR)\"},\"getTierInfo(uint256,uint256)\":{\"details\":\"Get tier information\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"mintTicketWithTier(uint256,uint256,address,string,string,string)\":{\"details\":\"Mint a ticket for a specific tier with optional seat assignment\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Override transfer to enforce resale restrictions - Cannot transfer during event (between start and end time) - Can transfer before or after event - Royalties enforced on secondary sales via ERC2981\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"setBaseURI(string)\":{\"details\":\"Set base URI\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRoyalty(uint256,address,uint96)\":{\"details\":\"Update royalty configuration for an event\"},\"uri(uint256)\":{\"details\":\"Get token URI - returns souvenir metadata if transformed\"},\"useTicket(uint256,address,bool)\":{\"details\":\"Use a ticket (check-in) and optionally transform to souvenir\"}},\"title\":\"UnchainedTickets\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Features: - Royalty enforcement (ERC2981) for secondary sales - Configurable ticket tiers (VIP, GA, etc.) with access control - Perks tracking (meals, drinks, etc.) and consumption status - Time-based resale restrictions (no sales during event) - Automatic transformation to souvenir NFT after use - Section and seat assignments - Anti-counterfeiting through blockchain ownership\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnchainedTickets.sol\":\"UnchainedTickets\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xafab0e6c71905303c47dd254168cb31efc91f0ae284cde609b0202f97f85469e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://824d05aec56eb82a2a3c28eece530dc0792d3a008b09d01444e57cf4aceb0445\",\"dweb:/ipfs/QmVvqmJ5UobuRU9Q4JMyXxBfzKs2cpjbWXMNpxX4binTX8\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xfb3846932e2bcdc16d400502e89a452551eaf522e3db3e4de634d6bc167500c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc3b4ca11ea0e46816996b888042dd400217596fbfe53c54a0a41c51979c35c4\",\"dweb:/ipfs/QmanCqi8fhxUi2KfL5pnkqFnYacPNRV8gEXrfB6nozEPjV\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0xa33062c6e0675a74a27b06a4ae4c6ad4d3b7219e27d9c146a4ac57295096d393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777543d88013fdd0ee7f47ac619fb13a1993bb667675d8816fde024f73cfbf2d\",\"dweb:/ipfs/QmfDS9uL1XZ2oUe1PH8eRCRyu3Hf98cK8ksGf4Ww7kg5zv\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/UnchainedTickets.sol\":{\"keccak256\":\"0x7b5771ccaa4f2168428900e70d26c8273c967efa8656b651d92a6f5de3943b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c86d78a475366012a1307875704cbbd72ad606eed611b24c1b1a17a019c6fe\",\"dweb:/ipfs/QmRdeXcHDL2xuuUoVXziWiDS14HrHZPhYciCMxVyiaGFV9\"]}},\"version\":1}"}}}}}